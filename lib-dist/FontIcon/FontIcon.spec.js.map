{"version":3,"sources":["../../src/FontIcon/FontIcon.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","it","wrapper","ok","is","contains","equal","props","style","color","onMouseEnter","simulate","calledOnce","onMouseLeave","backgroundColor","get"],"mappings":"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","file":"FontIcon.spec.js","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport {spy} from 'sinon';\nimport {shallow} from 'enzyme';\nimport {assert} from 'chai';\nimport FontIcon from './FontIcon';\nimport getMuiTheme from '../styles/getMuiTheme';\n\ndescribe('<FontIcon />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node) => shallow(node, {context: {muiTheme}});\n\n  it('renders className', () => {\n    const wrapper = shallowWithContext(\n      <FontIcon\n        className=\"muidocs-icon-action-home\"\n      />\n    );\n\n    assert.ok(wrapper.is('.muidocs-icon-action-home'), 'should contain the className');\n  });\n\n  it('renders children by default', () => {\n    const wrapper = shallowWithContext(\n      <FontIcon className=\"material-icons\">home</FontIcon>\n    );\n\n    assert.ok(wrapper.contains('home'), 'should contain the children');\n  });\n\n  it('renders children and color', () => {\n    const wrapper = shallowWithContext(\n      <FontIcon className=\"material-icons\" color=\"red\">home</FontIcon>\n    );\n\n    assert.ok(wrapper.contains('home'), 'should contain the children');\n    assert.equal(wrapper.node.props.style.color, 'red', 'should have color set to red');\n  });\n\n  it('renders children and hoverColor when mouseEnter', () => {\n    const onMouseEnter = spy();\n    const wrapper = shallowWithContext(\n      <FontIcon\n        className=\"material-icons\"\n        color=\"red\"\n        hoverColor=\"green\"\n        onMouseEnter={onMouseEnter}\n      >\n        home\n      </FontIcon>\n    );\n\n    assert.ok(wrapper.contains('home'), 'should contain the children');\n    assert.equal(wrapper.node.props.style.color, 'red', 'should have color set to red');\n    wrapper.simulate('mouseEnter');\n    assert.equal(wrapper.node.props.style.color, 'green', 'should have color set to green after hover');\n    assert.equal(onMouseEnter.calledOnce, true,\n      'should have called onMouseEnter callback function');\n  });\n\n  it('renders children and call onMouseEnter callback', () => {\n    const onMouseEnter = spy();\n    const wrapper = shallowWithContext(\n      <FontIcon className=\"material-icons\" onMouseEnter={onMouseEnter}>home</FontIcon>\n    );\n\n    wrapper.simulate('mouseEnter');\n    assert.ok(wrapper.contains('home'), 'should contain the children');\n    assert.equal(onMouseEnter.calledOnce, true,\n      'should have called onMouseEnter callback function');\n  });\n\n  it('renders children and call onMouseLeave callback', () => {\n    const onMouseLeave = spy();\n    const wrapper = shallowWithContext(\n      <FontIcon className=\"material-icons\" onMouseLeave={onMouseLeave}>home</FontIcon>\n    );\n\n    wrapper.simulate('mouseLeave');\n    assert.ok(wrapper.contains('home'), 'should contain the children');\n    assert.equal(onMouseLeave.calledOnce, true,\n      'should have called onMouseLeave callback function');\n  });\n\n  it('renders children and overwrite styles', () => {\n    const style = {\n      backgroundColor: 'red',\n    };\n    const wrapper = shallowWithContext(\n      <FontIcon className=\"material-icons\" style={style}>home</FontIcon>\n    );\n\n    assert.equal(wrapper.get(0).props.style.backgroundColor, style.backgroundColor,\n      'should have backgroundColor to red');\n  });\n});\n"]}