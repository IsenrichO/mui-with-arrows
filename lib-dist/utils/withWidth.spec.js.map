{"version":3,"sources":["../../src/utils/withWidth.spec.js"],"names":["describe","Dumb","DumbWithWidth","it","wrapper","strictEqual","type","find","props","width"],"mappings":";;AAEA;;;;AACA;;AACA;;AACA;;;;;;AALA;;AAOAA,SAAS,iBAAT,EAA4B,YAAM;AAChC,MAAMC,OAAO,SAAPA,IAAO;AAAA,WAAM,0CAAN;AAAA,GAAb;AACA,MAAMC,gBAAgB,2BAAYD,IAAZ,CAAtB;;AAEAD,WAAS,uBAAT,EAAkC,YAAM;AACtCG,OAAG,wDAAH,EAA6D,YAAM;AACjE,UAAMC,UAAU,qBAAQ,8BAAC,aAAD,OAAR,CAAhB;AACA,mBAAOC,WAAP,CAAmBD,QAAQE,IAAR,EAAnB,EAAmC,IAAnC,EAAyC,uBAAzC;AACD,KAHD;AAID,GALD;;AAOAN,WAAS,aAAT,EAAwB,YAAM;AAC5BG,OAAG,+BAAH,EAAoC,YAAM;AACxC,UAAMC,UAAU,mBAAM,8BAAC,aAAD,IAAe,wBAAf,GAAN,CAAhB;;AAEA,mBAAOC,WAAP,CAAmBD,QAAQG,IAAR,CAAaN,IAAb,EAAmBO,KAAnB,GAA2BC,KAA9C;AACD,KAJD;AAKD,GAND;;AAQAT,WAAS,SAAT,EAAoB,YAAM;AACxBG,OAAG,qDAAH,EAA0D,YAAM;AAC9D,UAAMC,UAAU,mBAAM,8BAAC,aAAD,OAAN,CAAhB;;AAEA,mBAAOC,WAAP,CAAmBD,QAAQG,IAAR,CAAaN,IAAb,EAAmBO,KAAnB,GAA2BC,KAA9C;AACD,KAJD;AAKD,GAND;AAOD,CA1BD","file":"withWidth.spec.js","sourcesContent":["/* eslint-env mocha */\n\nimport React from 'react';\nimport {shallow, mount} from 'enzyme';\nimport {assert} from 'chai';\nimport withWidth, {MEDIUM, LARGE} from './withWidth';\n\ndescribe('utils/withWidth', () => {\n  const Dumb = () => <div />;\n  const DumbWithWidth = withWidth()(Dumb);\n\n  describe('server side rendering', () => {\n    it('should not render the children as the width is unknown', () => {\n      const wrapper = shallow(<DumbWithWidth />);\n      assert.strictEqual(wrapper.type(), null, 'should render nothing');\n    });\n  });\n\n  describe('prop: width', () => {\n    it('should be able to override it', () => {\n      const wrapper = mount(<DumbWithWidth width={MEDIUM} />);\n\n      assert.strictEqual(wrapper.find(Dumb).props().width, MEDIUM);\n    });\n  });\n\n  describe('browser', () => {\n    it('should provide the right width to the child element', () => {\n      const wrapper = mount(<DumbWithWidth />);\n\n      assert.strictEqual(wrapper.find(Dumb).props().width, LARGE);\n    });\n  });\n});\n"]}