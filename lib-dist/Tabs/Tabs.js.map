{"version":3,"sources":["../../src/Tabs/Tabs.js"],"names":["getStyles","props","context","tabs","muiTheme","tabItemContainer","width","backgroundColor","whiteSpace","display","Tabs","state","selectedIndex","handleTabTouchTap","value","event","tab","valueLink","getValueLink","index","requestChange","setState","onActive","componentWillMount","initialIndex","initialSelectedIndex","undefined","getSelectedIndex","getTabCount","componentWillReceiveProps","newProps","nextContext","newState","getTabs","forEach","children","push","length","onChange","getSelected","render","contentContainerClassName","contentContainerStyle","inkBarStyle","style","tabItemContainerStyle","tabTemplate","tabTemplateStyle","other","prepareStyles","styles","tabValue","tabContent","map","type","muiName","key","selected","onTouchTap","inkBar","inkBarContainerWidth","propTypes","node","className","string","object","number","func","any","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"Tabs.js","sourcesContent":["import React, {Component, createElement, cloneElement, Children, isValidElement} from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport TabTemplate from './TabTemplate';\nimport InkBar from './InkBar';\n\nfunction getStyles(props, context) {\n  const {tabs} = context.muiTheme;\n\n  return {\n    tabItemContainer: {\n      width: '100%',\n      backgroundColor: tabs.backgroundColor,\n      whiteSpace: 'nowrap',\n      display: 'flex',\n    },\n  };\n}\n\nclass Tabs extends Component {\n  static propTypes = {\n    /**\n     * Should be used to pass `Tab` components.\n     */\n    children: PropTypes.node,\n    /**\n     * The css class name of the root element.\n     */\n    className: PropTypes.string,\n    /**\n     * The css class name of the content's container.\n     */\n    contentContainerClassName: PropTypes.string,\n    /**\n     * Override the inline-styles of the content's container.\n     */\n    contentContainerStyle: PropTypes.object,\n    /**\n     * Specify initial visible tab index.\n     * If `initialSelectedIndex` is set but larger than the total amount of specified tabs,\n     * `initialSelectedIndex` will revert back to default.\n     * If `initialSelectedIndex` is set to any negative value, no tab will be selected intially.\n     */\n    initialSelectedIndex: PropTypes.number,\n    /**\n     * Override the inline-styles of the InkBar.\n     */\n    inkBarStyle: PropTypes.object,\n    /**\n     * Called when the selected value change.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * Override the inline-styles of the tab-labels container.\n     */\n    tabItemContainerStyle: PropTypes.object,\n    /**\n     * Override the default tab template used to wrap the content of each tab element.\n     */\n    tabTemplate: PropTypes.func,\n    /**\n     * Override the inline-styles of the tab template.\n     */\n    tabTemplateStyle: PropTypes.object,\n    /**\n     * Makes Tabs controllable and selects the tab whose value prop matches this prop.\n     */\n    value: PropTypes.any,\n  };\n\n  static defaultProps = {\n    initialSelectedIndex: 0,\n    onChange: () => {},\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {selectedIndex: 0};\n\n  componentWillMount() {\n    const valueLink = this.getValueLink(this.props);\n    const initialIndex = this.props.initialSelectedIndex;\n\n    this.setState({\n      selectedIndex: valueLink.value !== undefined ?\n        this.getSelectedIndex(this.props) :\n        initialIndex < this.getTabCount() ?\n        initialIndex :\n        0,\n    });\n  }\n\n  componentWillReceiveProps(newProps, nextContext) {\n    const valueLink = this.getValueLink(newProps);\n    const newState = {\n      muiTheme: nextContext.muiTheme || this.context.muiTheme,\n    };\n\n    if (valueLink.value !== undefined) {\n      newState.selectedIndex = this.getSelectedIndex(newProps);\n    }\n\n    this.setState(newState);\n  }\n\n  getTabs(props = this.props) {\n    const tabs = [];\n\n    Children.forEach(props.children, (tab) => {\n      if (isValidElement(tab)) {\n        tabs.push(tab);\n      }\n    });\n\n    return tabs;\n  }\n\n  getTabCount() {\n    return this.getTabs().length;\n  }\n\n  // Do not use outside of this component, it will be removed once valueLink is deprecated\n  getValueLink(props) {\n    return props.valueLink || {\n      value: props.value,\n      requestChange: props.onChange,\n    };\n  }\n\n  getSelectedIndex(props) {\n    const valueLink = this.getValueLink(props);\n    let selectedIndex = -1;\n\n    this.getTabs(props).forEach((tab, index) => {\n      if (valueLink.value === tab.props.value) {\n        selectedIndex = index;\n      }\n    });\n\n    return selectedIndex;\n  }\n\n  handleTabTouchTap = (value, event, tab) => {\n    const valueLink = this.getValueLink(this.props);\n    const index = tab.props.index;\n\n    if ((valueLink.value && valueLink.value !== value) ||\n      this.state.selectedIndex !== index) {\n      valueLink.requestChange(value, event, tab);\n    }\n\n    this.setState({selectedIndex: index});\n\n    if (tab.props.onActive) {\n      tab.props.onActive(tab);\n    }\n  };\n\n  getSelected(tab, index) {\n    const valueLink = this.getValueLink(this.props);\n    return valueLink.value ? valueLink.value === tab.props.value :\n      this.state.selectedIndex === index;\n  }\n\n  render() {\n    const {\n      contentContainerClassName,\n      contentContainerStyle,\n      initialSelectedIndex, // eslint-disable-line no-unused-vars\n      inkBarStyle,\n      onChange, // eslint-disable-line no-unused-vars\n      style,\n      tabItemContainerStyle,\n      tabTemplate,\n      tabTemplateStyle,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n    const valueLink = this.getValueLink(this.props);\n    const tabValue = valueLink.value;\n    const tabContent = [];\n    const width = 100 / this.getTabCount();\n\n    const tabs = this.getTabs().map((tab, index) => {\n      warning(tab.type && tab.type.muiName === 'Tab',\n        `Material-UI: Tabs only accepts Tab Components as children.\n        Found ${tab.type.muiName || tab.type} as child number ${index + 1} of Tabs`);\n\n      warning(!tabValue || tab.props.value !== undefined,\n        `Material-UI: Tabs value prop has been passed, but Tab ${index}\n        does not have a value prop. Needs value if Tabs is going\n        to be a controlled component.`);\n\n      tabContent.push(tab.props.children ?\n        createElement(tabTemplate || TabTemplate, {\n          key: index,\n          selected: this.getSelected(tab, index),\n          style: tabTemplateStyle,\n        }, tab.props.children) : undefined);\n\n      return cloneElement(tab, {\n        key: index,\n        index: index,\n        selected: this.getSelected(tab, index),\n        width: `${width}%`,\n        onTouchTap: this.handleTabTouchTap,\n      });\n    });\n\n    const inkBar = this.state.selectedIndex !== -1 ? (\n      <InkBar\n        left={`${width * this.state.selectedIndex}%`}\n        width={`${width}%`}\n        style={inkBarStyle}\n      />\n    ) : null;\n\n    const inkBarContainerWidth = tabItemContainerStyle ?\n      tabItemContainerStyle.width : '100%';\n\n    return (\n      <div style={prepareStyles(Object.assign({}, style))} {...other}>\n        <div style={prepareStyles(Object.assign(styles.tabItemContainer, tabItemContainerStyle))}>\n          {tabs}\n        </div>\n        <div style={{width: inkBarContainerWidth}}>\n          {inkBar}\n        </div>\n        <div\n          style={prepareStyles(Object.assign({}, contentContainerStyle))}\n          className={contentContainerClassName}\n        >\n          {tabContent}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n"]}