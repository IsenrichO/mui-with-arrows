{"version":3,"sources":["../../src/Slider/Slider.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","muiThemeRtl","isRtl","shallowWithRTLContext","getThumbElement","shallowWrapper","childAt","getTrackContainer","it","wrapper","ok","find","length","strictEqual","state","value","props","required","backgroundColor","style","active","dragging","focused","hovered","handleDragStart","instance","onDragStart","callCount","handleDragStop","onDragStop","setProps","left","max","handleChange","trackContainer","simulate","keyCode","preventDefault","handleFocus","handleBlur","event","previousValue"],"mappings":"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","file":"Slider.spec.js","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {assert} from 'chai';\nimport {spy} from 'sinon';\nimport keycode from 'keycode';\nimport Slider from './Slider';\nimport getMuiTheme from '../styles/getMuiTheme';\n\ndescribe('<Slider />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node) => shallow(node, {context: {muiTheme}});\n  const muiThemeRtl = getMuiTheme({isRtl: true});\n  const shallowWithRTLContext = (node) => shallow(node, {context: {muiTheme: muiThemeRtl}});\n\n  const getThumbElement = function(shallowWrapper) {\n    return shallowWrapper.childAt(0).childAt(0).childAt(2);\n  };\n\n  const getTrackContainer = function(shallowWrapper) {\n    return shallowWrapper.childAt(0);\n  };\n\n  it('renders slider and the hidden input', () => {\n    const wrapper = shallowWithContext(\n      <Slider name=\"slider\" />\n    );\n\n    assert.ok(wrapper.find('input[type=\"hidden\"]').length, 'should contain a hidden input');\n  });\n\n  it('renders slider with an initial value', () => {\n    const wrapper = shallowWithContext(\n      <Slider name=\"slider\" value={0.5} />\n    );\n\n    assert.strictEqual(wrapper.state().value, 0.5, 'should use the value property for the value state');\n    assert.strictEqual(\n      wrapper.find('input[type=\"hidden\"]').props().value,\n      wrapper.state().value,\n      'the input value should be equal state.value'\n    );\n  });\n\n  it('renders slider as a required element in a form', () => {\n    const wrapper = shallowWithContext(\n      <Slider name=\"slider\" required={true} />\n    );\n\n    assert.strictEqual(wrapper.find('input[type=\"hidden\"]').props().required, true);\n  });\n\n  it('checks root node properties', () => {\n    const wrapper = shallowWithContext(\n      <Slider\n        name=\"slider\"\n        style={{\n          backgroundColor: 'red',\n        }}\n      />\n    );\n\n    assert.strictEqual(wrapper.props().style.backgroundColor, 'red', 'root element should have the style object');\n  });\n\n  it('checks slider initial state', () => {\n    const wrapper = shallowWithContext(\n      <Slider name=\"slider\" />\n    );\n\n    assert.strictEqual(wrapper.state().active, false);\n    assert.strictEqual(wrapper.state().dragging, false);\n    assert.strictEqual(wrapper.state().focused, false);\n    assert.strictEqual(wrapper.state().hovered, false);\n  });\n\n  it('checks drag start state', () => {\n    const handleDragStart = spy();\n    const wrapper = shallowWithContext(\n      <Slider name=\"slider\" onDragStart={handleDragStart} />\n    );\n\n    wrapper.instance().onDragStart();\n    assert.strictEqual(handleDragStart.callCount, 1);\n    assert.strictEqual(wrapper.state().active, true);\n    assert.strictEqual(wrapper.state().dragging, true);\n  });\n\n  it('checks drag stop state', () => {\n    const handleDragStop = spy();\n    const wrapper = shallowWithContext(\n      <Slider name=\"slider\" onDragStop={handleDragStop} />\n    );\n\n    wrapper.instance().onDragStop();\n    assert.strictEqual(handleDragStop.callCount, 1);\n    assert.strictEqual(wrapper.state().active, false);\n    assert.strictEqual(wrapper.state().dragging, false);\n  });\n\n  describe('percent', () => {\n    it('checks that percent and value are being updated correctly', () => {\n      const wrapper = shallowWithContext(\n        <Slider\n          name=\"slider\"\n          step={0.5}\n          min={1}\n          max={5}\n        />\n      );\n\n      wrapper.setProps({\n        value: 1,\n      });\n\n      assert.strictEqual(wrapper.state().value, 1);\n      assert.strictEqual(getThumbElement(wrapper).props().style.left, '0%');\n    });\n\n    it('checks that value and percent are updated correctly when max prop changes', () => {\n      const wrapper = shallowWithContext(\n        <Slider\n          name=\"slider\"\n          value={2}\n          min={0}\n          max={10}\n        />\n      );\n\n      assert.strictEqual(wrapper.state().value, 2);\n      assert.strictEqual(getThumbElement(wrapper).props().style.left, '20%');\n\n      wrapper.setProps({max: 4});\n\n      assert.strictEqual(wrapper.state().value, 2);\n      assert.strictEqual(getThumbElement(wrapper).props().style.left, '50%');\n    });\n  });\n\n  it('checks events do not fire on the handle when the slider is disabled', () => {\n    const handleDragStart = spy();\n    const handleChange = spy();\n    const wrapper = shallowWithContext(\n      <Slider\n        name=\"slider\"\n        disabled={true}\n        onDragStart={handleDragStart}\n        onChange={handleChange}\n      />\n    );\n    const trackContainer = getTrackContainer(wrapper);\n\n    trackContainer.simulate('keydown', {\n      keyCode: 33,\n      preventDefault: () => {},\n    });\n    trackContainer.simulate('mousedown');\n    trackContainer.simulate('touchstart');\n\n    assert.strictEqual(handleDragStart.callCount, 0);\n    assert.strictEqual(handleChange.callCount, 0);\n  });\n\n  it('simulates focus event', () => {\n    const handleFocus = spy();\n    const wrapper = shallowWithContext(\n      <Slider name=\"slider\" onFocus={handleFocus} />\n    );\n\n    getTrackContainer(wrapper).simulate('focus');\n    assert.strictEqual(handleFocus.callCount, 1);\n  });\n\n  it('simulates blur event', () => {\n    const handleBlur = spy();\n    const wrapper = shallowWithContext(\n      <Slider name=\"slider\" onBlur={handleBlur} />\n    );\n\n    getTrackContainer(wrapper).simulate('blur');\n    assert.strictEqual(handleBlur.callCount, 1);\n  });\n\n  it('simulates onmouseenter event', () => {\n    const wrapper = shallowWithContext(\n      <Slider name=\"slider\" />\n    );\n\n    getTrackContainer(wrapper).simulate('mouseenter');\n    assert.strictEqual(wrapper.state().hovered, true);\n  });\n\n  it('simulates onmouseleave event', () => {\n    const wrapper = shallowWithContext(\n      <Slider name=\"slider\" />\n    );\n\n    getTrackContainer(wrapper).simulate('mouseleave');\n    assert.strictEqual(wrapper.state().hovered, false);\n  });\n\n  describe('keydown', () => {\n    it('simulates keydown event with a non tracked key', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n      const event = {\n        keyCode: keycode('enter'),\n        preventDefault: spy(),\n      };\n\n      getTrackContainer(wrapper).simulate('keydown', event);\n      assert.strictEqual(event.preventDefault.callCount, 0);\n    });\n\n    it('simulates the end key', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('end'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value, 1);\n    });\n\n    it('simulates the up arrow key', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n      const previousValue = wrapper.state().value;\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('up'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value > previousValue, true);\n    });\n\n    it('simulates the up arrow key on an x-reverse axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"x-reverse\" onChange={handleChange} />\n      );\n      const previousValue = wrapper.state().value;\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('up'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value > previousValue, true);\n    });\n\n    it('simulates the up arrow key on a rtl slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithRTLContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n      const previousValue = wrapper.state().value;\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('up'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value > previousValue, true);\n    });\n\n    it('simulates the up arrow key on a y axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"y\" onChange={handleChange} />\n      );\n      const previousValue = wrapper.state().value;\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('up'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value > previousValue, true);\n    });\n\n    it('simulates the up arrow key on a y-reverse axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"y-reverse\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('up'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the right arrow key', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n      const previousValue = wrapper.state().value;\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('right'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value > previousValue, true);\n    });\n\n    it('simulates the right arrow key on an x-reverse axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"x-reverse\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('right'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the right arrow key on a rtl slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithRTLContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('right'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the right arrow key on an x-reverse rtl slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithRTLContext(\n        <Slider name=\"slider\" axis=\"x-reverse\" onChange={handleChange} />\n      );\n      const previousValue = wrapper.state().value;\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('right'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value > previousValue, true);\n    });\n\n    it('simulates the right arrow key on an y axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"y\" onChange={handleChange} />\n      );\n      const previousValue = wrapper.state().value;\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('right'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value > previousValue, true);\n    });\n\n    it('simulates the right arrow key on an y-reverse axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"y-reverse\" onChange={handleChange} />\n      );\n      const previousValue = wrapper.state().value;\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('right'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value > previousValue, true);\n    });\n\n    it('simulates the home key', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('home'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the home key on a x-reverse axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"x-reverse\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('home'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the home key on a rtl slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithRTLContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('home'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the home key on a y axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"y\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('home'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the home key on a y-reverse axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"y\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('home'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the down arrow key', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('down'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the down arrow key on a x-reverse axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"x-reverse\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('down'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the down arrow key on a rtl slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithRTLContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('down'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the down arrow key on a y axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"y\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('down'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the down arrow key on a y-reverse axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"y-reverse\" onChange={handleChange} />\n      );\n      const previousValue = wrapper.state().value;\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('down'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value > previousValue, true);\n    });\n\n    it('simulates the left arrow key', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('left'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the left arrow key for an x-reverse axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"x-reverse\" onChange={handleChange} />\n      );\n      const previousValue = wrapper.state().value;\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('left'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value > previousValue, true);\n    });\n\n    it('simulates the left arrow key on a rtl slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithRTLContext(\n        <Slider name=\"slider\" onChange={handleChange} />\n      );\n      const previousValue = wrapper.state().value;\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('left'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 1);\n      assert.strictEqual(wrapper.state().value > previousValue, true);\n    });\n\n    it('simulates the left arrow key on an x-reverse rtl slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithRTLContext(\n        <Slider name=\"slider\" axis=\"x-reverse\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('left'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the left arrow key for a y axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"y\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('left'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n\n    it('simulates the left arrow key for a y-reverse axis slider', () => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <Slider name=\"slider\" axis=\"y-reverse\" onChange={handleChange} />\n      );\n\n      getTrackContainer(wrapper).simulate('keydown', {\n        keyCode: keycode('left'),\n        preventDefault: () => {},\n      });\n      assert.strictEqual(handleChange.callCount, 0);\n      assert.strictEqual(wrapper.state().value, 0);\n    });\n  });\n});\n"]}