{"version":3,"sources":["../../src/Slider/Slider.js"],"names":["minMaxPropType","props","propName","componentName","rest","error","number","min","max","errorMsg","Error","valueInRangePropType","value","crossAxisProperty","x","y","crossAxisOffsetProperty","mainAxisProperty","mainAxisMarginFromEnd","mainAxisMarginFromStart","mainAxisOffsetProperty","mainAxisClientProperty","mainAxisClientOffsetProperty","reverseMainAxisOffsetProperty","isMouseControlInverted","axis","calculateAxis","isRtl","getPercent","percent","isNaN","getStyles","context","state","disabled","muiTheme","slider","handleColorZero","handleFillColor","handleSize","handleSizeDisabled","handleSizeActive","trackSize","trackColor","trackColorSelected","rippleColor","selectionColor","fillGutter","disabledGutter","calcDisabledSpacing","calculatedAxis","styles","touchCallout","userSelect","cursor","position","marginTop","marginBottom","track","filledAndRemaining","directionInvariant","transition","easeOut","handle","boxSizing","pointerEvents","zIndex","margin","width","height","backgroundColor","backgroundClip","border","borderRadius","transform","overflow","outline","handleWhenDisabled","handleWhenPercentZero","boxShadow","handleWhenPercentZeroAndDisabled","handleWhenPercentZeroAndFocused","handleWhenActive","ripple","rippleWhenPercentZero","top","left","rippleInner","fill","filled","remaining","hovered","focused","Slider","active","dragging","handleKeyDown","event","step","action","newValue","preventDefault","parseFloat","toFixed","setState","onChange","handleDragMouseMove","onDragUpdate","handleTouchMove","handleMouseEnd","document","removeEventListener","onDragStop","handleTouchEnd","handleTouchStart","getTrackOffset","touches","setValueFromPosition","addEventListener","onDragStart","handleFocus","onFocus","handleBlur","onBlur","handleMouseDown","focus","handleMouseUp","handleMouseEnter","handleMouseLeave","componentWillMount","valueProp","defaultValue","undefined","componentWillReceiveProps","nextProps","getValue","clearValue","getBoundingClientRect","type","dragRunning","requestAnimationFrame","source","positionMax","Math","round","render","disableFocusRipple","name","required","sliderStyle","style","other","prepareStyles","handleStyles","rippleStyle","node","propTypes","oneOf","bool","string","func","object","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"Slider.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport keycode from 'keycode';\nimport warning from 'warning';\nimport transitions from '../styles/transitions';\nimport FocusRipple from '../internal/FocusRipple';\n\n/**\n * Verifies min/max range.\n * @param   {Object} props         Properties of the React component.\n * @param   {String} propName      Name of the property to validate.\n * @param   {String} componentName Name of the component whose property is being validated.\n * @returns {Object} Returns an Error if min >= max otherwise null.\n */\nconst minMaxPropType = (props, propName, componentName, ...rest) => {\n  const error = PropTypes.number(props, propName, componentName, ...rest);\n  if (error !== null) {\n    return error;\n  }\n\n  if (props.min >= props.max) {\n    const errorMsg = (propName === 'min') ? 'min should be less than max' : 'max should be greater than min';\n    return new Error(errorMsg);\n  }\n};\n\n/**\n * Verifies value is within the min/max range.\n * @param   {Object} props         Properties of the React component.\n * @param   {String} propName      Name of the property to validate.\n * @param   {String} componentName Name of the component whose property is being validated.\n * @returns {Object} Returns an Error if the value is not within the range otherwise null.\n */\nconst valueInRangePropType = (props, propName, componentName, ...rest) => {\n  const error = PropTypes.number(props, propName, componentName, ...rest);\n  if (error !== null) {\n    return error;\n  }\n\n  const value = props[propName];\n  if (value < props.min || props.max < value) {\n    return new Error(`${propName} should be within the range specified by min and max`);\n  }\n};\n\nconst crossAxisProperty = {\n  x: 'height',\n  'x-reverse': 'height',\n  y: 'width',\n  'y-reverse': 'width',\n};\n\nconst crossAxisOffsetProperty = {\n  x: 'top',\n  'x-reverse': 'top',\n  y: 'left',\n  'y-reverse': 'left',\n};\n\nconst mainAxisProperty = {\n  x: 'width',\n  'x-reverse': 'width',\n  y: 'height',\n  'y-reverse': 'height',\n};\n\nconst mainAxisMarginFromEnd = {\n  x: 'marginRight',\n  'x-reverse': 'marginLeft',\n  y: 'marginTop',\n  'y-reverse': 'marginBottom',\n};\n\nconst mainAxisMarginFromStart = {\n  x: 'marginLeft',\n  'x-reverse': 'marginRight',\n  y: 'marginBottom',\n  'y-reverse': 'marginTop',\n};\n\nconst mainAxisOffsetProperty = {\n  x: 'left',\n  'x-reverse': 'right',\n  y: 'bottom',\n  'y-reverse': 'top',\n};\n\nconst mainAxisClientProperty = {\n  x: 'clientWidth',\n  'x-reverse': 'clientWidth',\n  y: 'clientHeight',\n  'y-reverse': 'clientHeight',\n};\n\nconst mainAxisClientOffsetProperty = {\n  x: 'clientX',\n  'x-reverse': 'clientX',\n  y: 'clientY',\n  'y-reverse': 'clientY',\n};\n\nconst reverseMainAxisOffsetProperty = {\n  x: 'right',\n  'x-reverse': 'left',\n  y: 'top',\n  'y-reverse': 'bottom',\n};\n\nconst isMouseControlInverted = (axis) => axis === 'x-reverse' || axis === 'y';\n\nconst calculateAxis = (axis, isRtl) => {\n  if (isRtl) {\n    switch (axis) {\n      case 'x':\n        return 'x-reverse';\n      case 'x-reverse':\n        return 'x';\n    }\n  }\n  return axis;\n};\n\nfunction getPercent(value, min, max) {\n  let percent = (value - min) / (max - min);\n  if (isNaN(percent)) {\n    percent = 0;\n  }\n\n  return percent;\n}\n\nconst getStyles = (props, context, state) => {\n  const {\n    axis,\n    disabled,\n    max,\n    min,\n  } = props;\n\n  const {\n    isRtl,\n    slider: {\n      handleColorZero,\n      handleFillColor,\n      handleSize,\n      handleSizeDisabled,\n      handleSizeActive,\n      trackSize,\n      trackColor,\n      trackColorSelected,\n      rippleColor,\n      selectionColor,\n    },\n  } = context.muiTheme;\n\n  const fillGutter = handleSize / 2;\n  const disabledGutter = trackSize + handleSizeDisabled / 2;\n  const calcDisabledSpacing = disabled ? ` - ${disabledGutter}px` : '';\n  const percent = getPercent(state.value, min, max);\n  const calculatedAxis = calculateAxis(axis, isRtl);\n\n  const styles = {\n    slider: {\n      touchCallout: 'none',\n      userSelect: 'none',\n      cursor: 'default',\n      [crossAxisProperty[calculatedAxis]]: handleSizeActive,\n      [mainAxisProperty[calculatedAxis]]: '100%',\n      position: 'relative',\n      marginTop: 24,\n      marginBottom: 48,\n    },\n    track: {\n      position: 'absolute',\n      [crossAxisOffsetProperty[calculatedAxis]]: (handleSizeActive - trackSize) / 2,\n      [mainAxisOffsetProperty[calculatedAxis]]: 0,\n      [mainAxisProperty[calculatedAxis]]: '100%',\n      [crossAxisProperty[calculatedAxis]]: trackSize,\n    },\n    filledAndRemaining: {\n      directionInvariant: true,\n      position: 'absolute',\n      [crossAxisOffsetProperty]: 0,\n      [crossAxisProperty[calculatedAxis]]: '100%',\n      transition: transitions.easeOut(null, 'margin'),\n    },\n    handle: {\n      directionInvariant: true,\n      boxSizing: 'border-box',\n      position: 'absolute',\n      cursor: 'pointer',\n      pointerEvents: 'inherit',\n      [crossAxisOffsetProperty[calculatedAxis]]: 0,\n      [mainAxisOffsetProperty[calculatedAxis]]: percent === 0 ? '0%' : `${(percent * 100)}%`,\n      zIndex: 1,\n      margin: ({\n        x: `${(trackSize / 2)}px 0 0 0`,\n        'x-reverse': `${(trackSize / 2)}px 0 0 0`,\n        y: `0 0 0 ${(trackSize / 2)}px`,\n        'y-reverse': `0 0 0 ${(trackSize / 2)}px`,\n      })[calculatedAxis],\n      width: handleSize,\n      height: handleSize,\n      backgroundColor: selectionColor,\n      backgroundClip: 'padding-box',\n      border: '0px solid transparent',\n      borderRadius: '50%',\n      transform: ({\n        x: 'translate(-50%, -50%)',\n        'x-reverse': 'translate(50%, -50%)',\n        y: 'translate(-50%, 50%)',\n        'y-reverse': 'translate(-50%, -50%)',\n      })[calculatedAxis],\n      transition:\n        `${transitions.easeOut('450ms', 'background')}, ${\n        transitions.easeOut('450ms', 'border-color')}, ${\n        transitions.easeOut('450ms', 'width')}, ${\n        transitions.easeOut('450ms', 'height')}`,\n      overflow: 'visible',\n      outline: 'none',\n    },\n    handleWhenDisabled: {\n      boxSizing: 'content-box',\n      cursor: 'not-allowed',\n      backgroundColor: trackColor,\n      width: handleSizeDisabled,\n      height: handleSizeDisabled,\n      border: 'none',\n    },\n    handleWhenPercentZero: {\n      border: `${trackSize}px solid ${handleColorZero}`,\n      backgroundColor: handleFillColor,\n      boxShadow: 'none',\n    },\n    handleWhenPercentZeroAndDisabled: {\n      cursor: 'not-allowed',\n      width: handleSizeDisabled,\n      height: handleSizeDisabled,\n    },\n    handleWhenPercentZeroAndFocused: {\n      border: `${trackSize}px solid ${trackColorSelected}`,\n    },\n    handleWhenActive: {\n      width: handleSizeActive,\n      height: handleSizeActive,\n    },\n    ripple: {\n      height: handleSize,\n      width: handleSize,\n      overflow: 'visible',\n    },\n    rippleWhenPercentZero: {\n      top: -trackSize,\n      left: -trackSize,\n    },\n    rippleInner: {\n      height: '300%',\n      width: '300%',\n      top: -handleSize,\n      left: -handleSize,\n    },\n    rippleColor: {\n      fill: percent === 0 ? handleColorZero : rippleColor,\n    },\n  };\n  styles.filled = Object.assign({}, styles.filledAndRemaining, {\n    [mainAxisOffsetProperty[calculatedAxis]]: 0,\n    backgroundColor: disabled ? trackColor : selectionColor,\n    [mainAxisMarginFromEnd[calculatedAxis]]: fillGutter,\n    [mainAxisProperty[calculatedAxis]]: `calc(${(percent * 100)}%${calcDisabledSpacing})`,\n  });\n  styles.remaining = Object.assign({}, styles.filledAndRemaining, {\n    [reverseMainAxisOffsetProperty[calculatedAxis]]: 0,\n    backgroundColor: (state.hovered || state.focused) &&\n      !disabled ? trackColorSelected : trackColor,\n    [mainAxisMarginFromStart[calculatedAxis]]: fillGutter,\n    [mainAxisProperty[calculatedAxis]]: `calc(${((1 - percent) * 100)}%${calcDisabledSpacing})`,\n  });\n\n  return styles;\n};\n\nclass Slider extends Component {\n  static propTypes = {\n    /**\n     * The axis on which the slider will slide.\n     */\n    axis: PropTypes.oneOf(['x', 'x-reverse', 'y', 'y-reverse']),\n    /**\n     * The default value of the slider.\n     */\n    defaultValue: valueInRangePropType,\n    /**\n     * Disables focus ripple if set to true.\n     */\n    disableFocusRipple: PropTypes.bool,\n    /**\n     * If true, the slider will not be interactable.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * The maximum value the slider can slide to on\n     * a scale from 0 to 1 inclusive. Cannot be equal to min.\n     */\n    max: minMaxPropType,\n    /**\n     * The minimum value the slider can slide to on a scale\n     * from 0 to 1 inclusive. Cannot be equal to max.\n     */\n    min: minMaxPropType,\n    /**\n     * The name of the slider. Behaves like the name attribute\n     * of an input element.\n     */\n    name: PropTypes.string,\n    /** @ignore */\n    onBlur: PropTypes.func,\n    /**\n     * Callback function that is fired when the slider's value changed.\n     *\n     * @param {object} event KeyDown event targeting the slider.\n     * @param {number} newValue The new value of the slider.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Callback function that is fired when the slider has begun to move.\n     *\n     * @param {object} event MouseDown or TouchStart event targeting the slider.\n     */\n    onDragStart: PropTypes.func,\n    /**\n     * Callback function that is fired when the slide has stopped moving.\n     *\n     * @param {object} event MouseEnd or TouchEnd event targeting the slider.\n     */\n    onDragStop: PropTypes.func,\n    /** @ignore */\n    onFocus: PropTypes.func,\n    /**\n     * Whether or not the slider is required in a form.\n     */\n    required: PropTypes.bool,\n    /**\n     * Override the inline-styles of the inner slider element.\n     */\n    sliderStyle: PropTypes.object,\n    /**\n     * The granularity the slider can step through values.\n     */\n    step: PropTypes.number,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * The value of the slider.\n     */\n    value: valueInRangePropType,\n  };\n\n  static defaultProps = {\n    axis: 'x',\n    disabled: false,\n    disableFocusRipple: false,\n    max: 1,\n    min: 0,\n    required: true,\n    step: 0.01,\n    style: {},\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    active: false,\n    dragging: false,\n    focused: false,\n    hovered: false,\n    value: 0,\n  };\n\n  componentWillMount() {\n    const {\n      value: valueProp,\n      defaultValue,\n      min,\n      max,\n    } = this.props;\n\n    let value = valueProp;\n    if (value === undefined) {\n      value = defaultValue !== undefined ? defaultValue : min;\n    }\n\n    if (value > max) {\n      value = max;\n    } else if (value < min) {\n      value = min;\n    }\n\n    this.setState({\n      value: value,\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== undefined && !this.state.dragging) {\n      this.setState({\n        value: nextProps.value,\n      });\n    }\n  }\n\n  track = null;\n  handle = null;\n\n  handleKeyDown = (event) => {\n    const {\n      axis,\n      min,\n      max,\n      step,\n    } = this.props;\n    const {isRtl} = this.context.muiTheme;\n\n    const calculatedAxis = calculateAxis(axis, isRtl);\n\n    let action;\n\n    switch (keycode(event)) {\n      case 'page down':\n      case 'down':\n        if (calculatedAxis === 'y-reverse') {\n          action = 'increase';\n        } else {\n          action = 'decrease';\n        }\n        break;\n      case 'left':\n        if (calculatedAxis === 'x-reverse') {\n          action = 'increase';\n        } else {\n          action = 'decrease';\n        }\n        break;\n      case 'page up':\n      case 'up':\n        if (calculatedAxis === 'y-reverse') {\n          action = 'decrease';\n        } else {\n          action = 'increase';\n        }\n        break;\n      case 'right':\n        if (calculatedAxis === 'x-reverse') {\n          action = 'decrease';\n        } else {\n          action = 'increase';\n        }\n        break;\n      case 'home':\n        action = 'min';\n        break;\n      case 'end':\n        action = 'max';\n        break;\n    }\n\n    if (action) {\n      let newValue;\n\n      // Cancel scroll\n      event.preventDefault();\n\n      switch (action) {\n        case 'decrease':\n          newValue = this.state.value - step;\n          break;\n        case 'increase':\n          newValue = this.state.value + step;\n          break;\n        case 'min':\n          newValue = min;\n          break;\n        case 'max':\n          newValue = max;\n          break;\n      }\n\n      // We need to use toFixed() because of float point errors.\n      // For example, 0.01 + 0.06 = 0.06999999999999999\n      newValue = parseFloat(newValue.toFixed(5));\n\n      if (newValue > max) {\n        newValue = max;\n      } else if (newValue < min) {\n        newValue = min;\n      }\n\n      if (this.state.value !== newValue) {\n        this.setState({\n          value: newValue,\n        });\n\n        if (this.props.onChange) {\n          this.props.onChange(event, newValue);\n        }\n      }\n    }\n  };\n\n  handleDragMouseMove = (event) => {\n    this.onDragUpdate(event, 'mouse');\n  };\n\n  handleTouchMove = (event) => {\n    this.onDragUpdate(event, 'touch');\n  };\n\n  handleMouseEnd = (event) => {\n    document.removeEventListener('mousemove', this.handleDragMouseMove);\n    document.removeEventListener('mouseup', this.handleMouseEnd);\n\n    this.onDragStop(event);\n  };\n\n  handleTouchEnd = (event) => {\n    document.removeEventListener('touchmove', this.handleTouchMove);\n    document.removeEventListener('touchup', this.handleTouchEnd);\n    document.removeEventListener('touchend', this.handleTouchEnd);\n    document.removeEventListener('touchcancel', this.handleTouchEnd);\n\n    this.onDragStop(event);\n  };\n\n  getValue() {\n    warning(false, `Material-UI Slider: getValue() method is deprecated.\n      Use the onChange callbacks instead.\n      It will be removed with v0.17.0.`);\n\n    return this.state.value;\n  }\n\n  clearValue() {\n    warning(false, `Material-UI Slider: clearValue() method is deprecated.\n      Use the value property to control the component instead.\n      It will be removed with v0.17.0.`);\n\n    this.setState({\n      value: this.props.min,\n    });\n  }\n\n  handleTouchStart = (event) => {\n    const {\n      axis,\n      disabled,\n    } = this.props;\n    const {isRtl} = this.context.muiTheme;\n\n    if (disabled) {\n      return;\n    }\n\n    const calculatedAxis = calculateAxis(axis, isRtl);\n\n    let position;\n    if (isMouseControlInverted(calculatedAxis)) {\n      position = this.getTrackOffset() - event.touches[0][mainAxisClientOffsetProperty[calculatedAxis]];\n    } else {\n      position = event.touches[0][mainAxisClientOffsetProperty[calculatedAxis]] - this.getTrackOffset();\n    }\n    this.setValueFromPosition(event, position);\n\n    document.addEventListener('touchmove', this.handleTouchMove);\n    document.addEventListener('touchup', this.handleTouchEnd);\n    document.addEventListener('touchend', this.handleTouchEnd);\n    document.addEventListener('touchcancel', this.handleTouchEnd);\n\n    this.onDragStart(event);\n\n    // Cancel scroll and context menu\n    event.preventDefault();\n  };\n\n  handleFocus = (event) => {\n    this.setState({\n      focused: true,\n    });\n\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  handleBlur = (event) => {\n    this.setState({\n      focused: false,\n      active: false,\n    });\n\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  handleMouseDown = (event) => {\n    const {\n      axis,\n      disabled,\n    } = this.props;\n    const {isRtl} = this.context.muiTheme;\n\n    if (disabled) {\n      return;\n    }\n\n    const calculatedAxis = calculateAxis(axis, isRtl);\n\n    let position;\n    if (isMouseControlInverted(calculatedAxis)) {\n      position = this.getTrackOffset() - event[mainAxisClientOffsetProperty[calculatedAxis]];\n    } else {\n      position = event[mainAxisClientOffsetProperty[calculatedAxis]] - this.getTrackOffset();\n    }\n    this.setValueFromPosition(event, position);\n\n    document.addEventListener('mousemove', this.handleDragMouseMove);\n    document.addEventListener('mouseup', this.handleMouseEnd);\n\n    // Cancel text selection\n    event.preventDefault();\n\n    // Set focus manually since we called preventDefault()\n    this.handle.focus();\n\n    this.onDragStart(event);\n  };\n\n  handleMouseUp = () => {\n    if (!this.props.disabled) {\n      this.setState({\n        active: false,\n      });\n    }\n  };\n\n  handleMouseEnter = () => {\n    this.setState({\n      hovered: true,\n    });\n  };\n\n  handleMouseLeave = () => {\n    this.setState({\n      hovered: false,\n    });\n  };\n\n  getTrackOffset() {\n    const {axis} = this.props;\n    const {isRtl} = this.context.muiTheme;\n\n    const calculatedAxis = calculateAxis(axis, isRtl);\n\n    return this.track.getBoundingClientRect()[mainAxisOffsetProperty[calculatedAxis]];\n  }\n\n  onDragStart(event) {\n    this.setState({\n      dragging: true,\n      active: true,\n    });\n\n    if (this.props.onDragStart) {\n      this.props.onDragStart(event);\n    }\n  }\n\n  onDragUpdate(event, type) {\n    const {\n      axis,\n      disabled,\n    } = this.props;\n    const {isRtl} = this.context.muiTheme;\n\n    if (this.dragRunning) {\n      return;\n    }\n    this.dragRunning = true;\n\n    requestAnimationFrame(() => {\n      this.dragRunning = false;\n\n      const calculatedAxis = calculateAxis(axis, isRtl);\n      const source = type === 'touch' ? event.touches[0] : event;\n\n      let position;\n      if (isMouseControlInverted(calculatedAxis)) {\n        position = this.getTrackOffset() - source[mainAxisClientOffsetProperty[calculatedAxis]];\n      } else {\n        position = source[mainAxisClientOffsetProperty[calculatedAxis]] - this.getTrackOffset();\n      }\n\n      if (!disabled) {\n        this.setValueFromPosition(event, position);\n      }\n    });\n  }\n\n  onDragStop(event) {\n    this.setState({\n      dragging: false,\n      active: false,\n    });\n\n    if (this.props.onDragStop) {\n      this.props.onDragStop(event);\n    }\n  }\n\n  setValueFromPosition(event, position) {\n    const {\n      axis,\n      step,\n      min,\n      max,\n    } = this.props;\n    const {isRtl} = this.context.muiTheme;\n\n    const calculatedAxis = calculateAxis(axis, isRtl);\n    const positionMax = this.track[mainAxisClientProperty[calculatedAxis]];\n\n    let value;\n\n    if (position <= 0) {\n      value = min;\n    } else if (position >= positionMax) {\n      value = max;\n    } else {\n      value = position / positionMax * (max - min);\n      value = Math.round(value / step) * step + min;\n      value = parseFloat(value.toFixed(5));\n    }\n\n    if (this.state.value !== value) {\n      this.setState({\n        value: value,\n      });\n\n      if (this.props.onChange) {\n        this.props.onChange(event, value);\n      }\n    }\n  }\n\n  render() {\n    const {\n      axis, // eslint-disable-line no-unused-vars\n      disabled,\n      disableFocusRipple,\n      max,\n      min,\n      name,\n      onBlur, // eslint-disable-line no-unused-vars\n      onChange, // eslint-disable-line no-unused-vars\n      onDragStart, // eslint-disable-line no-unused-vars\n      onDragStop, // eslint-disable-line no-unused-vars\n      onFocus, // eslint-disable-line no-unused-vars\n      required,\n      sliderStyle,\n      step,\n      style,\n      ...other\n    } = this.props;\n\n    const {\n      active,\n      focused,\n      hovered,\n      value,\n    } = this.state;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context, this.state);\n    const percent = getPercent(value, min, max);\n\n    let handleStyles = {};\n    if (percent === 0) {\n      handleStyles = Object.assign(\n        {},\n        styles.handle,\n        styles.handleWhenPercentZero,\n        active && styles.handleWhenActive,\n        (hovered || focused) && !disabled &&\n        styles.handleWhenPercentZeroAndFocused,\n        disabled && styles.handleWhenPercentZeroAndDisabled\n      );\n    } else {\n      handleStyles = Object.assign(\n        {},\n        styles.handle,\n        active && styles.handleWhenActive,\n        disabled && styles.handleWhenDisabled\n      );\n    }\n\n    const rippleStyle = Object.assign(\n      {},\n      styles.ripple,\n      percent === 0 && styles.rippleWhenPercentZero\n    );\n\n    return (\n      <div {...other} style={prepareStyles(Object.assign({}, style))}>\n        <div\n          style={prepareStyles(Object.assign({}, styles.slider, sliderStyle))}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          onMouseDown={this.handleMouseDown}\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n          onMouseUp={this.handleMouseUp}\n          onTouchStart={this.handleTouchStart}\n          onKeyDown={!disabled && this.handleKeyDown}\n        >\n          <div ref={(node) => this.track = node} style={prepareStyles(styles.track)}>\n            <div style={prepareStyles(styles.filled)} />\n            <div style={prepareStyles(styles.remaining)} />\n            <div\n              ref={(node) => this.handle = node}\n              style={prepareStyles(handleStyles)}\n              tabIndex={0}\n            >\n              {!disabled && !disableFocusRipple && (\n                <FocusRipple\n                  style={rippleStyle}\n                  innerStyle={styles.rippleInner}\n                  show={(hovered || focused) && !active}\n                  color={styles.rippleColor.fill}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        <input\n          type=\"hidden\"\n          name={name}\n          value={value}\n          required={required}\n          min={min}\n          max={max}\n          step={step}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n"]}