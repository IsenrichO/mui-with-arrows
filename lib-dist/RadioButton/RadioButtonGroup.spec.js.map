{"version":3,"sources":["../../src/RadioButton/RadioButtonGroup.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","it","wrapper","strictEqual","state"],"mappings":";;AAEA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,sBAAT,EAAiC,YAAM;AACrC,MAAMC,WAAW,4BAAjB;AACA,MAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,IAAD;AAAA,WAAU,qBAAQA,IAAR,EAAc,EAACC,SAAS,EAACH,kBAAD,EAAV,EAAd,CAAV;AAAA,GAA3B;;AAEAD,WAAS,eAAT,EAA0B,YAAM;AAC9BK,OAAG,0DAAH,EAA+D,YAAM;AACnE,UAAMC,UAAUJ,mBAAmB,4DAAkB,MAAK,WAAvB,EAAmC,eAAe,OAAlD,GAAnB,CAAhB;AACA,mBAAOK,WAAP,CAAmBD,QAAQE,KAAR,CAAc,UAAd,CAAnB,EAA8C,OAA9C;AACD,KAHD;AAIAH,OAAG,0DAAH,EAA+D,YAAM;AACnE,UAAMC,UAAUJ,mBAAmB,4DAAkB,MAAK,WAAvB,EAAmC,eAAe,IAAlD,GAAnB,CAAhB;AACA,mBAAOK,WAAP,CAAmBD,QAAQE,KAAR,CAAc,UAAd,CAAnB,EAA8C,IAA9C;AACD,KAHD;AAIAH,OAAG,yDAAH,EAA8D,YAAM;AAClE,UAAMC,UAAUJ,mBAAmB,4DAAkB,MAAK,WAAvB,EAAmC,eAAe,KAAlD,GAAnB,CAAhB;AACA,mBAAOK,WAAP,CAAmBD,QAAQE,KAAR,CAAc,UAAd,CAAnB,EAA8C,KAA9C;AACD,KAHD;AAIAH,OAAG,4DAAH,EAAiE,YAAM;AACrE,UAAMC,UAAUJ,mBAAmB,4DAAkB,MAAK,WAAvB,EAAmC,iBAAiB,OAApD,GAAnB,CAAhB;AACA,mBAAOK,WAAP,CAAmBD,QAAQE,KAAR,CAAc,UAAd,CAAnB,EAA8C,OAA9C;AACD,KAHD;AAIAH,OAAG,4DAAH,EAAiE,YAAM;AACrE,UAAMC,UAAUJ,mBAAmB,4DAAkB,MAAK,WAAvB,EAAmC,iBAAiB,IAApD,GAAnB,CAAhB;AACA,mBAAOK,WAAP,CAAmBD,QAAQE,KAAR,CAAc,UAAd,CAAnB,EAA8C,IAA9C;AACD,KAHD;AAIAH,OAAG,2DAAH,EAAgE,YAAM;AACpE,UAAMC,UAAUJ,mBAAmB,4DAAkB,MAAK,WAAvB,EAAmC,iBAAiB,KAApD,GAAnB,CAAhB;AACA,mBAAOK,WAAP,CAAmBD,QAAQE,KAAR,CAAc,UAAd,CAAnB,EAA8C,KAA9C;AACD,KAHD;AAID,GAzBD;AA0BD,CA9BD,E,CARA","file":"RadioButtonGroup.spec.js","sourcesContent":["/* eslint-env mocha */\n\nimport React from 'react';\nimport {assert} from 'chai';\nimport {shallow} from 'enzyme';\nimport RadioButtonGroup from './RadioButtonGroup';\nimport getMuiTheme from '../styles/getMuiTheme';\n\ndescribe('<RadioButtonGroup />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node) => shallow(node, {context: {muiTheme}});\n\n  describe('initial state', () => {\n    it('should accept string valueSelected prop and set to state', () => {\n      const wrapper = shallowWithContext(<RadioButtonGroup name=\"testGroup\" valueSelected={'value'} />);\n      assert.strictEqual(wrapper.state('selected'), 'value');\n    });\n    it('should accept truthy valueSelected prop and set to state', () => {\n      const wrapper = shallowWithContext(<RadioButtonGroup name=\"testGroup\" valueSelected={true} />);\n      assert.strictEqual(wrapper.state('selected'), true);\n    });\n    it('should accept falsy valueSelected prop and set to state', () => {\n      const wrapper = shallowWithContext(<RadioButtonGroup name=\"testGroup\" valueSelected={false} />);\n      assert.strictEqual(wrapper.state('selected'), false);\n    });\n    it('should accept string defaultSelected prop and set to state', () => {\n      const wrapper = shallowWithContext(<RadioButtonGroup name=\"testGroup\" defaultSelected={'value'} />);\n      assert.strictEqual(wrapper.state('selected'), 'value');\n    });\n    it('should accept truthy defaultSelected prop and set to state', () => {\n      const wrapper = shallowWithContext(<RadioButtonGroup name=\"testGroup\" defaultSelected={true} />);\n      assert.strictEqual(wrapper.state('selected'), true);\n    });\n    it('should accept falsy defaultSelected prop and set to state', () => {\n      const wrapper = shallowWithContext(<RadioButtonGroup name=\"testGroup\" defaultSelected={false} />);\n      assert.strictEqual(wrapper.state('selected'), false);\n    });\n  });\n});\n"]}