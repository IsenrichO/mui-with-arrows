{"version":3,"sources":["../../src/AutoComplete/AutoComplete.js"],"names":["getStyles","props","context","state","anchorEl","fullWidth","styles","root","display","position","width","menu","list","innerDiv","overflow","popover","clientWidth","AutoComplete","focusTextField","open","searchText","undefined","handleRequestClose","close","handleMouseDown","event","preventDefault","handleItemTouchTap","child","dataSource","index","parseInt","key","chosenRequest","chosenRequestText","updateInput","onUpdateInput","source","timerTouchTapCloseId","setTimeout","onNewRequest","menuCloseDelay","setState","dataSourceConfig","text","handleEscKeyDown","handleKeyDown","onKeyDown","findDOMNode","refs","searchTextField","handleChange","target","value","handleBlur","timerBlurClose","onBlur","handleFocus","openOnFocus","onFocus","componentWillMount","requestsList","componentWillReceiveProps","nextProps","componentWillUnmount","clearTimeout","onClose","blur","focus","render","anchorOrigin","animated","animation","disableFocusRipple","errorStyle","floatingLabelText","filter","style","hintText","maxSearchResults","textFieldStyle","menuStyle","menuProps","listStyle","targetOrigin","popoverProps","searchTextProp","other","popoverStyle","popoverOther","prepareStyles","muiTheme","every","item","push","itemText","itemValue","type","muiName","cloneElement","length","map","i","propTypes","origin","bool","func","array","isRequired","object","errorText","node","number","string","defaultProps","vertical","horizontal","indexOf","contextTypes","levenshteinDistance","current","prev","j","charAt","Math","min","pop","noFilter","defaultFilter","caseSensitiveFilter","caseInsensitiveFilter","toLowerCase","levenshteinDistanceFilter","distanceLessThan","s","k","fuzzyFilter","compareString","searchTextIndex","Item","Divider"],"mappings":"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","file":"AutoComplete.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport keycode from 'keycode';\nimport TextField from '../TextField';\nimport Menu from '../Menu';\nimport MenuItem from '../MenuItem';\nimport Divider from '../Divider';\nimport Popover from '../Popover/Popover';\nimport propTypes from '../utils/propTypes';\n\nfunction getStyles(props, context, state) {\n  const {anchorEl} = state;\n  const {fullWidth} = props;\n\n  const styles = {\n    root: {\n      display: 'inline-block',\n      position: 'relative',\n      width: fullWidth ? '100%' : 256,\n    },\n    menu: {\n      width: '100%',\n    },\n    list: {\n      display: 'block',\n      width: fullWidth ? '100%' : 256,\n    },\n    innerDiv: {\n      overflow: 'hidden',\n    },\n  };\n\n  if (anchorEl && fullWidth) {\n    styles.popover = {\n      width: anchorEl.clientWidth,\n    };\n  }\n\n  return styles;\n}\n\nclass AutoComplete extends Component {\n  static propTypes = {\n    /**\n     * Location of the anchor for the auto complete.\n     */\n    anchorOrigin: propTypes.origin,\n    /**\n     * If true, the auto complete is animated as it is toggled.\n     */\n    animated: PropTypes.bool,\n    /**\n     * Override the default animation component used.\n     */\n    animation: PropTypes.func,\n    /**\n     * Array of strings or nodes used to populate the list.\n     */\n    dataSource: PropTypes.array.isRequired,\n    /**\n     * Config for objects list dataSource.\n     *\n     * @typedef {Object} dataSourceConfig\n     *\n     * @property {string} text `dataSource` element key used to find a string to be matched for search\n     * and shown as a `TextField` input value after choosing the result.\n     * @property {string} value `dataSource` element key used to find a string to be shown in search results.\n     */\n    dataSourceConfig: PropTypes.object,\n    /**\n     * Disables focus ripple when true.\n     */\n    disableFocusRipple: PropTypes.bool,\n    /**\n     * Override style prop for error.\n     */\n    errorStyle: PropTypes.object,\n    /**\n     * The error content to display.\n     */\n    errorText: PropTypes.node,\n    /**\n     * Callback function used to filter the auto complete.\n     *\n     * @param {string} searchText The text to search for within `dataSource`.\n     * @param {string} key `dataSource` element, or `text` property on that element if it's not a string.\n     * @returns {boolean} `true` indicates the auto complete list will include `key` when the input is `searchText`.\n     */\n    filter: PropTypes.func,\n    /**\n     * The content to use for adding floating label element.\n     */\n    floatingLabelText: PropTypes.node,\n    /**\n     * If true, the field receives the property `width: 100%`.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * The hint content to display.\n     */\n    hintText: PropTypes.node,\n    /**\n     * Override style for list.\n     */\n    listStyle: PropTypes.object,\n    /**\n     * The max number of search results to be shown.\n     * By default it shows all the items which matches filter.\n     */\n    maxSearchResults: PropTypes.number,\n    /**\n     * Delay for closing time of the menu.\n     */\n    menuCloseDelay: PropTypes.number,\n    /**\n     * Props to be passed to menu.\n     */\n    menuProps: PropTypes.object,\n    /**\n     * Override style for menu.\n     */\n    menuStyle: PropTypes.object,\n    /** @ignore */\n    onBlur: PropTypes.func,\n    /**\n     * Callback function fired when the menu is closed.\n     */\n    onClose: PropTypes.func,\n    /** @ignore */\n    onFocus: PropTypes.func,\n    /** @ignore */\n    onKeyDown: PropTypes.func,\n    /**\n     * Callback function that is fired when a list item is selected, or enter is pressed in the `TextField`.\n     *\n     * @param {string} chosenRequest Either the `TextField` input value, if enter is pressed in the `TextField`,\n     * or the text value of the corresponding list item that was selected.\n     * @param {number} index The index in `dataSource` of the list item selected, or `-1` if enter is pressed in the\n     * `TextField`.\n     */\n    onNewRequest: PropTypes.func,\n    /**\n     * Callback function that is fired when the user updates the `TextField`.\n     *\n     * @param {string} searchText The auto-complete's `searchText` value.\n     * @param {array} dataSource The auto-complete's `dataSource` array.\n     * @param {object} params Additional information linked the update.\n     */\n    onUpdateInput: PropTypes.func,\n    /**\n     * Auto complete menu is open if true.\n     */\n    open: PropTypes.bool,\n    /**\n     * If true, the list item is showed when a focus event triggers.\n     */\n    openOnFocus: PropTypes.bool,\n    /**\n     * Props to be passed to popover.\n     */\n    popoverProps: PropTypes.object,\n    /**\n     * Text being input to auto complete.\n     */\n    searchText: PropTypes.string,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * Origin for location of target.\n     */\n    targetOrigin: propTypes.origin,\n    /**\n     * Override the inline-styles of AutoComplete's TextField element.\n     */\n    textFieldStyle: PropTypes.object,\n  };\n\n  static defaultProps = {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left',\n    },\n    animated: true,\n    dataSourceConfig: {\n      text: 'text',\n      value: 'value',\n    },\n    disableFocusRipple: true,\n    filter: (searchText, key) => searchText !== '' && key.indexOf(searchText) !== -1,\n    fullWidth: false,\n    open: false,\n    openOnFocus: false,\n    onUpdateInput: () => {},\n    onNewRequest: () => {},\n    menuCloseDelay: 300,\n    targetOrigin: {\n      vertical: 'top',\n      horizontal: 'left',\n    },\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    anchorEl: null,\n    focusTextField: true,\n    open: false,\n    searchText: undefined,\n  };\n\n  componentWillMount() {\n    this.requestsList = [];\n    this.setState({\n      open: this.props.open,\n      searchText: this.props.searchText || '',\n    });\n    this.timerTouchTapCloseId = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.searchText !== nextProps.searchText) {\n      this.setState({\n        searchText: nextProps.searchText,\n      });\n    }\n    if (this.props.open !== nextProps.open) {\n      this.setState({\n        open: nextProps.open,\n        anchorEl: ReactDOM.findDOMNode(this.refs.searchTextField),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timerTouchTapCloseId);\n    clearTimeout(this.timerBlurClose);\n  }\n\n  close() {\n    this.setState({\n      open: false,\n      anchorEl: null,\n    });\n\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  }\n\n  handleRequestClose = () => {\n    // Only take into account the Popover clickAway when we are\n    // not focusing the TextField.\n    if (!this.state.focusTextField) {\n      this.close();\n    }\n  };\n\n  handleMouseDown = (event) => {\n    // Keep the TextField focused\n    event.preventDefault();\n  };\n\n  handleItemTouchTap = (event, child) => {\n    const dataSource = this.props.dataSource;\n    const index = parseInt(child.key, 10);\n    const chosenRequest = dataSource[index];\n    const searchText = this.chosenRequestText(chosenRequest);\n\n    const updateInput = () => this.props.onUpdateInput(searchText, this.props.dataSource, {\n      source: 'touchTap',\n    });\n    this.timerTouchTapCloseId = () => setTimeout(() => {\n      this.timerTouchTapCloseId = null;\n      this.close();\n      this.props.onNewRequest(chosenRequest, index);\n    }, this.props.menuCloseDelay);\n\n    if (typeof this.props.searchText !== 'undefined') {\n      updateInput();\n      this.timerTouchTapCloseId();\n    } else {\n      this.setState({\n        searchText: searchText,\n      }, () => {\n        updateInput();\n        this.timerTouchTapCloseId();\n      });\n    }\n  };\n\n  chosenRequestText = (chosenRequest) => {\n    if (typeof chosenRequest === 'string') {\n      return chosenRequest;\n    } else {\n      return chosenRequest[this.props.dataSourceConfig.text];\n    }\n  };\n\n  handleEscKeyDown = () => {\n    this.close();\n  };\n\n  handleKeyDown = (event) => {\n    if (this.props.onKeyDown) this.props.onKeyDown(event);\n\n    switch (keycode(event)) {\n      case 'enter':\n        this.close();\n        const searchText = this.state.searchText;\n        if (searchText !== '') {\n          this.props.onNewRequest(searchText, -1);\n        }\n        break;\n\n      case 'esc':\n        this.close();\n        break;\n\n      case 'down':\n        event.preventDefault();\n        this.setState({\n          open: true,\n          focusTextField: false,\n          anchorEl: ReactDOM.findDOMNode(this.refs.searchTextField),\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  handleChange = (event) => {\n    const searchText = event.target.value;\n\n    // Make sure that we have a new searchText.\n    // Fix an issue with a Cordova Webview\n    if (searchText === this.state.searchText) {\n      return;\n    }\n\n    this.setState({\n      searchText: searchText,\n      open: true,\n      anchorEl: ReactDOM.findDOMNode(this.refs.searchTextField),\n    }, () => {\n      this.props.onUpdateInput(searchText, this.props.dataSource, {\n        source: 'change',\n      });\n    });\n  };\n\n  handleBlur = (event) => {\n    if (this.state.focusTextField && this.timerTouchTapCloseId === null) {\n      this.timerBlurClose = setTimeout(() => {\n        this.close();\n      }, 0);\n    }\n\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  handleFocus = (event) => {\n    if (!this.state.open && this.props.openOnFocus) {\n      this.setState({\n        open: true,\n        anchorEl: ReactDOM.findDOMNode(this.refs.searchTextField),\n      });\n    }\n\n    this.setState({\n      focusTextField: true,\n    });\n\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  blur() {\n    this.refs.searchTextField.blur();\n  }\n\n  focus() {\n    this.refs.searchTextField.focus();\n  }\n\n  render() {\n    const {\n      anchorOrigin,\n      animated,\n      animation,\n      dataSource,\n      dataSourceConfig, // eslint-disable-line no-unused-vars\n      disableFocusRipple,\n      errorStyle,\n      floatingLabelText,\n      filter,\n      fullWidth,\n      style,\n      hintText,\n      maxSearchResults,\n      menuCloseDelay, // eslint-disable-line no-unused-vars\n      textFieldStyle,\n      menuStyle,\n      menuProps,\n      listStyle,\n      targetOrigin,\n      onBlur, // eslint-disable-line no-unused-vars\n      onClose, // eslint-disable-line no-unused-vars\n      onFocus, // eslint-disable-line no-unused-vars\n      onKeyDown, // eslint-disable-line no-unused-vars\n      onNewRequest, // eslint-disable-line no-unused-vars\n      onUpdateInput, // eslint-disable-line no-unused-vars\n      openOnFocus, // eslint-disable-line no-unused-vars\n      popoverProps,\n      searchText: searchTextProp, // eslint-disable-line no-unused-vars\n      ...other\n    } = this.props;\n\n    const {\n      style: popoverStyle,\n      ...popoverOther\n    } = popoverProps || {};\n\n    const {\n      open,\n      anchorEl,\n      searchText,\n      focusTextField,\n    } = this.state;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context, this.state);\n\n    const requestsList = [];\n\n    dataSource.every((item, index) => {\n      switch (typeof item) {\n        case 'string':\n          if (filter(searchText, item, item)) {\n            requestsList.push({\n              text: item,\n              value: (\n                <MenuItem\n                  innerDivStyle={styles.innerDiv}\n                  value={item}\n                  primaryText={item}\n                  disableFocusRipple={disableFocusRipple}\n                  key={index}\n                />),\n            });\n          }\n          break;\n\n        case 'object':\n          if (item && typeof item[this.props.dataSourceConfig.text] === 'string') {\n            const itemText = item[this.props.dataSourceConfig.text];\n            if (!this.props.filter(searchText, itemText, item)) break;\n\n            const itemValue = item[this.props.dataSourceConfig.value];\n            if (itemValue.type && (itemValue.type.muiName === MenuItem.muiName ||\n               itemValue.type.muiName === Divider.muiName)) {\n              requestsList.push({\n                text: itemText,\n                value: React.cloneElement(itemValue, {\n                  key: index,\n                  disableFocusRipple: disableFocusRipple,\n                }),\n              });\n            } else {\n              requestsList.push({\n                text: itemText,\n                value: (\n                  <MenuItem\n                    innerDivStyle={styles.innerDiv}\n                    primaryText={itemText}\n                    disableFocusRipple={disableFocusRipple}\n                    key={index}\n                  />),\n              });\n            }\n          }\n          break;\n\n        default:\n          // Do nothing\n      }\n\n      return !(maxSearchResults && maxSearchResults > 0 && requestsList.length === maxSearchResults);\n    });\n\n    this.requestsList = requestsList;\n\n    const menu = open && requestsList.length > 0 && (\n      <Menu\n        ref=\"menu\"\n        autoWidth={false}\n        disableAutoFocus={focusTextField}\n        onEscKeyDown={this.handleEscKeyDown}\n        initiallyKeyboardFocused={true}\n        onItemTouchTap={this.handleItemTouchTap}\n        onMouseDown={this.handleMouseDown}\n        style={Object.assign(styles.menu, menuStyle)}\n        listStyle={Object.assign(styles.list, listStyle)}\n        {...menuProps}\n      >\n        {requestsList.map((i) => i.value)}\n      </Menu>\n    );\n\n    return (\n      <div style={prepareStyles(Object.assign(styles.root, style))} >\n        <TextField\n          ref=\"searchTextField\"\n          autoComplete=\"off\"\n          onBlur={this.handleBlur}\n          onFocus={this.handleFocus}\n          onKeyDown={this.handleKeyDown}\n          floatingLabelText={floatingLabelText}\n          hintText={hintText}\n          fullWidth={fullWidth}\n          multiLine={false}\n          errorStyle={errorStyle}\n          style={textFieldStyle}\n          {...other}\n          // value and onChange are idiomatic properties often leaked.\n          // We prevent their overrides in order to reduce potential bugs.\n          value={searchText}\n          onChange={this.handleChange}\n        />\n        <Popover\n          style={Object.assign({}, styles.popover, popoverStyle)}\n          canAutoPosition={false}\n          anchorOrigin={anchorOrigin}\n          targetOrigin={targetOrigin}\n          open={open}\n          anchorEl={anchorEl}\n          useLayerForClickAway={false}\n          onRequestClose={this.handleRequestClose}\n          animated={animated}\n          animation={animation}\n          {...popoverOther}\n        >\n          {menu}\n        </Popover>\n      </div>\n    );\n  }\n}\n\nAutoComplete.levenshteinDistance = (searchText, key) => {\n  const current = [];\n  let prev;\n  let value;\n\n  for (let i = 0; i <= key.length; i++) {\n    for (let j = 0; j <= searchText.length; j++) {\n      if (i && j) {\n        if (searchText.charAt(j - 1) === key.charAt(i - 1)) value = prev;\n        else value = Math.min(current[j], current[j - 1], prev) + 1;\n      } else {\n        value = i + j;\n      }\n      prev = current[j];\n      current[j] = value;\n    }\n  }\n  return current.pop();\n};\n\nAutoComplete.noFilter = () => true;\n\nAutoComplete.defaultFilter = AutoComplete.caseSensitiveFilter = (searchText, key) => {\n  return searchText !== '' && key.indexOf(searchText) !== -1;\n};\n\nAutoComplete.caseInsensitiveFilter = (searchText, key) => {\n  return key.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n};\n\nAutoComplete.levenshteinDistanceFilter = (distanceLessThan) => {\n  if (distanceLessThan === undefined) {\n    return AutoComplete.levenshteinDistance;\n  } else if (typeof distanceLessThan !== 'number') {\n    throw 'Error: AutoComplete.levenshteinDistanceFilter is a filter generator, not a filter!';\n  }\n\n  return (s, k) => AutoComplete.levenshteinDistance(s, k) < distanceLessThan;\n};\n\nAutoComplete.fuzzyFilter = (searchText, key) => {\n  const compareString = key.toLowerCase();\n  searchText = searchText.toLowerCase();\n\n  let searchTextIndex = 0;\n  for (let index = 0; index < key.length; index++) {\n    if (compareString[index] === searchText[searchTextIndex]) {\n      searchTextIndex += 1;\n    }\n  }\n\n  return searchTextIndex === searchText.length;\n};\n\nAutoComplete.Item = MenuItem;\nAutoComplete.Divider = Divider;\n\nexport default AutoComplete;\n"]}