{"version":3,"sources":["../../src/GridList/GridTile.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","tileData","img","title","author","it","testChildren","wrapper","strictEqual","containsMatchingElement","hasClass","children","text","titleStyle","fontSize","find","props","style"],"mappings":";;AAEA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,cAAT,EAAyB,YAAM;AAC7B,MAAMC,WAAW,4BAAjB;AACA,MAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,IAAD;AAAA,WAAU,qBAAQA,IAAR,EAAc,EAACC,SAAS,EAACH,kBAAD,EAAV,EAAd,CAAV;AAAA,GAA3B;AACA,MAAMI,WAAW;AACfC,SAAK,uCADU;AAEfC,WAAO,WAFQ;AAGfC,YAAQ;AAHO,GAAjB;;AAMAR,WAAS,gBAAT,EAA2B,YAAM;AAC/BS,OAAG,oCAAH,EAAyC,YAAM;AAC7C,UAAMC,eAAe,uCAAK,KAAKL,SAASC,GAAnB,GAArB;AACA,UAAMK,UAAUT,mBACd;AAAA;AAAA;AAAWQ;AAAX,OADc,CAAhB;;AAIA,mBAAOE,WAAP,CAAmBD,QAAQE,uBAAR,CAAgCH,YAAhC,CAAnB,EAAkE,IAAlE,EACE,6BADF;AAED,KARD;AASD,GAVD;;AAYAV,WAAS,iBAAT,EAA4B,YAAM;AAChCS,OAAG,0BAAH,EAA+B,YAAM;AACnC,UAAME,UAAUT,mBACd,oDAAU,WAAU,KAApB,GADc,CAAhB;;AAIA,mBAAOU,WAAP,CAAmBD,QAAQG,QAAR,CAAiB,KAAjB,CAAnB,EAA4C,IAA5C,EACE,8BADF;AAED,KAPD;AAQD,GATD;;AAWAd,WAAS,aAAT,EAAwB,YAAM;AAC5BS,OAAG,sBAAH,EAA2B,YAAM;AAC/B,UAAME,UAAUT,mBACd,oDAAU,OAAOG,SAASE,KAA1B,GADc,CAAhB;;AAIA,mBAAOK,WAAP,CAAmBD,QAAQI,QAAR,CAAiB,KAAjB,EAAwBC,IAAxB,EAAnB,EAAmDX,SAASE,KAA5D,EACE,0BADF;AAED,KAPD;AAQD,GATD;;AAWAP,WAAS,kBAAT,EAA6B,YAAM;AACjCS,OAAG,yBAAH,EAA8B,YAAM;AAClC,UAAMQ,aAAa;AACjBC,kBAAU;AADO,OAAnB;AAGA,UAAMP,UAAUT,mBACd,oDAAU,OAAM,KAAhB,EAAsB,YAAYe,UAAlC,GADc,CAAhB;;AAIA,mBAAOL,WAAP,CAAmBD,QAAQQ,IAAR,CAAa,uBAAb,EAAsCC,KAAtC,GAA8CC,KAA9C,CAAoDH,QAAvE,EACED,WAAWC,QADb,EACuB,iCADvB;AAED,KAVD;AAWD,GAZD;AAaD,CAxDD,E,CARA","file":"GridTile.spec.js","sourcesContent":["/* eslint-env mocha */\n\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {assert} from 'chai';\nimport GridTile from './GridTile';\nimport getMuiTheme from '../styles/getMuiTheme';\n\ndescribe('<GridTile />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node) => shallow(node, {context: {muiTheme}});\n  const tileData = {\n    img: 'images/grid-list/00-52-29-429_640.jpg',\n    title: 'Breakfast',\n    author: 'jill111',\n  };\n\n  describe('prop: children', () => {\n    it('should renders children by default', () => {\n      const testChildren = <img src={tileData.img} />;\n      const wrapper = shallowWithContext(\n        <GridTile>{testChildren}</GridTile>\n      );\n\n      assert.strictEqual(wrapper.containsMatchingElement(testChildren), true,\n        'should contain the children');\n    });\n  });\n\n  describe('prop: className', () => {\n    it('should renders className', () => {\n      const wrapper = shallowWithContext(\n        <GridTile className=\"foo\" />\n      );\n\n      assert.strictEqual(wrapper.hasClass('foo'), true,\n        'should contain the className');\n    });\n  });\n\n  describe('prop: title', () => {\n    it('should renders title', () => {\n      const wrapper = shallowWithContext(\n        <GridTile title={tileData.title} />\n      );\n\n      assert.strictEqual(wrapper.children('div').text(), tileData.title,\n        'should contain the title');\n    });\n  });\n\n  describe('prop: titleStyle', () => {\n    it('should overwrite styles', () => {\n      const titleStyle = {\n        fontSize: 20,\n      };\n      const wrapper = shallowWithContext(\n        <GridTile title=\"foo\" titleStyle={titleStyle} />\n      );\n\n      assert.strictEqual(wrapper.find('div > div > div > div').props().style.fontSize,\n        titleStyle.fontSize, 'should overwrite title fontSize');\n    });\n  });\n});\n"]}