{"version":3,"sources":["../../src/Avatar/Avatar.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","testChildren","it","wrapper","ok","contains","icon","find","length","notOk","is","src","setProps"],"mappings":";;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,YAAT,EAAuB,YAAM;AAC3B,MAAMC,WAAW,4BAAjB;AACA,MAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,IAAD;AAAA,WAAU,qBAAQA,IAAR,EAAc,EAACC,SAAS,EAACH,kBAAD,EAAV,EAAd,CAAV;AAAA,GAA3B;;AAEA,MAAMI,eAAe;AAAA;AAAA,MAAK,WAAU,QAAf;AAAA;AAAA,GAArB;;AAEAC,KAAG,6BAAH,EAAkC,YAAM;AACtC,QAAMC,UAAUL,mBACd;AAAA;AAAA;AAASG;AAAT,KADc,CAAhB;;AAIA,iBAAOG,EAAP,CAAUD,QAAQE,QAAR,CAAiBJ,YAAjB,CAAV,EAA0C,6BAA1C;AACD,GAND;;AAQAC,KAAG,2CAAH,EAAgD,YAAM;AACpD,QAAMI,OAAO,uCAAK,WAAU,UAAf,GAAb;AACA,QAAMH,UAAUL,mBACd;AAAA;AAAA,QAAQ,MAAMQ,IAAd;AAAqBL;AAArB,KADc,CAAhB;;AAIA,iBAAOG,EAAP,CAAUD,QAAQE,QAAR,CAAiBJ,YAAjB,CAAV,EAA0C,6BAA1C;AACA;AACA,iBAAOG,EAAP,CAAUD,QAAQI,IAAR,CAAa,WAAb,EAA0BC,MAApC,EAA4C,yBAA5C;AACD,GATD;;AAWAN,KAAG,gDAAH,EAAqD,YAAM;AACzD,QAAMC,UAAUL,mBACd;AAAA;AAAA,QAAQ,KAAI,UAAZ;AAAwBG;AAAxB,KADc,CAAhB;;AAIA,iBAAOQ,KAAP,CAAa,CAACN,QAAQE,QAAR,CAAiBJ,YAAjB,CAAd,EAA8C,iCAA9C;AACA,iBAAOG,EAAP,CAAUD,QAAQO,EAAR,CAAW,KAAX,CAAV,EAA6B,oBAA7B;AACA,iBAAON,EAAP,CAAUD,QAAQO,EAAR,CAAW,EAACC,KAAK,UAAN,EAAX,CAAV,EAAyC,uCAAzC;;AAEAR,YAAQS,QAAR,CAAiB,EAACD,KAAK,UAAN,EAAjB;AACA,iBAAOP,EAAP,CAAUD,QAAQO,EAAR,CAAW,EAACC,KAAK,UAAN,EAAX,CAAV,EAAyC,6BAAzC;AACD,GAXD;AAYD,CArCD,E,CAPA","file":"Avatar.spec.js","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {assert} from 'chai';\nimport Avatar from './Avatar';\nimport getMuiTheme from '../styles/getMuiTheme';\n\ndescribe('<Avatar />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node) => shallow(node, {context: {muiTheme}});\n\n  const testChildren = <div className=\"unique\">Hello World</div>;\n\n  it('renders children by default', () => {\n    const wrapper = shallowWithContext(\n      <Avatar>{testChildren}</Avatar>\n    );\n\n    assert.ok(wrapper.contains(testChildren), 'should contain the children');\n  });\n\n  it('renders children and an icon if passed in', () => {\n    const icon = <div className=\"testIcon\" />;\n    const wrapper = shallowWithContext(\n      <Avatar icon={icon}>{testChildren}</Avatar>\n    );\n\n    assert.ok(wrapper.contains(testChildren), 'should contain the children');\n    // Finding by class as avatar clones element and changes the props\n    assert.ok(wrapper.find('.testIcon').length, 'should contain the icon');\n  });\n\n  it('only renders an image when the src prop is set', () => {\n    const wrapper = shallowWithContext(\n      <Avatar src=\"face.jpg\">{testChildren}</Avatar>\n    );\n\n    assert.notOk(!wrapper.contains(testChildren), 'should not contain the children');\n    assert.ok(wrapper.is('img'), 'should be an image');\n    assert.ok(wrapper.is({src: 'face.jpg'}), 'should have the src passed into props');\n\n    wrapper.setProps({src: 'meow.jpg'});\n    assert.ok(wrapper.is({src: 'meow.jpg'}), 'should have changed the src');\n  });\n});\n"]}