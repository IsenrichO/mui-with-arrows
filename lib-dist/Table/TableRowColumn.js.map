{"version":3,"sources":["../../src/Table/TableRowColumn.js"],"names":["getStyles","props","context","tableRowColumn","muiTheme","styles","root","paddingLeft","spacing","paddingRight","height","textAlign","fontSize","overflow","whiteSpace","textOverflow","Children","count","children","isNaN","TableRowColumn","state","hovered","onClick","event","columnNumber","onMouseEnter","hoverable","setState","onHover","onMouseLeave","onHoverExit","render","className","style","other","prepareStyles","handlers","propTypes","node","string","number","bool","func","object","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"TableRowColumn.js","sourcesContent":["import React, {Component} from 'react';\n\nimport PropTypes from 'prop-types';\n\nfunction getStyles(props, context) {\n  const {tableRowColumn} = context.muiTheme;\n\n  const styles = {\n    root: {\n      paddingLeft: tableRowColumn.spacing,\n      paddingRight: tableRowColumn.spacing,\n      height: tableRowColumn.height,\n      textAlign: 'left',\n      fontSize: 13,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n    },\n  };\n\n  if (React.Children.count(props.children) === 1 && !isNaN(props.children)) {\n    styles.textAlign = 'right';\n  }\n\n  return styles;\n}\n\nclass TableRowColumn extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    /**\n     * The css class name of the root element.\n     */\n    className: PropTypes.string,\n    /**\n     * @ignore\n     * Number to identify the header row. This property\n     * is automatically populated when used with TableHeader.\n     */\n    columnNumber: PropTypes.number,\n    /**\n     * @ignore\n     * If true, this column responds to hover events.\n     */\n    hoverable: PropTypes.bool,\n    /** @ignore */\n    onClick: PropTypes.func,\n    /** @ignore */\n    onHover: PropTypes.func,\n    /**\n     * @ignore\n     * Callback function for hover exit event.\n     */\n    onHoverExit: PropTypes.func,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    hoverable: false,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    hovered: false,\n  };\n\n  onClick = (event) => {\n    if (this.props.onClick) {\n      this.props.onClick(event, this.props.columnNumber);\n    }\n  };\n\n  onMouseEnter = (event) => {\n    if (this.props.hoverable) {\n      this.setState({hovered: true});\n      if (this.props.onHover) {\n        this.props.onHover(event, this.props.columnNumber);\n      }\n    }\n  };\n\n  onMouseLeave = (event) => {\n    if (this.props.hoverable) {\n      this.setState({hovered: false});\n      if (this.props.onHoverExit) {\n        this.props.onHoverExit(event, this.props.columnNumber);\n      }\n    }\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      columnNumber, // eslint-disable-line no-unused-vars\n      hoverable, // eslint-disable-line no-unused-vars\n      onClick, // eslint-disable-line no-unused-vars\n      onHover, // eslint-disable-line no-unused-vars\n      onHoverExit, // eslint-disable-line no-unused-vars\n      style,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n\n    const handlers = {\n      onClick: this.onClick,\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n    };\n\n    return (\n      <td\n        className={className}\n        style={prepareStyles(Object.assign(styles.root, style))}\n        {...handlers}\n        {...other}\n      >\n        {children}\n      </td>\n    );\n  }\n}\n\nexport default TableRowColumn;\n"]}