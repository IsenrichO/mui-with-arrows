{"version":3,"sources":["../../src/Stepper/Stepper.js"],"names":["getStyles","props","orientation","root","display","flexDirection","alignContent","alignItems","justifyContent","Stepper","getChildContext","stepper","render","activeStep","children","connector","linear","style","prepareStyles","context","muiTheme","styles","numChildren","count","steps","map","step","index","controlProps","active","completed","disabled","last","cloneElement","propTypes","number","node","bool","oneOf","object","defaultProps","contextTypes","isRequired","childContextTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAY,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA,MACpBC,WADoB,GACLD,KADK,CACpBC,WADoB;;AAE3B,SAAO;AACLC,UAAM;AACJC,eAAS,MADL;AAEJC,qBAAeH,gBAAgB,YAAhB,GAA+B,KAA/B,GAAuC,QAFlD;AAGJI,oBAAc,QAHV;AAIJC,kBAAYL,gBAAgB,YAAhB,GAA+B,QAA/B,GAA0C,SAJlD;AAKJM,sBAAgB;AALZ;AADD,GAAP;AASD,CAXD;;IAaMC,O;;;;;;;;oBAuCJC,e,8BAAkB;AAAA,QACTR,WADS,GACM,KAAKD,KADX,CACTC,WADS;;AAEhB,WAAO,EAACS,SAAS,EAACT,wBAAD,EAAV,EAAP;AACD,G;;oBAEDU,M,qBAAS;AAAA,iBAOH,KAAKX,KAPF;AAAA,QAELY,UAFK,UAELA,UAFK;AAAA,QAGLC,QAHK,UAGLA,QAHK;AAAA,QAILC,SAJK,UAILA,SAJK;AAAA,QAKLC,MALK,UAKLA,MALK;AAAA,QAMLC,KANK,UAMLA,KANK;AAAA,QASAC,aATA,GASiB,KAAKC,OAAL,CAAaC,QAT9B,CASAF,aATA;;AAUP,QAAMG,SAASrB,UAAU,KAAKC,KAAf,EAAsB,KAAKkB,OAA3B,CAAf;;AAEA;;;;;;AAMA,QAAMG,cAAc,gBAASC,KAAT,CAAeT,QAAf,CAApB;AACA,QAAMU,QAAQ,gBAASC,GAAT,CAAaX,QAAb,EAAuB,UAACY,IAAD,EAAOC,KAAP,EAAiB;AACpD,UAAMC,eAAe,EAACD,YAAD,EAArB;;AAEA,UAAId,eAAec,KAAnB,EAA0B;AACxBC,qBAAaC,MAAb,GAAsB,IAAtB;AACD,OAFD,MAEO,IAAIb,UAAUH,aAAac,KAA3B,EAAkC;AACvCC,qBAAaE,SAAb,GAAyB,IAAzB;AACD,OAFM,MAEA,IAAId,UAAUH,aAAac,KAA3B,EAAkC;AACvCC,qBAAaG,QAAb,GAAwB,IAAxB;AACD;;AAED,UAAIJ,QAAQ,CAAR,KAAcL,WAAlB,EAA+B;AAC7BM,qBAAaI,IAAb,GAAoB,IAApB;AACD;;AAED,aAAO,CACLL,QAAQ,CAAR,IAAaZ,SADR,EAEL,gBAAMkB,YAAN,CAAmBP,IAAnB,EAAyB,sBAAcE,YAAd,EAA4BF,KAAKzB,KAAjC,CAAzB,CAFK,CAAP;AAID,KAnBa,CAAd;;AAqBA,WACE;AAAA;AAAA,QAAK,OAAOiB,cAAc,sBAAcG,OAAOlB,IAArB,EAA2Bc,KAA3B,CAAd,CAAZ;AACGO;AADH,KADF;AAKD,G;;;4BAvFMU,S,GAAY;AACjB;;;AAGArB,cAAY,oBAAUsB,MAJL;AAKjB;;;AAGArB,YAAU,oBAAUsB,IARH;AASjB;;;AAGArB,aAAW,oBAAUqB,IAZJ;AAajB;;;AAGApB,UAAQ,oBAAUqB,IAhBD;AAiBjB;;;AAGAnC,eAAa,oBAAUoC,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,CApBI;AAqBjB;;;AAGArB,SAAO,oBAAUsB;AAxBA,C,SA2BZC,Y,GAAe;AACpBzB,aAAW,4DADS;AAEpBb,eAAa,YAFO;AAGpBc,UAAQ;AAHY,C,SAMfyB,Y,GAAe,EAACrB,UAAU,oBAAUmB,MAAV,CAAiBG,UAA5B,E,SAEfC,iB,GAAoB,EAAChC,SAAS,oBAAU4B,MAApB,E;kBAuDd9B,O","file":"Stepper.js","sourcesContent":["import React, {Component, Children} from 'react';\nimport PropTypes from 'prop-types';\nimport StepConnector from './StepConnector';\n\nconst getStyles = (props) => {\n  const {orientation} = props;\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: orientation === 'horizontal' ? 'row' : 'column',\n      alignContent: 'center',\n      alignItems: orientation === 'horizontal' ? 'center' : 'stretch',\n      justifyContent: 'space-between',\n    },\n  };\n};\n\nclass Stepper extends Component {\n\n  static propTypes = {\n    /**\n     * Set the active step (zero based index). This will enable `Step` control helpers.\n     */\n    activeStep: PropTypes.number,\n    /**\n     * Should be two or more `<Step />` components.\n     */\n    children: PropTypes.node,\n    /**\n     * A component to be placed between each step.\n     */\n    connector: PropTypes.node,\n    /**\n     * If set to `true`, the `Stepper` will assist in controlling steps for linear flow\n     */\n    linear: PropTypes.bool,\n    /**\n     * The stepper orientation (layout flow direction)\n     */\n    orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n    /**\n     * Override the inline-style of the root element.\n     */\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    connector: <StepConnector />,\n    orientation: 'horizontal',\n    linear: true,\n  };\n\n  static contextTypes = {muiTheme: PropTypes.object.isRequired};\n\n  static childContextTypes = {stepper: PropTypes.object};\n\n  getChildContext() {\n    const {orientation} = this.props;\n    return {stepper: {orientation}};\n  }\n\n  render() {\n    const {\n      activeStep,\n      children,\n      connector,\n      linear,\n      style,\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n\n    /**\n     * One day, we may be able to use real CSS tools\n     * For now, we need to create our own \"pseudo\" elements\n     * and nth child selectors, etc\n     * That's what some of this garbage is for :)\n     */\n    const numChildren = Children.count(children);\n    const steps = Children.map(children, (step, index) => {\n      const controlProps = {index};\n\n      if (activeStep === index) {\n        controlProps.active = true;\n      } else if (linear && activeStep > index) {\n        controlProps.completed = true;\n      } else if (linear && activeStep < index) {\n        controlProps.disabled = true;\n      }\n\n      if (index + 1 === numChildren) {\n        controlProps.last = true;\n      }\n\n      return [\n        index > 0 && connector,\n        React.cloneElement(step, Object.assign(controlProps, step.props)),\n      ];\n    });\n\n    return (\n      <div style={prepareStyles(Object.assign(styles.root, style))}>\n        {steps}\n      </div>\n    );\n  }\n}\n\nexport default Stepper;\n"]}