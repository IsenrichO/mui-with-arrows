{"version":3,"sources":["../../src/Stepper/StepContent.js"],"names":["ExpandTransition","props","getStyles","context","styles","root","marginTop","marginLeft","paddingLeft","paddingRight","overflow","last","borderLeft","muiTheme","stepper","connectorLineColor","StepContent","render","active","children","completed","style","transition","transitionDuration","other","prepareStyles","orientation","transitionProps","enterDelay","open","createElement","propTypes","bool","node","object","func","number","defaultProps","contextTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO,0DAAyBA,KAAzB,CAAP;AACD;;AAED,IAAMC,YAAY,SAAZA,SAAY,CAACD,KAAD,EAAQE,OAAR,EAAoB;AACpC,MAAMC,SAAS;AACbC,UAAM;AACJC,iBAAW,CAAC,EADR;AAEJC,kBAAY,KAAK,EAFb,EAEiB;AACrBC,mBAAa,KAAK,EAAL,GAAU,CAHnB;AAIJC,oBAAc,EAJV;AAKJC,gBAAU;AALN;AADO,GAAf;;AAUA,MAAI,CAACT,MAAMU,IAAX,EAAiB;AACfP,WAAOC,IAAP,CAAYO,UAAZ,kBAAsCT,QAAQU,QAAR,CAAiBC,OAAjB,CAAyBC,kBAA/D;AACD;;AAED,SAAOX,MAAP;AACD,CAhBD;;IAkBMY,W;;;;;;;;wBA0CJC,M,qBAAS;AAAA,iBAUH,KAAKhB,KAVF;AAAA,QAELiB,MAFK,UAELA,MAFK;AAAA,QAGLC,QAHK,UAGLA,QAHK;AAAA,QAILC,SAJK,UAILA,SAJK;AAAA,QAKLT,IALK,UAKLA,IALK;AAAA,QAMLU,KANK,UAMLA,KANK;AAAA,QAOLC,UAPK,UAOLA,UAPK;AAAA,QAQLC,kBARK,UAQLA,kBARK;AAAA,QASFC,KATE;AAAA,mBAWsC,KAAKrB,OAX3C;AAAA,QAWAW,OAXA,YAWAA,OAXA;AAAA,QAWoBW,aAXpB,YAWSZ,QAXT,CAWoBY,aAXpB;;;AAaP,QAAIX,QAAQY,WAAR,KAAwB,UAA5B,EAAwC;AACtC,6BAAQ,KAAR,EAAe,kFAAf;AACA,aAAO,IAAP;AACD;;AAED,QAAMtB,SAASF,UAAU,KAAKD,KAAf,EAAsB,KAAKE,OAA3B,CAAf;AACA,QAAMwB,kBAAkB;AACtBC,kBAAYL,kBADU;AAEtBA,0BAAoBA,kBAFE;AAGtBM,YAAMX;AAHgB,KAAxB;;AAMA,WACE;AAAA;AAAA,+BAAK,OAAOO,cAAc,sBAAcrB,OAAOC,IAArB,EAA2BgB,KAA3B,CAAd,CAAZ,IAAkEG,KAAlE;AACG,sBAAMM,aAAN,CAAoBR,UAApB,EAAgCK,eAAhC,EAAiD;AAAA;AAAA,UAAK,OAAO,EAACjB,UAAU,QAAX,EAAZ;AAAmCS;AAAnC,OAAjD;AADH,KADF;AAKD,G;;;4BAvEMY,S,GAAY;AACjB;;;AAGAb,UAAQ,oBAAUc,IAJD;AAKjB;;;AAGAb,YAAU,oBAAUc,IARH;AASjB;;;AAGAb,aAAW,oBAAUY,IAZJ;AAajB;;;AAGArB,QAAM,oBAAUqB,IAhBC;AAiBjB;;;AAGAX,SAAO,oBAAUa,MApBA;AAqBjB;;;AAGAZ,cAAY,oBAAUa,IAxBL;AAyBjB;;;AAGAZ,sBAAoB,oBAAUa;AA5Bb,C,SA+BZC,Y,GAAe;AACpBf,cAAYtB,gBADQ;AAEpBuB,sBAAoB;AAFA,C,SAKfe,Y,GAAe;AACpBzB,YAAU,oBAAUqB,MAAV,CAAiBK,UADP;AAEpBzB,WAAS,oBAAUoB;AAFC,C;kBAsCTlB,W","file":"StepContent.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport TransitionComponent from '../internal/ExpandTransition';\nimport warning from 'warning';\n\nfunction ExpandTransition(props) {\n  return <TransitionComponent {...props} />;\n}\n\nconst getStyles = (props, context) => {\n  const styles = {\n    root: {\n      marginTop: -14,\n      marginLeft: 14 + 11, // padding + 1/2 icon\n      paddingLeft: 24 - 11 + 8,\n      paddingRight: 16,\n      overflow: 'hidden',\n    },\n  };\n\n  if (!props.last) {\n    styles.root.borderLeft = `1px solid ${context.muiTheme.stepper.connectorLineColor}`;\n  }\n\n  return styles;\n};\n\nclass StepContent extends Component {\n  static propTypes = {\n    /**\n     * Expands the content\n     */\n    active: PropTypes.bool,\n    /**\n     * Step content\n     */\n    children: PropTypes.node,\n    /**\n     * @ignore\n     */\n    completed: PropTypes.bool,\n    /**\n     * @ignore\n     */\n    last: PropTypes.bool,\n    /**\n     * Override the inline-style of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * ReactTransitionGroup component.\n     */\n    transition: PropTypes.func,\n    /**\n     * Adjust the duration of the content expand transition. Passed as a prop to the transition component.\n     */\n    transitionDuration: PropTypes.number,\n  };\n\n  static defaultProps = {\n    transition: ExpandTransition,\n    transitionDuration: 450,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n    stepper: PropTypes.object,\n  };\n\n  render() {\n    const {\n      active,\n      children,\n      completed, // eslint-disable-line no-unused-vars\n      last, // eslint-disable-line no-unused-vars\n      style,\n      transition,\n      transitionDuration,\n      ...other\n    } = this.props;\n    const {stepper, muiTheme: {prepareStyles}} = this.context;\n\n    if (stepper.orientation !== 'vertical') {\n      warning(false, 'Material-UI: <StepContent /> is only designed for use with the vertical stepper.');\n      return null;\n    }\n\n    const styles = getStyles(this.props, this.context);\n    const transitionProps = {\n      enterDelay: transitionDuration,\n      transitionDuration: transitionDuration,\n      open: active,\n    };\n\n    return (\n      <div style={prepareStyles(Object.assign(styles.root, style))} {...other}>\n        {React.createElement(transition, transitionProps, <div style={{overflow: 'hidden'}}>{children}</div>)}\n      </div>\n    );\n  }\n}\n\nexport default StepContent;\n"]}