{"version":3,"sources":["../../src/Stepper/StepLabel.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","stepper","orientation","it","wrapper","paddingRight","color","border","props","strictEqual","style","childWrapper","ok","contains","icon","find","length","inactiveIconColor","fontWeight","textColor","iconColor","width","paddingBottom","iconContainerStyle","at","disabledTextColor"],"mappings":"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","file":"StepLabel.spec.js","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {assert} from 'chai';\nimport StepLabel from './StepLabel';\nimport getMuiTheme from '../styles/getMuiTheme';\n\ndescribe('<StepLabel />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node, context = {}) => {\n    return shallow(node, {\n      context: {\n        muiTheme,\n        stepper: {\n          orientation: 'horizontal',\n        },\n        ...context,\n      },\n    });\n  };\n\n  it('merges styles and other props into the root node', () => {\n    const wrapper = shallowWithContext(\n      <StepLabel\n        style={{paddingRight: 200, color: 'purple', border: '1px solid tomato'}}\n        data-myProp=\"hello\"\n      />\n    );\n    const props = wrapper.props();\n    assert.strictEqual(props.style.paddingRight, 200);\n    assert.strictEqual(props.style.color, 'purple');\n    assert.strictEqual(props.style.border, '1px solid tomato');\n    assert.strictEqual(props['data-myProp'], 'hello');\n  });\n\n  describe('label content', () => {\n    it('renders the label from children', () => {\n      const childWrapper = shallowWithContext(\n        <StepLabel>Step One</StepLabel>\n      );\n      assert.ok(childWrapper.contains('Step One'));\n    });\n\n    it('renders the icon from a number with the disabled color', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel disabled={true} icon={1}>Step One</StepLabel>\n      );\n      const icon = wrapper.find('SvgIcon');\n      assert.strictEqual(icon.length, 1, 'should have an <SvgIcon />');\n      assert.strictEqual(\n        icon.props().color,\n        muiTheme.stepper.inactiveIconColor,\n        'should pass the inactive icon color'\n      );\n    });\n\n    it('renders the custom icon', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel icon={<span className=\"my-icon\" />}>Step One</StepLabel>\n      );\n      assert.strictEqual(wrapper.find('.my-icon').length, 1, 'should have the custom icon');\n    });\n  });\n\n  describe('prop: active = false', () => {\n    it('renders text with no specific font weight', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel active={false}>Step One</StepLabel>\n      );\n      assert.strictEqual(typeof wrapper.props().style.fontWeight, 'undefined');\n    });\n  });\n\n  describe('prop: active = true', () => {\n    it('renders the label text bold', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel active={true}>Step One</StepLabel>\n      );\n      assert.strictEqual(wrapper.props().style.fontWeight, 500);\n    });\n\n    it('renders with the standard coloring', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel active={true} icon={1}>Step One</StepLabel>\n      );\n      assert.strictEqual(\n        wrapper.props().style.color,\n        muiTheme.stepper.textColor,\n        'should have the standard text color'\n      );\n      const icon = wrapper.find('SvgIcon');\n      assert.strictEqual(\n        icon.props().color,\n        muiTheme.stepper.iconColor,\n        'should pass the standard icon color'\n      );\n    });\n  });\n\n  describe('prop: completed = true', () => {\n    it('renders the label text with no specific font weight', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel completed={true}>Step One</StepLabel>\n      );\n      assert.strictEqual(typeof wrapper.props().style.fontWeight, 'undefined');\n    });\n\n    it('renders a check circle with the standard coloring', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel completed={true} icon={1}>Step One</StepLabel>\n      );\n      assert.strictEqual(\n        wrapper.props().style.color,\n        muiTheme.stepper.textColor,\n        'should have the standard text color'\n      );\n    });\n  });\n\n  describe('prop: iconContainerStyle', () => {\n    it('merges values into the icon container node style prop', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel\n          iconContainerStyle={{width: 64, color: 'lime', paddingBottom: 300, border: '3px solid teal'}}\n          icon={1}\n        >\n          Step One\n        </StepLabel>\n      );\n      const iconContainerStyle = wrapper.find('span').at(1).props().style;\n      assert.strictEqual(iconContainerStyle.width, 64);\n      assert.strictEqual(iconContainerStyle.color, 'lime');\n      assert.strictEqual(iconContainerStyle.paddingBottom, 300);\n      assert.strictEqual(iconContainerStyle.border, '3px solid teal');\n    });\n  });\n\n  describe('prop combinations', () => {\n    it('renders with active styling when active', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel icon={1} active={true}>Step One</StepLabel>\n      );\n      assert.strictEqual(\n        wrapper.props().style.color,\n        muiTheme.stepper.textColor,\n        'should have the standard text color'\n      );\n      const icon = wrapper.find('SvgIcon');\n      assert.strictEqual(\n        icon.props().color,\n        muiTheme.stepper.iconColor,\n        'should pass the standard icon color'\n      );\n    });\n\n    it('renders with inactive styling when inactive and not complete', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel icon={1}>Step One</StepLabel>\n      );\n      assert.strictEqual(\n        wrapper.props().style.color,\n        muiTheme.stepper.textColor,\n        'should have the standard text color'\n      );\n      const icon = wrapper.find('SvgIcon');\n      assert.strictEqual(\n        icon.props().color,\n        muiTheme.stepper.inactiveIconColor,\n        'should pass the inactive icon color'\n      );\n    });\n\n    it('renders with disabled styling when disabled', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel icon={1} disabled={true}>Step One</StepLabel>\n      );\n      assert.strictEqual(\n        wrapper.props().style.color,\n        muiTheme.stepper.disabledTextColor,\n        'should have the disabled text color'\n      );\n      const icon = wrapper.find('SvgIcon');\n      assert.strictEqual(\n        icon.props().color,\n        muiTheme.stepper.inactiveIconColor,\n        'should pass the inactive icon color'\n      );\n    });\n\n    it('renders with a check icon and active styling when completed', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel icon={1} completed={true}>Step One</StepLabel>\n      );\n      assert.strictEqual(\n        wrapper.props().style.color,\n        muiTheme.stepper.textColor,\n        'should have the standard text color'\n      );\n      const icon = wrapper.find('ActionCheckCircle');\n      assert.strictEqual(\n        icon.props().color,\n        muiTheme.stepper.iconColor,\n        'should pass the standard icon color'\n      );\n    });\n\n    it('renders with a check icon and disabled when disabled and completed', () => {\n      const wrapper = shallowWithContext(\n        <StepLabel icon={1} disabled={true} completed={true}>Step One</StepLabel>\n      );\n      assert.strictEqual(\n        wrapper.props().style.color,\n        muiTheme.stepper.disabledTextColor,\n        'should have the disabled text color'\n      );\n      const icon = wrapper.find('ActionCheckCircle');\n      assert.strictEqual(\n        icon.props().color,\n        muiTheme.stepper.inactiveIconColor,\n        'should pass the inactive icon color'\n      );\n    });\n  });\n});\n"]}