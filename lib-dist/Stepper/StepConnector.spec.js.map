{"version":3,"sources":["../../src/Stepper/StepConnector.spec.js"],"names":["describe","muiTheme","themedShallow","node","context","stepper","orientation","wrapper","it","ok","is","line","find","length","strictEqual","prop","borderTopWidth","notOk","borderLeftWidth","setContext"],"mappings":";;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;;;AAEAA,SAAS,mBAAT,EAA8B,YAAM;AAClC,MAAMC,WAAW,4BAAjB;AACA,MAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC9B,QAAMC,UAAU,EAACH,kBAAD,EAAWI,SAAS,EAACC,aAAa,YAAd,EAApB,EAAhB;AACA,WAAO,qBAAQH,IAAR,EAAc,EAACC,gBAAD,EAAd,CAAP;AACD,GAHD;;AAKAJ,WAAS,WAAT,EAAsB,YAAM;AAC1B,QAAMO,UAAUL,cACd,sEADc,CAAhB;;AAIAM,OAAG,iCAAH,EAAsC,YAAM;AAC1C,mBAAOC,EAAP,CAAUF,QAAQG,EAAR,CAAW,KAAX,CAAV;AACA,UAAMC,OAAOJ,QAAQK,IAAR,CAAa,MAAb,CAAb;AACA,mBAAOH,EAAP,CAAUE,KAAKE,MAAf;AACD,KAJD;;AAMAL,OAAG,kCAAH,EAAuC,YAAM;AAC3C,UAAMG,OAAOJ,QAAQK,IAAR,CAAa,MAAb,CAAb;AACA,mBAAOE,WAAP,CAAmBH,KAAKI,IAAL,CAAU,OAAV,EAAmBC,cAAtC,EAAsD,CAAtD;AACA,mBAAOC,KAAP,CAAaN,KAAKI,IAAL,CAAU,OAAV,EAAmBG,eAAhC;AACD,KAJD;;AAMAV,OAAG,iCAAH,EAAsC,YAAM;AAC1CD,cAAQY,UAAR,CAAmB,EAAClB,kBAAD,EAAWI,SAAS,EAACC,aAAa,UAAd,EAApB,EAAnB;AACA,UAAMK,OAAOJ,QAAQK,IAAR,CAAa,MAAb,CAAb;AACA,mBAAOE,WAAP,CAAmBH,KAAKI,IAAL,CAAU,OAAV,EAAmBG,eAAtC,EAAuD,CAAvD;AACA,mBAAOD,KAAP,CAAaN,KAAKI,IAAL,CAAU,OAAV,EAAmBC,cAAhC;AACD,KALD;AAMD,GAvBD;AAwBD,CA/BD,E,CAPA","file":"StepConnector.spec.js","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {assert} from 'chai';\nimport {PlainStepConnector as StepConnector} from './StepConnector';\nimport getMuiTheme from '../styles/getMuiTheme';\n\ndescribe('<StepConnector />', () => {\n  const muiTheme = getMuiTheme();\n  const themedShallow = (node) => {\n    const context = {muiTheme, stepper: {orientation: 'horizontal'}};\n    return shallow(node, {context});\n  };\n\n  describe('rendering', () => {\n    const wrapper = themedShallow(\n      <StepConnector />\n    );\n\n    it('renders a div containing a span', () => {\n      assert.ok(wrapper.is('div'));\n      const line = wrapper.find('span');\n      assert.ok(line.length);\n    });\n\n    it('has a top border when horizontal', () => {\n      const line = wrapper.find('span');\n      assert.strictEqual(line.prop('style').borderTopWidth, 1);\n      assert.notOk(line.prop('style').borderLeftWidth);\n    });\n\n    it('has a left border when vertical', () => {\n      wrapper.setContext({muiTheme, stepper: {orientation: 'vertical'}});\n      const line = wrapper.find('span');\n      assert.strictEqual(line.prop('style').borderLeftWidth, 1);\n      assert.notOk(line.prop('style').borderTopWidth);\n    });\n  });\n});\n"]}