{"version":3,"sources":["../../src/Stepper/StepLabel.js"],"names":["getStyles","active","completed","disabled","muiTheme","stepper","textColor","disabledTextColor","iconColor","inactiveIconColor","baseTheme","orientation","styles","root","height","color","display","alignItems","fontFamily","fontSize","paddingLeft","paddingRight","icon","width","iconContainer","fontWeight","cursor","renderIcon","iconType","StepLabel","props","context","children","userIcon","iconContainerStyle","last","style","other","prepareStyles","muiName","propTypes","bool","node","oneOfType","element","string","number","object","contextTypes","isRequired"],"mappings":"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","file":"StepLabel.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckCircle from '../svg-icons/action/check-circle';\nimport SvgIcon from '../SvgIcon';\n\nconst getStyles = ({active, completed, disabled}, {muiTheme, stepper}) => {\n  const {\n    textColor,\n    disabledTextColor,\n    iconColor,\n    inactiveIconColor,\n  } = muiTheme.stepper;\n  const {baseTheme} = muiTheme;\n  const {orientation} = stepper;\n\n  const styles = {\n    root: {\n      height: orientation === 'horizontal' ? 72 : 64,\n      color: textColor,\n      display: 'flex',\n      alignItems: 'center',\n      fontFamily: baseTheme.fontFamily,\n      fontSize: 14,\n      paddingLeft: 14,\n      paddingRight: 14,\n    },\n    icon: {\n      color: iconColor,\n      display: 'block',\n      fontSize: 24,\n      width: 24,\n      height: 24,\n    },\n    iconContainer: {\n      paddingRight: 8,\n    },\n  };\n\n  if (active) {\n    styles.root.fontWeight = 500;\n  }\n\n  if (!completed && !active) {\n    styles.icon.color = inactiveIconColor;\n  }\n\n  if (disabled) {\n    styles.icon.color = inactiveIconColor;\n    styles.root.color = disabledTextColor;\n    styles.root.cursor = 'default';\n  }\n\n  return styles;\n};\n\nconst renderIcon = (completed, icon, styles) => {\n  const iconType = typeof icon;\n\n  if (iconType === 'number' || iconType === 'string') {\n    if (completed) {\n      return (\n        <CheckCircle\n          color={styles.icon.color}\n          style={styles.icon}\n        />\n      );\n    }\n\n    return (\n      <SvgIcon color={styles.icon.color} style={styles.icon}>\n        <circle cx=\"12\" cy=\"12\" r=\"10\" />\n        <text\n          x=\"12\"\n          y=\"16\"\n          textAnchor=\"middle\"\n          fontSize=\"12\"\n          fill=\"#fff\"\n        >\n          {icon}\n        </text>\n      </SvgIcon>\n    );\n  }\n\n  return icon;\n};\n\nconst StepLabel = (props, context) => {\n  const {\n    active, // eslint-disable-line no-unused-vars\n    children,\n    completed,\n    icon: userIcon,\n    iconContainerStyle,\n    last, // eslint-disable-line no-unused-vars\n    style,\n    ...other\n  } = props;\n\n  const {prepareStyles} = context.muiTheme;\n  const styles = getStyles(props, context);\n  const icon = renderIcon(completed, userIcon, styles);\n\n  return (\n    <span style={prepareStyles(Object.assign(styles.root, style))} {...other}>\n      {icon && (\n        <span style={prepareStyles(Object.assign(styles.iconContainer, iconContainerStyle))}>\n          {icon}\n        </span>\n      )}\n      {children}\n    </span>\n  );\n};\n\nStepLabel.muiName = 'StepLabel';\n\nStepLabel.propTypes = {\n  /**\n   * Sets active styling. Overrides disabled coloring.\n   */\n  active: PropTypes.bool,\n  /**\n   * The label text node\n   */\n  children: PropTypes.node,\n  /**\n   * Sets completed styling. Overrides disabled coloring.\n   */\n  completed: PropTypes.bool,\n  /**\n   * Sets disabled styling.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The icon displayed by the step label.\n   */\n  icon: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  /**\n   * Override the inline-styles of the icon container element.\n   */\n  iconContainerStyle: PropTypes.object,\n  /**\n   * @ignore\n   */\n  last: PropTypes.bool,\n  /**\n   * Override the inline-style of the root element.\n   */\n  style: PropTypes.object,\n};\n\nStepLabel.contextTypes = {\n  muiTheme: PropTypes.object.isRequired,\n  stepper: PropTypes.object,\n};\n\nexport default StepLabel;\n"]}