{"version":3,"sources":["../../src/Subheader/Subheader.js"],"names":["Subheader","props","context","children","inset","style","other","muiTheme","prepareStyles","subheader","styles","root","boxSizing","color","fontSize","fontWeight","lineHeight","paddingLeft","width","muiName","propTypes","node","bool","object","defaultProps","contextTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,YAAY,SAAZA,SAAY,CAACC,KAAD,EAAQC,OAAR,EAAoB;AAAA,MAElCC,QAFkC,GAMhCF,KANgC,CAElCE,QAFkC;AAAA,MAGlCC,KAHkC,GAMhCH,KANgC,CAGlCG,KAHkC;AAAA,MAIlCC,KAJkC,GAMhCJ,KANgC,CAIlCI,KAJkC;AAAA,MAK/BC,KAL+B,0CAMhCL,KANgC;AAAA,0BAWhCC,QAAQK,QAXwB;AAAA,MASlCC,aATkC,qBASlCA,aATkC;AAAA,MAUlCC,SAVkC,qBAUlCA,SAVkC;;;AAapC,MAAMC,SAAS;AACbC,UAAM;AACJC,iBAAW,YADP;AAEJC,aAAOJ,UAAUI,KAFb;AAGJC,gBAAU,EAHN;AAIJC,kBAAYN,UAAUM,UAJlB;AAKJC,kBAAY,MALR;AAMJC,mBAAab,QAAQ,EAAR,GAAa,EANtB;AAOJc,aAAO;AAPH;AADO,GAAf;;AAYA,SACE;AAAA;AAAA,+BAASZ,KAAT,IAAgB,OAAOE,cAAc,sBAAcE,OAAOC,IAArB,EAA2BN,KAA3B,CAAd,CAAvB;AACGF;AADH,GADF;AAKD,CA9BD;;AAgCAH,UAAUmB,OAAV,GAAoB,WAApB;;AAEAnB,UAAUoB,SAAV,GAAsB;AACpB;;;AAGAjB,YAAU,oBAAUkB,IAJA;AAKpB;;;AAGAjB,SAAO,oBAAUkB,IARG;AASpB;;;AAGAjB,SAAO,oBAAUkB;AAZG,CAAtB;;AAeAvB,UAAUwB,YAAV,GAAyB;AACvBpB,SAAO;AADgB,CAAzB;;AAIAJ,UAAUyB,YAAV,GAAyB;AACvBlB,YAAU,oBAAUgB,MAAV,CAAiBG;AADJ,CAAzB;;kBAIe1B,S","file":"Subheader.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Subheader = (props, context) => {\n  const {\n    children,\n    inset,\n    style,\n    ...other\n  } = props;\n\n  const {\n    prepareStyles,\n    subheader,\n  } = context.muiTheme;\n\n  const styles = {\n    root: {\n      boxSizing: 'border-box',\n      color: subheader.color,\n      fontSize: 14,\n      fontWeight: subheader.fontWeight,\n      lineHeight: '48px',\n      paddingLeft: inset ? 72 : 16,\n      width: '100%',\n    },\n  };\n\n  return (\n    <div {...other} style={prepareStyles(Object.assign(styles.root, style))}>\n      {children}\n    </div>\n  );\n};\n\nSubheader.muiName = 'Subheader';\n\nSubheader.propTypes = {\n  /**\n   * Node that will be placed inside the `Subheader`.\n   */\n  children: PropTypes.node,\n  /**\n   * If true, the `Subheader` will be indented.\n   */\n  inset: PropTypes.bool,\n  /**\n   * Override the inline-styles of the root element.\n   */\n  style: PropTypes.object,\n};\n\nSubheader.defaultProps = {\n  inset: false,\n};\n\nSubheader.contextTypes = {\n  muiTheme: PropTypes.object.isRequired,\n};\n\nexport default Subheader;\n"]}