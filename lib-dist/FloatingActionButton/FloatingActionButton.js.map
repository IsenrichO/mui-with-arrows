{"version":3,"sources":["../../src/FloatingActionButton/FloatingActionButton.js"],"names":["getStyles","props","context","floatingActionButton","muiTheme","backgroundColor","color","iconColor","disabled","disabledColor","disabledTextColor","secondary","secondaryColor","secondaryIconColor","root","transition","easeOut","display","container","height","buttonSize","width","padding","overflow","borderRadius","textAlign","verticalAlign","containerWhenMini","miniSize","overlay","top","overlayWhenHovered","icon","lineHeight","fill","iconWhenMini","FloatingActionButton","state","hovered","touch","zDepth","undefined","handleMouseDown","event","button","setState","onMouseDown","handleMouseUp","onMouseUp","handleMouseLeave","refs","isKeyboardFocused","onMouseLeave","handleMouseEnter","onMouseEnter","handleTouchStart","onTouchStart","handleTouchEnd","onTouchEnd","handleKeyboardFocus","keyboardFocused","style","componentWillMount","componentDidMount","iconClassName","children","componentWillReceiveProps","nextProps","nextState","render","className","childrenProp","mini","iconStyle","other","prepareStyles","styles","iconElement","child","buttonEventHandlers","onKeyboardFocus","propTypes","string","node","bool","href","object","func","onTouchTap","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"FloatingActionButton.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport transitions from '../styles/transitions';\nimport {fade} from '../utils/colorManipulator';\nimport EnhancedButton from '../internal/EnhancedButton';\nimport FontIcon from '../FontIcon';\nimport Paper from '../Paper';\nimport {extendChildren} from '../utils/childUtils';\nimport warning from 'warning';\nimport propTypes from '../utils/propTypes';\n\nfunction getStyles(props, context) {\n  const {floatingActionButton} = context.muiTheme;\n\n  let backgroundColor = props.backgroundColor || floatingActionButton.color;\n  let iconColor = floatingActionButton.iconColor;\n\n  if (props.disabled) {\n    backgroundColor = props.disabledColor || floatingActionButton.disabledColor;\n    iconColor = floatingActionButton.disabledTextColor;\n  } else if (props.secondary) {\n    backgroundColor = floatingActionButton.secondaryColor;\n    iconColor = floatingActionButton.secondaryIconColor;\n  }\n\n  return {\n    root: {\n      transition: transitions.easeOut(),\n      display: 'inline-block',\n      backgroundColor: 'transparent',\n    },\n    container: {\n      backgroundColor,\n      transition: transitions.easeOut(),\n      height: floatingActionButton.buttonSize,\n      width: floatingActionButton.buttonSize,\n      padding: 0,\n      overflow: 'hidden',\n      borderRadius: '50%',\n      textAlign: 'center',\n      verticalAlign: 'bottom',\n    },\n    containerWhenMini: {\n      height: floatingActionButton.miniSize,\n      width: floatingActionButton.miniSize,\n    },\n    overlay: {\n      transition: transitions.easeOut(),\n      top: 0,\n    },\n    overlayWhenHovered: {\n      backgroundColor: fade(iconColor, 0.4),\n    },\n    icon: {\n      height: floatingActionButton.buttonSize,\n      lineHeight: `${floatingActionButton.buttonSize}px`,\n      fill: iconColor,\n      color: iconColor,\n    },\n    iconWhenMini: {\n      height: floatingActionButton.miniSize,\n      lineHeight: `${floatingActionButton.miniSize}px`,\n    },\n  };\n}\n\nclass FloatingActionButton extends Component {\n  static propTypes = {\n    /**\n     * This value will override the default background color for the button.\n     * However it will not override the default disabled background color.\n     * This has to be set separately using the disabledColor attribute.\n     */\n    backgroundColor: PropTypes.string,\n    /**\n     * This is what displayed inside the floating action button; for example, a SVG Icon.\n     */\n    children: PropTypes.node,\n    /**\n     * The css class name of the root element.\n     */\n    className: PropTypes.string,\n    /**\n     * Disables the button if set to true.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * This value will override the default background color for the button when it is disabled.\n     */\n    disabledColor: PropTypes.string,\n    /**\n     * The URL to link to when the button is clicked.\n     */\n    href: PropTypes.string,\n    /**\n     * The icon within the FloatingActionButton is a FontIcon component.\n     * This property is the classname of the icon to be displayed inside the button.\n     * An alternative to adding an iconClassName would be to manually insert a\n     * FontIcon component or custom SvgIcon component or as a child of FloatingActionButton.\n     */\n    iconClassName: PropTypes.string,\n    /**\n     * This is the equivalent to iconClassName except that it is used for\n     * overriding the inline-styles of the FontIcon component.\n     */\n    iconStyle: PropTypes.object,\n    /**\n     * If true, the button will be a small floating action button.\n     */\n    mini: PropTypes.bool,\n    /** @ignore */\n    onMouseDown: PropTypes.func,\n    /** @ignore */\n    onMouseEnter: PropTypes.func,\n    /** @ignore */\n    onMouseLeave: PropTypes.func,\n    /** @ignore */\n    onMouseUp: PropTypes.func,\n    /** @ignore */\n    onTouchEnd: PropTypes.func,\n    /** @ignore */\n    onTouchStart: PropTypes.func,\n    /**\n     * Callback function fired when the button is touch-tapped.\n     *\n     * @param {object} event TouchTap event targeting the button.\n     */\n    onTouchTap: PropTypes.func,\n    /**\n     * If true, the button will use the secondary button colors.\n     */\n    secondary: PropTypes.bool,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * The zDepth of the underlying `Paper` component.\n     */\n    zDepth: propTypes.zDepth,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    mini: false,\n    secondary: false,\n    zDepth: 2,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    hovered: false,\n    touch: false,\n    zDepth: undefined,\n  };\n\n  componentWillMount() {\n    this.setState({\n      zDepth: this.props.disabled ? 0 : this.props.zDepth,\n    });\n  }\n\n  componentDidMount() {\n    warning(!this.props.iconClassName || !this.props.children,\n      'Material-UI: You have set both an iconClassName and a child icon. ' +\n      'It is recommended you use only one method when adding ' +\n      'icons to FloatingActionButtons.');\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextState = {};\n\n    if (nextProps.disabled !== this.props.disabled) {\n      nextState.zDepth = nextProps.disabled ? 0 : this.props.zDepth;\n    }\n    if (nextProps.disabled) {\n      nextState.hovered = false;\n    }\n\n    this.setState(nextState);\n  }\n\n  handleMouseDown = (event) => {\n    // only listen to left clicks\n    if (event.button === 0) {\n      this.setState({zDepth: this.props.zDepth + 1});\n    }\n    if (this.props.onMouseDown) this.props.onMouseDown(event);\n  };\n\n  handleMouseUp = (event) => {\n    this.setState({zDepth: this.props.zDepth});\n    if (this.props.onMouseUp) {\n      this.props.onMouseUp(event);\n    }\n  };\n\n  handleMouseLeave = (event) => {\n    if (!this.refs.container.isKeyboardFocused()) {\n      this.setState({zDepth: this.props.zDepth, hovered: false});\n    }\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(event);\n    }\n  };\n\n  handleMouseEnter = (event) => {\n    if (!this.refs.container.isKeyboardFocused() && !this.state.touch) {\n      this.setState({hovered: true});\n    }\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(event);\n    }\n  };\n\n  handleTouchStart = (event) => {\n    this.setState({\n      touch: true,\n      zDepth: this.props.zDepth + 1,\n    });\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(event);\n    }\n  };\n\n  handleTouchEnd = (event) => {\n    this.setState({\n      touch: true,\n      zDepth: this.props.zDepth,\n    });\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(event);\n    }\n  };\n\n  handleKeyboardFocus = (event, keyboardFocused) => {\n    if (keyboardFocused && !this.props.disabled) {\n      this.setState({zDepth: this.props.zDepth + 1});\n      this.refs.overlay.style.backgroundColor =\n        fade(getStyles(this.props, this.context).icon.color, 0.4);\n    } else if (!this.state.hovered) {\n      this.setState({zDepth: this.props.zDepth});\n      this.refs.overlay.style.backgroundColor = 'transparent';\n    }\n  };\n\n  render() {\n    const {\n      backgroundColor, // eslint-disable-line no-unused-vars\n      className,\n      children: childrenProp,\n      disabled,\n      disabledColor, // eslint-disable-line no-unused-vars\n      mini,\n      secondary, // eslint-disable-line no-unused-vars\n      iconStyle,\n      iconClassName,\n      zDepth, // eslint-disable-line no-unused-vars\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n\n    let iconElement;\n    if (iconClassName) {\n      iconElement = (\n        <FontIcon\n          className={iconClassName}\n          style={Object.assign({},\n            styles.icon,\n            mini && styles.iconWhenMini,\n            iconStyle)}\n        />\n      );\n    }\n\n    let children;\n\n    if (childrenProp) {\n      children = extendChildren(childrenProp, (child) => ({\n        style: Object.assign({},\n          styles.icon,\n          mini && styles.iconWhenMini,\n          iconStyle,\n          child.props.style),\n      }));\n    }\n\n    const buttonEventHandlers = disabled ? null : {\n      onMouseDown: this.handleMouseDown,\n      onMouseUp: this.handleMouseUp,\n      onMouseLeave: this.handleMouseLeave,\n      onMouseEnter: this.handleMouseEnter,\n      onTouchStart: this.handleTouchStart,\n      onTouchEnd: this.handleTouchEnd,\n      onKeyboardFocus: this.handleKeyboardFocus,\n    };\n\n    return (\n      <Paper\n        className={className}\n        style={Object.assign(styles.root, this.props.style)}\n        zDepth={this.state.zDepth}\n        circle={true}\n      >\n        <EnhancedButton\n          {...other}\n          {...buttonEventHandlers}\n          ref=\"container\"\n          disabled={disabled}\n          style={Object.assign(\n            styles.container,\n            this.props.mini && styles.containerWhenMini,\n            iconStyle\n          )}\n          focusRippleColor={styles.icon.color}\n          touchRippleColor={styles.icon.color}\n        >\n          <div\n            ref=\"overlay\"\n            style={prepareStyles(Object.assign(\n              styles.overlay,\n              (this.state.hovered && !this.props.disabled) && styles.overlayWhenHovered\n            ))}\n          >\n            {iconElement}\n            {children}\n          </div>\n        </EnhancedButton>\n      </Paper>\n    );\n  }\n}\n\nexport default FloatingActionButton;\n"]}