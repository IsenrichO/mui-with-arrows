{"version":3,"sources":["../../src/Snackbar/SnackbarBody.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","it","wrapper","strictEqual","find","at","props","style","opacity"],"mappings":";;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AANA;AAQAA,SAAS,kBAAT,EAA6B,YAAM;AACjC,MAAMC,WAAW,4BAAjB;AACA,MAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,IAAD;AAAA,WAAU,qBAAQA,IAAR,EAAc,EAACC,SAAS,EAACH,kBAAD,EAAV,EAAd,CAAV;AAAA,GAA3B;;AAEAD,WAAS,aAAT,EAAwB,YAAM;AAC5BK,OAAG,qCAAH,EAA0C,YAAM;AAC9C,UAAMC,UAAUJ,mBACd,4DAAc,MAAM,KAApB,EAA2B,SAAQ,SAAnC,EAA6C,uBAA7C,GADc,CAAhB;;AAIA,mBAAOK,WAAP,CACED,QAAQE,IAAR,CAAa,KAAb,EAAoBC,EAApB,CAAuB,CAAvB,EAA0BN,IAA1B,CAA+BO,KAA/B,CAAqCC,KAArC,CAA2CC,OAD7C,EAEE,CAFF,EAGE,+BAHF;AAKD,KAVD;;AAYAP,OAAG,qCAAH,EAA0C,YAAM;AAC9C,UAAMC,UAAUJ,mBACd,4DAAc,MAAM,IAApB,EAA0B,SAAQ,SAAlC,EAA4C,uBAA5C,GADc,CAAhB;;AAIA,mBAAOK,WAAP,CACED,QAAQE,IAAR,CAAa,KAAb,EAAoBC,EAApB,CAAuB,CAAvB,EAA0BN,IAA1B,CAA+BO,KAA/B,CAAqCC,KAArC,CAA2CC,OAD7C,EAEE,CAFF,EAGE,gCAHF;AAKD,KAVD;AAWD,GAxBD;AAyBD,CA7BD","file":"SnackbarBody.spec.js","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {assert} from 'chai';\nimport {SnackbarBody} from './SnackbarBody';\nimport getMuiTheme from '../styles/getMuiTheme';\nimport {SMALL} from '../utils/withWidth';\n\ndescribe('<SnackbarBody />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node) => shallow(node, {context: {muiTheme}});\n\n  describe('props: open', () => {\n    it('should be hidden when open is false', () => {\n      const wrapper = shallowWithContext(\n        <SnackbarBody open={false} message=\"Message\" width={SMALL} />\n      );\n\n      assert.strictEqual(\n        wrapper.find('div').at(1).node.props.style.opacity,\n        0,\n        'The element should be hidden.'\n      );\n    });\n\n    it('should be visible when open is true', () => {\n      const wrapper = shallowWithContext(\n        <SnackbarBody open={true} message=\"Message\" width={SMALL} />\n      );\n\n      assert.strictEqual(\n        wrapper.find('div').at(1).node.props.style.opacity,\n        1,\n        'The element should be visible.'\n      );\n    });\n  });\n});\n"]}