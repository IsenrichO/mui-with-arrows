{"version":3,"sources":["../../src/IconMenu/IconMenu.js"],"names":["IconMenu","state","menuInitiallyKeyboardFocused","open","handleItemTouchTap","event","child","props","touchTapCloseDelay","hasOwnProperty","isKeyboard","timerCloseId","setTimeout","close","onItemTouchTap","handleRequestClose","reason","handleEscKeyDownMenu","componentWillReceiveProps","nextProps","setState","anchorEl","refs","iconMenuContainer","componentWillUnmount","clearTimeout","isOpen","onRequestChange","iconButton","findDOMNode","focus","setKeyboardFocus","currentTarget","preventDefault","render","anchorOrigin","className","animated","animation","iconButtonElement","iconStyle","onKeyboardFocus","onMouseDown","onMouseLeave","onMouseEnter","onMouseUp","onTouchTap","listStyle","menuStyle","style","targetOrigin","useLayerForClickAway","other","prepareStyles","context","muiTheme","styles","root","display","position","menu","mergedRootStyles","mergedMenuStyles","type","muiName","iconButtonProps","ref","cloneElement","children","constructor","childContextTypes","propTypes","origin","bool","func","node","string","element","isRequired","object","multiple","number","defaultProps","vertical","horizontal","contextTypes"],"mappings":"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","file":"IconMenu.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport Events from '../utils/events';\nimport propTypes from '../utils/propTypes';\nimport Menu from '../Menu/Menu';\nimport Popover from '../Popover/Popover';\nimport warning from 'warning';\n\nclass IconMenu extends Component {\n  static muiName = 'IconMenu';\n\n  static propTypes = {\n    /**\n     * This is the point on the icon where the menu\n     * `targetOrigin` will attach.\n     * Options:\n     * vertical: [top, center, bottom]\n     * horizontal: [left, middle, right].\n     */\n    anchorOrigin: propTypes.origin,\n    /**\n     * If true, the popover will apply transitions when\n     * it gets added to the DOM.\n     */\n    animated: PropTypes.bool,\n    /**\n     * Override the default animation component used.\n     */\n    animation: PropTypes.func,\n    /**\n     * Should be used to pass `MenuItem` components.\n     */\n    children: PropTypes.node,\n    /**\n     * The CSS class name of the root element.\n     */\n    className: PropTypes.string,\n    /**\n     * This is the `IconButton` to render. This button will open the menu.\n     */\n    iconButtonElement: PropTypes.element.isRequired,\n    /**\n     * Override the inline-styles of the underlying icon element.\n     */\n    iconStyle: PropTypes.object,\n    /**\n     * Override the inline-styles of the underlying `List` element.\n     */\n    listStyle: PropTypes.object,\n    /**\n     * Override the inline-styles of the menu element.\n     */\n    menuStyle: PropTypes.object,\n    /**\n     * If true, the value can an be array and allow the menu to be a multi-select.\n     */\n    multiple: PropTypes.bool,\n    /**\n     * Callback function fired when a menu item is selected with a touch-tap.\n     *\n     * @param {object} event TouchTap event targeting the selected menu item element.\n     * @param {object} child The selected element.\n     */\n    onItemTouchTap: PropTypes.func,\n    /**\n     * Callback function fired when the `IconButton` element is focused or blurred by the keyboard.\n     *\n     * @param {object} event `focus` or `blur` event targeting the `IconButton` element.\n     * @param {boolean} keyboardFocused If true, the `IconButton` element is focused.\n     */\n    onKeyboardFocus: PropTypes.func,\n    /** @ignore */\n    onMouseDown: PropTypes.func,\n    /** @ignore */\n    onMouseEnter: PropTypes.func,\n    /** @ignore */\n    onMouseLeave: PropTypes.func,\n    /** @ignore */\n    onMouseUp: PropTypes.func,\n    /**\n     * Callback function fired when the `open` state of the menu is requested to be changed.\n     *\n     * @param {boolean} open If true, the menu was requested to be opened.\n     * @param {string} reason The reason for the open or close request. Possible values are\n     * 'keyboard' and 'iconTap' for open requests; 'enter', 'escape', 'itemTap', and 'clickAway'\n     * for close requests.\n     */\n    onRequestChange: PropTypes.func,\n    /**\n     * Callback function fired when the `IconButton` element is touch-tapped.\n     *\n     * @param {object} event TouchTap event targeting the `IconButton` element.\n     */\n    onTouchTap: PropTypes.func,\n    /**\n     * If true, the `IconMenu` is opened.\n     */\n    open: PropTypes.bool,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * This is the point on the menu which will stick to the menu\n     * origin.\n     * Options:\n     * vertical: [top, center, bottom]\n     * horizontal: [left, middle, right].\n     */\n    targetOrigin: propTypes.origin,\n    /**\n     * Sets the delay in milliseconds before closing the\n     * menu when an item is clicked.\n     * If set to 0 then the auto close functionality\n     * will be disabled.\n     */\n    touchTapCloseDelay: PropTypes.number,\n    /**\n     * If true, the popover will render on top of an invisible\n     * layer, which will prevent clicks to the underlying elements.\n     */\n    useLayerForClickAway: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'left',\n    },\n    animated: true,\n    multiple: false,\n    open: null,\n    onItemTouchTap: () => {},\n    onKeyboardFocus: () => {},\n    onMouseDown: () => {},\n    onMouseLeave: () => {},\n    onMouseEnter: () => {},\n    onMouseUp: () => {},\n    onRequestChange: () => {},\n    onTouchTap: () => {},\n    targetOrigin: {\n      vertical: 'top',\n      horizontal: 'left',\n    },\n    touchTapCloseDelay: 200,\n    useLayerForClickAway: false,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    menuInitiallyKeyboardFocused: false,\n    open: false,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.open != null) {\n      this.setState({\n        open: nextProps.open,\n        anchorEl: this.refs.iconMenuContainer,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timerCloseId);\n  }\n\n  isOpen() {\n    return this.state.open;\n  }\n\n  close(reason, isKeyboard) {\n    if (!this.state.open) {\n      return;\n    }\n\n    if (this.props.open !== null) {\n      this.props.onRequestChange(false, reason);\n    } else {\n      this.setState({open: false}, () => {\n        // Set focus on the icon button when the menu close\n        if (isKeyboard) {\n          const iconButton = this.refs.iconButton;\n          ReactDOM.findDOMNode(iconButton).focus();\n          iconButton.setKeyboardFocus();\n        }\n      });\n    }\n  }\n\n  open(reason, event) {\n    if (this.props.open !== null) {\n      this.props.onRequestChange(true, reason);\n\n      return this.setState({\n        menuInitiallyKeyboardFocused: Events.isKeyboard(event),\n        anchorEl: event.currentTarget,\n      });\n    }\n\n    this.setState({\n      open: true,\n      menuInitiallyKeyboardFocused: Events.isKeyboard(event),\n      anchorEl: event.currentTarget,\n    });\n\n    event.preventDefault();\n  }\n\n  handleItemTouchTap = (event, child) => {\n    if (this.props.touchTapCloseDelay !== 0 && !child.props.hasOwnProperty('menuItems')) {\n      const isKeyboard = Events.isKeyboard(event);\n      this.timerCloseId = setTimeout(() => {\n        this.close(isKeyboard ? 'enter' : 'itemTap', isKeyboard);\n      }, this.props.touchTapCloseDelay);\n    }\n\n    this.props.onItemTouchTap(event, child);\n  };\n\n  handleRequestClose = (reason) => {\n    this.close(reason);\n  };\n\n  handleEscKeyDownMenu = (event) => {\n    this.close('escape', event);\n  };\n\n  render() {\n    const {\n      anchorOrigin,\n      className,\n      animated,\n      animation,\n      iconButtonElement,\n      iconStyle,\n      onItemTouchTap, // eslint-disable-line no-unused-vars\n      onKeyboardFocus,\n      onMouseDown,\n      onMouseLeave,\n      onMouseEnter,\n      onMouseUp,\n      onRequestChange, // eslint-disable-line no-unused-vars\n      onTouchTap,\n      listStyle,\n      menuStyle,\n      style,\n      targetOrigin,\n      touchTapCloseDelay, // eslint-disable-line no-unused-vars\n      useLayerForClickAway,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const {open, anchorEl} = this.state;\n\n    const styles = {\n      root: {\n        display: 'inline-block',\n        position: 'relative',\n      },\n      menu: {\n        position: 'relative',\n      },\n    };\n\n    const mergedRootStyles = Object.assign(styles.root, style);\n    const mergedMenuStyles = Object.assign(styles.menu, menuStyle);\n\n    warning(iconButtonElement.type.muiName !== 'SvgIcon',\n      `Material-UI: You shoud not provide an <SvgIcon /> to the 'iconButtonElement' property of <IconMenu />.\nYou should wrapped it with an <IconButton />.`);\n\n    const iconButtonProps = {\n      onKeyboardFocus: onKeyboardFocus,\n      onTouchTap: (event) => {\n        this.open(Events.isKeyboard(event) ? 'keyboard' : 'iconTap', event);\n        if (iconButtonElement.props.onTouchTap) {\n          iconButtonElement.props.onTouchTap(event);\n        }\n      },\n      ref: 'iconButton',\n    };\n    if (iconStyle || iconButtonElement.props.iconStyle) {\n      iconButtonProps.iconStyle = iconStyle ?\n        Object.assign({}, iconStyle, iconButtonElement.props.iconStyle) :\n        iconButtonElement.props.iconStyle;\n    }\n    const iconButton = React.cloneElement(iconButtonElement, iconButtonProps);\n\n    const menu = (\n      <Menu\n        {...other}\n        initiallyKeyboardFocused={this.state.menuInitiallyKeyboardFocused}\n        onEscKeyDown={this.handleEscKeyDownMenu}\n        onItemTouchTap={this.handleItemTouchTap}\n        style={mergedMenuStyles}\n        listStyle={listStyle}\n      >\n        {this.props.children}\n      </Menu>\n    );\n\n    return (\n      <div\n        ref=\"iconMenuContainer\"\n        className={className}\n        onMouseDown={onMouseDown}\n        onMouseLeave={onMouseLeave}\n        onMouseEnter={onMouseEnter}\n        onMouseUp={onMouseUp}\n        onTouchTap={onTouchTap}\n        style={prepareStyles(mergedRootStyles)}\n      >\n        {iconButton}\n        <Popover\n          anchorOrigin={anchorOrigin}\n          targetOrigin={targetOrigin}\n          open={open}\n          anchorEl={anchorEl}\n          childContextTypes={this.constructor.childContextTypes}\n          useLayerForClickAway={useLayerForClickAway}\n          onRequestClose={this.handleRequestClose}\n          animated={animated}\n          animation={animation}\n          context={this.context}\n        >\n          {menu}\n        </Popover>\n      </div>\n    );\n  }\n}\n\nexport default IconMenu;\n"]}