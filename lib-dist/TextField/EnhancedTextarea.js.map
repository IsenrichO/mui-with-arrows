{"version":3,"sources":["../../src/TextField/EnhancedTextarea.js"],"names":["rowsHeight","getStyles","props","context","state","root","position","textarea","height","width","resize","font","padding","cursor","shadow","overflow","visibility","EnhancedTextarea","handleResize","event","syncHeightWithShadow","undefined","handleChange","target","value","hasOwnProperty","valueLink","requestChange","onChange","componentWillMount","setState","rows","componentDidMount","componentWillReceiveProps","nextProps","rowsMax","getInputNode","refs","input","setValue","newValue","displayText","hintText","newHeight","scrollHeight","Math","min","max","onHeightChange","render","shadowStyle","style","textareaStyle","other","prepareStyles","muiTheme","styles","rootStyles","textareaStyles","shadowStyles","defaultValue","propTypes","any","disabled","bool","node","func","number","object","string","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"EnhancedTextarea.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport EventListener from 'react-event-listener';\n\nconst rowsHeight = 24;\n\nfunction getStyles(props, context, state) {\n  return {\n    root: {\n      position: 'relative', // because the shadow has position: 'absolute'\n    },\n    textarea: {\n      height: state.height,\n      width: '100%',\n      resize: 'none',\n      font: 'inherit',\n      padding: 0,\n      cursor: 'inherit',\n    },\n    shadow: {\n      resize: 'none',\n      // Overflow also needed to here to remove the extra row\n      // added to textareas in Firefox.\n      overflow: 'hidden',\n      // Visibility needed to hide the extra text area on ipads\n      visibility: 'hidden',\n      position: 'absolute',\n      height: 'auto',\n    },\n  };\n}\n\nclass EnhancedTextarea extends Component {\n  static propTypes = {\n    defaultValue: PropTypes.any,\n    disabled: PropTypes.bool,\n    hintText: PropTypes.node,\n    onChange: PropTypes.func,\n    onHeightChange: PropTypes.func,\n    rows: PropTypes.number,\n    rowsMax: PropTypes.number,\n    shadowStyle: PropTypes.object,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    textareaStyle: PropTypes.object,\n    value: PropTypes.string,\n    valueLink: PropTypes.object,\n  };\n\n  static defaultProps = {\n    rows: 1,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    height: null,\n  };\n\n  componentWillMount() {\n    this.setState({\n      height: this.props.rows * rowsHeight,\n    });\n  }\n\n  componentDidMount() {\n    this.syncHeightWithShadow();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value ||\n        nextProps.rowsMax !== this.props.rowsMax) {\n      this.syncHeightWithShadow(nextProps.value, null, nextProps);\n    }\n  }\n\n  handleResize = (event) => {\n    this.syncHeightWithShadow(undefined, event);\n  };\n\n  getInputNode() {\n    return this.refs.input;\n  }\n\n  setValue(value) {\n    this.getInputNode().value = value;\n    this.syncHeightWithShadow(value);\n  }\n\n  syncHeightWithShadow(newValue, event, props) {\n    const shadow = this.refs.shadow;\n    const displayText = this.props.hintText && (newValue === '' || newValue === undefined || newValue === null) ?\n      this.props.hintText : newValue;\n\n    if (displayText !== undefined) {\n      shadow.value = displayText;\n    }\n\n    let newHeight = shadow.scrollHeight;\n\n    // Guarding for jsdom, where scrollHeight isn't present.\n    // See https://github.com/tmpvar/jsdom/issues/1013\n    if (newHeight === undefined) return;\n\n    props = props || this.props;\n\n    if (props.rowsMax >= props.rows) {\n      newHeight = Math.min(props.rowsMax * rowsHeight, newHeight);\n    }\n\n    newHeight = Math.max(newHeight, rowsHeight);\n\n    if (this.state.height !== newHeight) {\n      this.setState({\n        height: newHeight,\n      });\n\n      if (props.onHeightChange) {\n        props.onHeightChange(event, newHeight);\n      }\n    }\n  }\n\n  handleChange = (event) => {\n    this.syncHeightWithShadow(event.target.value);\n\n    if (this.props.hasOwnProperty('valueLink')) {\n      this.props.valueLink.requestChange(event.target.value);\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(event);\n    }\n  };\n\n  render() {\n    const {\n      onChange, // eslint-disable-line no-unused-vars\n      onHeightChange, // eslint-disable-line no-unused-vars\n      rows, // eslint-disable-line no-unused-vars\n      rowsMax, // eslint-disable-line no-unused-vars\n      shadowStyle,\n      style,\n      hintText, // eslint-disable-line no-unused-vars\n      textareaStyle,\n      valueLink, // eslint-disable-line no-unused-vars\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context, this.state);\n    const rootStyles = Object.assign(styles.root, style);\n    const textareaStyles = Object.assign(styles.textarea, textareaStyle);\n    const shadowStyles = Object.assign({}, textareaStyles, styles.shadow, shadowStyle);\n\n    if (this.props.hasOwnProperty('valueLink')) {\n      other.value = this.props.valueLink.value;\n    }\n\n    return (\n      <div style={prepareStyles(rootStyles)}>\n        <EventListener target=\"window\" onResize={this.handleResize} />\n        <textarea\n          ref=\"shadow\"\n          style={prepareStyles(shadowStyles)}\n          tabIndex=\"-1\"\n          rows={this.props.rows}\n          defaultValue={this.props.defaultValue}\n          readOnly={true}\n          value={this.props.value}\n          valueLink={this.props.valueLink}\n        />\n        <textarea\n          {...other}\n          ref=\"input\"\n          rows={this.props.rows}\n          style={prepareStyles(textareaStyles)}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EnhancedTextarea;\n"]}