{"version":3,"sources":["../../src/TextField/TextField.js"],"names":["getStyles","props","context","state","muiTheme","baseTheme","textField","floatingLabelColor","focusColor","textColor","disabledTextColor","backgroundColor","errorColor","styles","root","fontSize","lineHeight","width","fullWidth","height","rows","floatingLabelText","display","position","fontFamily","transition","easeOut","cursor","disabled","error","bottom","color","floatingLabel","pointerEvents","input","padding","border","outline","font","WebkitTapHighlightColor","inputNative","appearance","textarea","marginTop","marginBottom","boxSizing","isFocused","multiLine","errorText","isValid","value","undefined","Array","isArray","length","TextField","hasValue","handleInputBlur","event","setState","onBlur","handleInputChange","hasOwnProperty","target","onChange","handleInputFocus","onFocus","handleHeightChange","newHeight","findDOMNode","style","componentWillMount","children","name","hintText","id","propsLeaf","defaultValue","uniqueId","Math","floor","random","replace","componentWillReceiveProps","nextProps","shouldComponentUpdate","nextState","nextContext","blur","getInputNode","focus","select","getValue","_isControlled","render","className","errorStyle","floatingLabelFixed","floatingLabelFocusStyle","floatingLabelShrinkStyle","floatingLabelStyle","hintStyle","inputStyle","type","underlineDisabledStyle","underlineFocusStyle","underlineShow","underlineStyle","rowsMax","textareaStyle","other","prepareStyles","inputId","errorTextElement","floatingLabelTextElement","inputProps","ref","elem","childStyleMerged","inputElement","cloneElement","rootProps","propTypes","node","string","any","bool","object","func","number","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"TextField.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport shallowEqual from 'recompose/shallowEqual';\nimport transitions from '../styles/transitions';\nimport EnhancedTextarea from './EnhancedTextarea';\nimport TextFieldHint from './TextFieldHint';\nimport TextFieldLabel from './TextFieldLabel';\nimport TextFieldUnderline from './TextFieldUnderline';\nimport warning from 'warning';\n\nconst getStyles = (props, context, state) => {\n  const {\n    baseTheme,\n    textField: {\n      floatingLabelColor,\n      focusColor,\n      textColor,\n      disabledTextColor,\n      backgroundColor,\n      errorColor,\n    },\n  } = context.muiTheme;\n\n  const styles = {\n    root: {\n      fontSize: 16,\n      lineHeight: '24px',\n      width: props.fullWidth ? '100%' : 256,\n      height: (props.rows - 1) * 24 + (props.floatingLabelText ? 72 : 48),\n      display: 'inline-block',\n      position: 'relative',\n      backgroundColor: backgroundColor,\n      fontFamily: baseTheme.fontFamily,\n      transition: transitions.easeOut('200ms', 'height'),\n      cursor: props.disabled ? 'not-allowed' : 'auto',\n    },\n    error: {\n      position: 'relative',\n      bottom: 2,\n      fontSize: 12,\n      lineHeight: '12px',\n      color: errorColor,\n      transition: transitions.easeOut(),\n    },\n    floatingLabel: {\n      color: props.disabled ? disabledTextColor : floatingLabelColor,\n      pointerEvents: 'none',\n    },\n    input: {\n      padding: 0,\n      position: 'relative',\n      width: '100%',\n      border: 'none',\n      outline: 'none',\n      backgroundColor: 'rgba(0,0,0,0)',\n      color: props.disabled ? disabledTextColor : textColor,\n      cursor: 'inherit',\n      font: 'inherit',\n      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated style).\n    },\n    inputNative: {\n      appearance: 'textfield', // Improve type search style.\n    },\n  };\n\n  styles.textarea = Object.assign({}, styles.input, {\n    marginTop: props.floatingLabelText ? 36 : 12,\n    marginBottom: props.floatingLabelText ? -36 : -12,\n    boxSizing: 'border-box',\n    font: 'inherit',\n  });\n\n  // Do not assign a height to the textarea as he handles it on his own.\n  styles.input.height = '100%';\n\n  if (state.isFocused) {\n    styles.floatingLabel.color = focusColor;\n  }\n\n  if (props.floatingLabelText) {\n    styles.input.boxSizing = 'border-box';\n\n    if (!props.multiLine) {\n      styles.input.marginTop = 14;\n    }\n\n    if (state.errorText) {\n      styles.error.bottom = !props.multiLine ? styles.error.fontSize + 3 : 3;\n    }\n  }\n\n  if (state.errorText) {\n    if (state.isFocused) {\n      styles.floatingLabel.color = styles.error.color;\n    }\n  }\n\n  return styles;\n};\n\n/**\n * Check if a value is valid to be displayed inside an input.\n *\n * @param The value to check.\n * @returns True if the string provided is valid, false otherwise.\n */\nfunction isValid(value) {\n  return value !== '' && value !== undefined && value !== null && !(Array.isArray(value) && value.length === 0);\n}\n\nclass TextField extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    /**\n     * The css class name of the root element.\n     */\n    className: PropTypes.string,\n    /**\n     * The text string to use for the default value.\n     */\n    defaultValue: PropTypes.any,\n    /**\n     * Disables the text field if set to true.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * The style object to use to override error styles.\n     */\n    errorStyle: PropTypes.object,\n    /**\n     * The error content to display.\n     */\n    errorText: PropTypes.node,\n    /**\n     * If true, the floating label will float even when there is no value.\n     */\n    floatingLabelFixed: PropTypes.bool,\n    /**\n     * The style object to use to override floating label styles when focused.\n     */\n    floatingLabelFocusStyle: PropTypes.object,\n    /**\n     * The style object to use to override floating label styles when shrunk.\n     */\n    floatingLabelShrinkStyle: PropTypes.object,\n    /**\n     * The style object to use to override floating label styles.\n     */\n    floatingLabelStyle: PropTypes.object,\n    /**\n     * The content to use for the floating label element.\n     */\n    floatingLabelText: PropTypes.node,\n    /**\n     * If true, the field receives the property width 100%.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * Override the inline-styles of the TextField's hint text element.\n     */\n    hintStyle: PropTypes.object,\n    /**\n     * The hint content to display.\n     */\n    hintText: PropTypes.node,\n    /**\n     * The id prop for the text field.\n     */\n    id: PropTypes.string,\n    /**\n     * Override the inline-styles of the TextField's input element.\n     * When multiLine is false: define the style of the input element.\n     * When multiLine is true: define the style of the container of the textarea.\n     */\n    inputStyle: PropTypes.object,\n    /**\n     * If true, a textarea element will be rendered.\n     * The textarea also grows and shrinks according to the number of lines.\n     */\n    multiLine: PropTypes.bool,\n    /**\n     * Name applied to the input.\n     */\n    name: PropTypes.string,\n    /** @ignore */\n    onBlur: PropTypes.func,\n    /**\n     * Callback function that is fired when the textfield's value changes.\n     *\n     * @param {object} event Change event targeting the text field.\n     * @param {string} newValue The new value of the text field.\n     */\n    onChange: PropTypes.func,\n    /** @ignore */\n    onFocus: PropTypes.func,\n    /**\n     * Number of rows to display when multiLine option is set to true.\n     */\n    rows: PropTypes.number,\n    /**\n     * Maximum number of rows to display when\n     * multiLine option is set to true.\n     */\n    rowsMax: PropTypes.number,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * Override the inline-styles of the TextField's textarea element.\n     * The TextField use either a textarea or an input,\n     * this property has effects only when multiLine is true.\n     */\n    textareaStyle: PropTypes.object,\n    /**\n     * Specifies the type of input to display\n     * such as \"password\" or \"text\".\n     */\n    type: PropTypes.string,\n    /**\n     * Override the inline-styles of the\n     * TextField's underline element when disabled.\n     */\n    underlineDisabledStyle: PropTypes.object,\n    /**\n     * Override the inline-styles of the TextField's\n     * underline element when focussed.\n     */\n    underlineFocusStyle: PropTypes.object,\n    /**\n     * If true, shows the underline for the text field.\n     */\n    underlineShow: PropTypes.bool,\n    /**\n     * Override the inline-styles of the TextField's underline element.\n     */\n    underlineStyle: PropTypes.object,\n    /**\n     * The value of the text field.\n     */\n    value: PropTypes.any,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    floatingLabelFixed: false,\n    multiLine: false,\n    fullWidth: false,\n    type: 'text',\n    underlineShow: true,\n    rows: 1,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    isFocused: false,\n    errorText: undefined,\n    hasValue: false,\n  };\n\n  componentWillMount() {\n    const {\n      children,\n      name,\n      hintText,\n      floatingLabelText,\n      id,\n    } = this.props;\n\n    const propsLeaf = children ? children.props : this.props;\n\n    this.setState({\n      errorText: this.props.errorText,\n      hasValue: isValid(propsLeaf.value) || isValid(propsLeaf.defaultValue),\n    });\n\n    warning(name || hintText || floatingLabelText || id, `Material-UI: We don't have enough information\n      to build a robust unique id for the TextField component. Please provide an id or a name.`);\n\n    const uniqueId = `${name}-${hintText}-${floatingLabelText}-${\n      Math.floor(Math.random() * 0xFFFF)}`;\n    this.uniqueId = uniqueId.replace(/[^A-Za-z0-9-]/gi, '');\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errorText !== this.props.errorText) {\n      this.setState({\n        errorText: nextProps.errorText,\n      });\n    }\n\n    if (nextProps.children && nextProps.children.props) {\n      nextProps = nextProps.children.props;\n    }\n\n    if (nextProps.hasOwnProperty('value')) {\n      const hasValue = isValid(nextProps.value);\n\n      this.setState({\n        hasValue: hasValue,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return (\n      !shallowEqual(this.props, nextProps) ||\n      !shallowEqual(this.state, nextState) ||\n      !shallowEqual(this.context, nextContext)\n    );\n  }\n\n  blur() {\n    if (this.input) {\n      this.getInputNode().blur();\n    }\n  }\n\n  focus() {\n    if (this.input) {\n      this.getInputNode().focus();\n    }\n  }\n\n  select() {\n    if (this.input) {\n      this.getInputNode().select();\n    }\n  }\n\n  getValue() {\n    return this.input ? this.getInputNode().value : undefined;\n  }\n\n  getInputNode() {\n    return (this.props.children || this.props.multiLine) ?\n      this.input.getInputNode() : ReactDOM.findDOMNode(this.input);\n  }\n\n  handleInputBlur = (event) => {\n    this.setState({isFocused: false});\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  handleInputChange = (event) => {\n    if (!this.props.hasOwnProperty('value')) {\n      this.setState({hasValue: isValid(event.target.value)});\n    }\n    if (this.props.onChange) {\n      this.props.onChange(event, event.target.value);\n    }\n  };\n\n  handleInputFocus = (event) => {\n    if (this.props.disabled) {\n      return;\n    }\n    this.setState({isFocused: true});\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  handleHeightChange = (event, height) => {\n    let newHeight = height + 24;\n    if (this.props.floatingLabelText) {\n      newHeight += 24;\n    }\n    ReactDOM.findDOMNode(this).style.height = `${newHeight}px`;\n  };\n\n  _isControlled() {\n    return this.props.hasOwnProperty('value');\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      disabled,\n      errorStyle,\n      errorText, // eslint-disable-line no-unused-vars\n      floatingLabelFixed,\n      floatingLabelFocusStyle,\n      floatingLabelShrinkStyle,\n      floatingLabelStyle,\n      floatingLabelText,\n      fullWidth, // eslint-disable-line no-unused-vars\n      hintText,\n      hintStyle,\n      id,\n      inputStyle,\n      multiLine,\n      onBlur, // eslint-disable-line no-unused-vars\n      onChange, // eslint-disable-line no-unused-vars\n      onFocus, // eslint-disable-line no-unused-vars\n      style,\n      type,\n      underlineDisabledStyle,\n      underlineFocusStyle,\n      underlineShow,\n      underlineStyle,\n      rows,\n      rowsMax,\n      textareaStyle,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context, this.state);\n    const inputId = id || this.uniqueId;\n\n    const errorTextElement = this.state.errorText && (\n      <div style={prepareStyles(Object.assign(styles.error, errorStyle))}>\n        {this.state.errorText}\n      </div>\n    );\n\n    const floatingLabelTextElement = floatingLabelText && (\n      <TextFieldLabel\n        muiTheme={this.context.muiTheme}\n        style={Object.assign(\n          styles.floatingLabel,\n          floatingLabelStyle,\n          this.state.isFocused ? floatingLabelFocusStyle : null\n        )}\n        shrinkStyle={floatingLabelShrinkStyle}\n        htmlFor={inputId}\n        shrink={this.state.hasValue || this.state.isFocused || floatingLabelFixed}\n        disabled={disabled}\n      >\n        {floatingLabelText}\n      </TextFieldLabel>\n    );\n\n    const inputProps = {\n      id: inputId,\n      ref: (elem) => this.input = elem,\n      disabled: this.props.disabled,\n      onBlur: this.handleInputBlur,\n      onChange: this.handleInputChange,\n      onFocus: this.handleInputFocus,\n    };\n\n    const childStyleMerged = Object.assign(styles.input, inputStyle);\n\n    let inputElement;\n    if (children) {\n      inputElement = React.cloneElement(children,\n        {\n          ...inputProps,\n          ...children.props,\n          style: Object.assign(childStyleMerged, children.props.style),\n        });\n    } else {\n      inputElement = multiLine ? (\n        <EnhancedTextarea\n          style={childStyleMerged}\n          textareaStyle={Object.assign(styles.textarea, styles.inputNative, textareaStyle)}\n          rows={rows}\n          rowsMax={rowsMax}\n          hintText={hintText}\n          {...other}\n          {...inputProps}\n          onHeightChange={this.handleHeightChange}\n        />\n      ) : (\n        <input\n          type={type}\n          style={prepareStyles(Object.assign(styles.inputNative, childStyleMerged))}\n          {...other}\n          {...inputProps}\n        />\n      );\n    }\n\n    let rootProps = {};\n\n    if (children) {\n      rootProps = other;\n    }\n\n    return (\n      <div\n        {...rootProps}\n        className={className}\n        style={prepareStyles(Object.assign(styles.root, style))}\n      >\n        {floatingLabelTextElement}\n        {hintText ?\n          <TextFieldHint\n            muiTheme={this.context.muiTheme}\n            show={!(this.state.hasValue || (floatingLabelText && !this.state.isFocused)) ||\n                  (!this.state.hasValue && floatingLabelText && floatingLabelFixed && !this.state.isFocused)}\n            style={hintStyle}\n            text={hintText}\n          /> :\n          null\n        }\n        {inputElement}\n        {underlineShow ?\n          <TextFieldUnderline\n            disabled={disabled}\n            disabledStyle={underlineDisabledStyle}\n            error={!!this.state.errorText}\n            errorStyle={errorStyle}\n            focus={this.state.isFocused}\n            focusStyle={underlineFocusStyle}\n            muiTheme={this.context.muiTheme}\n            style={underlineStyle}\n          /> :\n          null\n        }\n        {errorTextElement}\n      </div>\n    );\n  }\n}\n\nexport default TextField;\n"]}