{"version":3,"sources":["../../src/Card/CardTitle.js"],"names":["getStyles","props","context","card","muiTheme","root","padding","position","title","fontSize","color","titleColor","display","lineHeight","subtitle","subtitleColor","CardTitle","render","actAsExpander","children","closeIcon","expandable","showExpandableButton","style","subtitleStyle","titleStyle","other","prepareStyles","styles","rootStyle","extendedTitleStyle","extendedSubtitleStyle","muiName","propTypes","bool","node","object","string","contextTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmC;AAAA,MAC1BC,IAD0B,GAClBD,QAAQE,QADU,CAC1BD,IAD0B;;;AAGjC,SAAO;AACLE,UAAM;AACJC,eAAS,EADL;AAEJC,gBAAU;AAFN,KADD;AAKLC,WAAO;AACLC,gBAAU,EADL;AAELC,aAAOT,MAAMU,UAAN,IAAoBR,KAAKQ,UAF3B;AAGLC,eAAS,OAHJ;AAILC,kBAAY;AAJP,KALF;AAWLC,cAAU;AACRL,gBAAU,EADF;AAERC,aAAOT,MAAMc,aAAN,IAAuBZ,KAAKY,aAF3B;AAGRH,eAAS;AAHD;AAXL,GAAP;AAiBD;;IAEKI,S;;;;;;;;sBA0DJC,M,qBAAS;AAAA,iBAeH,KAAKhB,KAfF;AAAA,QAELiB,aAFK,UAELA,aAFK;AAAA,QAGLC,QAHK,UAGLA,QAHK;AAAA,QAILC,SAJK,UAILA,SAJK;AAAA,QAKLC,UALK,UAKLA,UALK;AAAA,QAMLC,oBANK,UAMLA,oBANK;AAAA,QAOLC,KAPK,UAOLA,KAPK;AAAA,QAQLT,QARK,UAQLA,QARK;AAAA,QASLC,aATK,UASLA,aATK;AAAA,QAULS,aAVK,UAULA,aAVK;AAAA,QAWLhB,KAXK,UAWLA,KAXK;AAAA,QAYLG,UAZK,UAYLA,UAZK;AAAA,QAaLc,UAbK,UAaLA,UAbK;AAAA,QAcFC,KAdE;AAAA,QAiBAC,aAjBA,GAiBiB,KAAKzB,OAAL,CAAaE,QAjB9B,CAiBAuB,aAjBA;;AAkBP,QAAMC,SAAS5B,UAAU,KAAKC,KAAf,EAAsB,KAAKC,OAA3B,CAAf;AACA,QAAM2B,YAAY,sBAAc,EAAd,EAAkBD,OAAOvB,IAAzB,EAA+BkB,KAA/B,CAAlB;AACA,QAAMO,qBAAqB,sBAAc,EAAd,EAAkBF,OAAOpB,KAAzB,EAAgCiB,UAAhC,CAA3B;AACA,QAAMM,wBAAwB,sBAAc,EAAd,EAAkBH,OAAOd,QAAzB,EAAmCU,aAAnC,CAA9B;;AAEA,WACE;AAAA;AAAA,iCAASE,KAAT,IAAgB,OAAOC,cAAcE,SAAd,CAAvB;AACE;AAAA;AAAA,UAAM,OAAOF,cAAcG,kBAAd,CAAb;AACGtB;AADH,OADF;AAIE;AAAA;AAAA,UAAM,OAAOmB,cAAcI,qBAAd,CAAb;AACGjB;AADH,OAJF;AAOGK;AAPH,KADF;AAWD,G;;;4BA3FMa,O,GAAU,W,SAEVC,S,GAAY;AACjB;;;AAGAf,iBAAe,oBAAUgB,IAJR;AAKjB;;;AAGAf,YAAU,oBAAUgB,IARH;AASjB;;;AAGAf,aAAW,oBAAUe,IAZJ;AAajB;;;AAGAd,cAAY,oBAAUa,IAhBL;AAiBjB;;;AAGAZ,wBAAsB,oBAAUY,IApBf;AAqBjB;;;AAGAX,SAAO,oBAAUa,MAxBA;AAyBjB;;;AAGAtB,YAAU,oBAAUqB,IA5BH;AA6BjB;;;AAGApB,iBAAe,oBAAUsB,MAhCR;AAiCjB;;;AAGAb,iBAAe,oBAAUY,MApCR;AAqCjB;;;AAGA5B,SAAO,oBAAU2B,IAxCA;AAyCjB;;;AAGAxB,cAAY,oBAAU0B,MA5CL;AA6CjB;;;AAGAZ,cAAY,oBAAUW;AAhDL,C,SAmDZE,Y,GAAe;AACpBlC,YAAU,oBAAUgC,MAAV,CAAiBG;AADP,C;kBAyCTvB,S","file":"CardTitle.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nfunction getStyles(props, context) {\n  const {card} = context.muiTheme;\n\n  return {\n    root: {\n      padding: 16,\n      position: 'relative',\n    },\n    title: {\n      fontSize: 24,\n      color: props.titleColor || card.titleColor,\n      display: 'block',\n      lineHeight: '36px',\n    },\n    subtitle: {\n      fontSize: 14,\n      color: props.subtitleColor || card.subtitleColor,\n      display: 'block',\n    },\n  };\n}\n\nclass CardTitle extends Component {\n  static muiName = 'CardTitle';\n\n  static propTypes = {\n    /**\n     * If true, a click on this card component expands the card.\n     */\n    actAsExpander: PropTypes.bool,\n    /**\n     * Can be used to render elements inside the Card Title.\n     */\n    children: PropTypes.node,\n    /**\n     * Can be used to pass a closeIcon if you don't like the default expandable close Icon.\n     */\n    closeIcon: PropTypes.node,\n    /**\n     * If true, this card component is expandable.\n     */\n    expandable: PropTypes.bool,\n    /**\n     * If true, this card component will include a button to expand the card.\n     */\n    showExpandableButton: PropTypes.bool,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * Can be used to render a subtitle in the Card Title.\n     */\n    subtitle: PropTypes.node,\n    /**\n     * Override the subtitle color.\n     */\n    subtitleColor: PropTypes.string,\n    /**\n     * Override the inline-styles of the subtitle.\n     */\n    subtitleStyle: PropTypes.object,\n    /**\n     * Can be used to render a title in the Card Title.\n     */\n    title: PropTypes.node,\n    /**\n     * Override the title color.\n     */\n    titleColor: PropTypes.string,\n    /**\n     * Override the inline-styles of the title.\n     */\n    titleStyle: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {\n      actAsExpander, // eslint-disable-line no-unused-vars\n      children,\n      closeIcon, // eslint-disable-line no-unused-vars\n      expandable, // eslint-disable-line no-unused-vars\n      showExpandableButton, // eslint-disable-line no-unused-vars\n      style,\n      subtitle,\n      subtitleColor, // eslint-disable-line no-unused-vars\n      subtitleStyle,\n      title,\n      titleColor, // eslint-disable-line no-unused-vars\n      titleStyle,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n    const rootStyle = Object.assign({}, styles.root, style);\n    const extendedTitleStyle = Object.assign({}, styles.title, titleStyle);\n    const extendedSubtitleStyle = Object.assign({}, styles.subtitle, subtitleStyle);\n\n    return (\n      <div {...other} style={prepareStyles(rootStyle)}>\n        <span style={prepareStyles(extendedTitleStyle)}>\n          {title}\n        </span>\n        <span style={prepareStyles(extendedSubtitleStyle)}>\n          {subtitle}\n        </span>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default CardTitle;\n"]}