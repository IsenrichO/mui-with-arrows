{"version":3,"sources":["../../src/Dialog/Dialog.js"],"names":["TransitionItem","state","style","componentWillUnmount","clearTimeout","enterTimeout","leaveTimeout","componentWillEnter","callback","componentWillAppear","spacing","context","muiTheme","baseTheme","setState","opacity","transform","desktopKeylineIncrement","setTimeout","componentWillLeave","render","props","children","other","prepareStyles","propTypes","node","object","contextTypes","isRequired","getStyles","autoScrollBodyContent","open","palette","dialog","zIndex","gutter","desktopGutter","borderScroll","borderColor","root","position","boxSizing","WebkitTapHighlightColor","top","left","width","height","transition","easeOut","content","maxWidth","margin","actionsContainer","padding","textAlign","marginTop","overlay","dialogOverlay","title","color","textColor","fontSize","titleFontSize","lineHeight","fontWeight","marginBottom","body","bodyFontSize","bodyColor","overflowY","borderTop","borderBottom","DialogInline","handleTouchTapOverlay","requestClose","handleKeyUp","event","handleResize","positionDialog","componentDidMount","componentDidUpdate","actions","autoDetectWindowHeight","bodyStyle","repositionOnUpdate","clientHeight","window","innerHeight","document","documentElement","container","findDOMNode","dialogWindow","refs","dialogContent","minPaddingTop","dialogWindowHeight","offsetHeight","paddingTop","styles","maxDialogContentHeight","previousSibling","Children","count","nextSibling","maxHeight","buttonClicked","modal","onRequestClose","actionsContainerClassName","actionsContainerStyle","bodyClassName","className","contentClassName","contentStyle","overlayClassName","overlayStyle","titleClassName","titleStyle","toArray","titleElement","isValidElement","cloneElement","string","bool","func","Dialog","renderLayer","defaultProps"],"mappings":"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","file":"Dialog.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport EventListener from 'react-event-listener';\nimport keycode from 'keycode';\nimport transitions from '../styles/transitions';\nimport Overlay from '../internal/Overlay';\nimport RenderToLayer from '../internal/RenderToLayer';\nimport Paper from '../Paper';\n\nimport ReactTransitionGroup from 'react-transition-group/TransitionGroup';\n\nclass TransitionItem extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    style: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    style: {},\n  };\n\n  componentWillUnmount() {\n    clearTimeout(this.enterTimeout);\n    clearTimeout(this.leaveTimeout);\n  }\n\n  componentWillEnter(callback) {\n    this.componentWillAppear(callback);\n  }\n\n  componentWillAppear(callback) {\n    const spacing = this.context.muiTheme.baseTheme.spacing;\n\n    this.setState({\n      style: {\n        opacity: 1,\n        transform: `translate(0, ${spacing.desktopKeylineIncrement}px)`,\n      },\n    });\n\n    this.enterTimeout = setTimeout(callback, 450); // matches transition duration\n  }\n\n  componentWillLeave(callback) {\n    this.setState({\n      style: {\n        opacity: 0,\n        transform: 'translate(0, 0)',\n      },\n    });\n\n    this.leaveTimeout = setTimeout(callback, 450); // matches transition duration\n  }\n\n  render() {\n    const {\n      style,\n      children,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n\n    return (\n      <div {...other} style={prepareStyles(Object.assign({}, this.state.style, style))}>\n        {children}\n      </div>\n    );\n  }\n}\n\nfunction getStyles(props, context) {\n  const {\n    autoScrollBodyContent,\n    open,\n  } = props;\n\n  const {\n    baseTheme: {\n      spacing,\n      palette,\n    },\n    dialog,\n    zIndex,\n  } = context.muiTheme;\n\n  const gutter = spacing.desktopGutter;\n  const borderScroll = `1px solid ${palette.borderColor}`;\n\n  return {\n    root: {\n      position: 'fixed',\n      boxSizing: 'border-box',\n      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)\n      zIndex: zIndex.dialog,\n      top: 0,\n      left: open ? 0 : -10000,\n      width: '100%',\n      height: '100%',\n      transition: open ?\n        transitions.easeOut('0ms', 'left', '0ms') :\n        transitions.easeOut('0ms', 'left', '450ms'),\n    },\n    content: {\n      boxSizing: 'border-box',\n      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)\n      transition: transitions.easeOut(),\n      position: 'relative',\n      width: '75%',\n      maxWidth: spacing.desktopKeylineIncrement * 12,\n      margin: '0 auto',\n      zIndex: zIndex.dialog,\n    },\n    actionsContainer: {\n      boxSizing: 'border-box',\n      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)\n      padding: 8,\n      width: '100%',\n      textAlign: 'right',\n      marginTop: autoScrollBodyContent ? -1 : 0,\n    },\n    overlay: {\n      zIndex: zIndex.dialogOverlay,\n    },\n    title: {\n      margin: 0,\n      padding: `${gutter}px ${gutter}px 20px ${gutter}px`,\n      color: palette.textColor,\n      fontSize: dialog.titleFontSize,\n      lineHeight: '32px',\n      fontWeight: 400,\n      marginBottom: autoScrollBodyContent ? -1 : 0,\n    },\n    body: {\n      fontSize: dialog.bodyFontSize,\n      color: dialog.bodyColor,\n      padding: `${props.title ? 0 : gutter}px ${gutter}px ${gutter}px`,\n      boxSizing: 'border-box',\n      overflowY: autoScrollBodyContent ? 'auto' : 'hidden',\n      borderTop: autoScrollBodyContent ? borderScroll : 'none',\n      borderBottom: autoScrollBodyContent ? borderScroll : 'none',\n    },\n  };\n}\n\nclass DialogInline extends Component {\n  static propTypes = {\n    actions: PropTypes.node,\n    actionsContainerClassName: PropTypes.string,\n    actionsContainerStyle: PropTypes.object,\n    autoDetectWindowHeight: PropTypes.bool,\n    autoScrollBodyContent: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    bodyStyle: PropTypes.object,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    contentClassName: PropTypes.string,\n    contentStyle: PropTypes.object,\n    modal: PropTypes.bool,\n    onRequestClose: PropTypes.func,\n    open: PropTypes.bool.isRequired,\n    overlayClassName: PropTypes.string,\n    overlayStyle: PropTypes.object,\n    repositionOnUpdate: PropTypes.bool,\n    style: PropTypes.object,\n    title: PropTypes.node,\n    titleClassName: PropTypes.string,\n    titleStyle: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    this.positionDialog();\n  }\n\n  componentDidUpdate() {\n    this.positionDialog();\n  }\n\n  positionDialog() {\n    const {\n      actions,\n      autoDetectWindowHeight,\n      autoScrollBodyContent,\n      bodyStyle,\n      open,\n      repositionOnUpdate,\n      title,\n    } = this.props;\n\n    if (!open) {\n      return;\n    }\n\n    const clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const container = ReactDOM.findDOMNode(this);\n    const dialogWindow = ReactDOM.findDOMNode(this.refs.dialogWindow);\n    const dialogContent = ReactDOM.findDOMNode(this.refs.dialogContent);\n    const minPaddingTop = 16;\n\n    // Reset the height in case the window was resized.\n    dialogWindow.style.height = '';\n    dialogContent.style.height = '';\n\n    const dialogWindowHeight = dialogWindow.offsetHeight;\n    let paddingTop = ((clientHeight - dialogWindowHeight) / 2) - 64;\n    if (paddingTop < minPaddingTop) paddingTop = minPaddingTop;\n\n    // Vertically center the dialog window, but make sure it doesn't\n    // transition to that position.\n    if (repositionOnUpdate || !container.style.paddingTop) {\n      container.style.paddingTop = `${paddingTop}px`;\n    }\n\n    // Force a height if the dialog is taller than clientHeight\n    if (autoDetectWindowHeight || autoScrollBodyContent) {\n      const styles = getStyles(this.props, this.context);\n      styles.body = Object.assign(styles.body, bodyStyle);\n      let maxDialogContentHeight = clientHeight - 2 * 64;\n\n      if (title) maxDialogContentHeight -= dialogContent.previousSibling.offsetHeight;\n\n      if (React.Children.count(actions)) {\n        maxDialogContentHeight -= dialogContent.nextSibling.offsetHeight;\n      }\n\n      dialogContent.style.maxHeight = `${maxDialogContentHeight}px`;\n      if (maxDialogContentHeight > dialogWindowHeight) {\n        dialogContent.style.borderBottom = 'none';\n        dialogContent.style.borderTop = 'none';\n      }\n    }\n  }\n\n  requestClose(buttonClicked) {\n    if (!buttonClicked && this.props.modal) {\n      return;\n    }\n\n    if (this.props.onRequestClose) {\n      this.props.onRequestClose(!!buttonClicked);\n    }\n  }\n\n  handleTouchTapOverlay = () => {\n    this.requestClose(false);\n  };\n\n  handleKeyUp = (event) => {\n    if (keycode(event) === 'esc') {\n      this.requestClose(false);\n    }\n  };\n\n  handleResize = () => {\n    this.positionDialog();\n  };\n\n  render() {\n    const {\n      actions,\n      actionsContainerClassName,\n      actionsContainerStyle,\n      bodyClassName,\n      bodyStyle,\n      children,\n      className,\n      contentClassName,\n      contentStyle,\n      overlayClassName,\n      overlayStyle,\n      open,\n      titleClassName,\n      titleStyle,\n      title,\n      style,\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n\n    styles.root = Object.assign(styles.root, style);\n    styles.content = Object.assign(styles.content, contentStyle);\n    styles.body = Object.assign(styles.body, bodyStyle);\n    styles.actionsContainer = Object.assign(styles.actionsContainer, actionsContainerStyle);\n    styles.overlay = Object.assign(styles.overlay, overlayStyle);\n    styles.title = Object.assign(styles.title, titleStyle);\n\n    const actionsContainer = React.Children.count(actions) > 0 && (\n      <div className={actionsContainerClassName} style={prepareStyles(styles.actionsContainer)}>\n        {React.Children.toArray(actions)}\n      </div>\n    );\n\n    let titleElement = title;\n    if (React.isValidElement(title)) {\n      titleElement = React.cloneElement(title, {\n        className: title.props.className || titleClassName,\n        style: prepareStyles(Object.assign(styles.title, title.props.style)),\n      });\n    } else if (typeof title === 'string') {\n      titleElement = (\n        <h3 className={titleClassName} style={prepareStyles(styles.title)}>\n          {title}\n        </h3>\n      );\n    }\n\n    return (\n      <div className={className} style={prepareStyles(styles.root)}>\n        {open &&\n          <EventListener\n            target=\"window\"\n            onKeyUp={this.handleKeyUp}\n            onResize={this.handleResize}\n          />\n        }\n        <ReactTransitionGroup\n          component=\"div\"\n          ref=\"dialogWindow\"\n          transitionAppear={true}\n          transitionAppearTimeout={450}\n          transitionEnter={true}\n          transitionEnterTimeout={450}\n        >\n          {open &&\n            <TransitionItem\n              className={contentClassName}\n              style={styles.content}\n            >\n              <Paper zDepth={4}>\n                {titleElement}\n                <div\n                  ref=\"dialogContent\"\n                  className={bodyClassName}\n                  style={prepareStyles(styles.body)}\n                >\n                  {children}\n                </div>\n                {actionsContainer}\n              </Paper>\n            </TransitionItem>\n          }\n        </ReactTransitionGroup>\n        <Overlay\n          show={open}\n          className={overlayClassName}\n          style={styles.overlay}\n          onTouchTap={this.handleTouchTapOverlay}\n        />\n      </div>\n    );\n  }\n}\n\nclass Dialog extends Component {\n  static propTypes = {\n    /**\n     * Action buttons to display below the Dialog content (`children`).\n     * This property accepts either a React element, or an array of React elements.\n     */\n    actions: PropTypes.node,\n    /**\n     * The `className` to add to the actions container's root element.\n     */\n    actionsContainerClassName: PropTypes.string,\n    /**\n     * Overrides the inline-styles of the actions container's root element.\n     */\n    actionsContainerStyle: PropTypes.object,\n    /**\n     * If set to true, the height of the `Dialog` will be auto detected. A max height\n     * will be enforced so that the content does not extend beyond the viewport.\n     */\n    autoDetectWindowHeight: PropTypes.bool,\n    /**\n     * If set to true, the body content of the `Dialog` will be scrollable.\n     */\n    autoScrollBodyContent: PropTypes.bool,\n    /**\n     * The `className` to add to the content's root element under the title.\n     */\n    bodyClassName: PropTypes.string,\n    /**\n     * Overrides the inline-styles of the content's root element under the title.\n     */\n    bodyStyle: PropTypes.object,\n    /**\n     * The contents of the `Dialog`.\n     */\n    children: PropTypes.node,\n    /**\n     * The css class name of the root element.\n     */\n    className: PropTypes.string,\n    /**\n     * The `className` to add to the content container.\n     */\n    contentClassName: PropTypes.string,\n    /**\n     * Overrides the inline-styles of the content container.\n     */\n    contentStyle: PropTypes.object,\n    /**\n     * Force the user to use one of the actions in the `Dialog`.\n     * Clicking outside the `Dialog` will not trigger the `onRequestClose`.\n     */\n    modal: PropTypes.bool,\n    /**\n     * Fired when the `Dialog` is requested to be closed by a click outside the `Dialog` or on the buttons.\n     *\n     * @param {bool} buttonClicked Determines whether a button click triggered this request.\n     */\n    onRequestClose: PropTypes.func,\n    /**\n     * Controls whether the Dialog is opened or not.\n     */\n    open: PropTypes.bool.isRequired,\n    /**\n     * The `className` to add to the `Overlay` component that is rendered behind the `Dialog`.\n     */\n    overlayClassName: PropTypes.string,\n    /**\n     * Overrides the inline-styles of the `Overlay` component that is rendered behind the `Dialog`.\n     */\n    overlayStyle: PropTypes.object,\n    /**\n     * Determines whether the `Dialog` should be repositioned when it's contents are updated.\n     */\n    repositionOnUpdate: PropTypes.bool,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * The title to display on the `Dialog`. Could be number, string, element or an array containing these types.\n     */\n    title: PropTypes.node,\n    /**\n     * The `className` to add to the title's root container element.\n     */\n    titleClassName: PropTypes.string,\n    /**\n     * Overrides the inline-styles of the title's root container element.\n     */\n    titleStyle: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  static defaultProps = {\n    autoDetectWindowHeight: true,\n    autoScrollBodyContent: false,\n    modal: false,\n    repositionOnUpdate: true,\n  };\n\n  renderLayer = () => {\n    return (\n      <DialogInline {...this.props} />\n    );\n  };\n\n  render() {\n    return (\n      <RenderToLayer render={this.renderLayer} open={true} useLayerForClickAway={false} />\n    );\n  }\n}\n\nexport default Dialog;\n"]}