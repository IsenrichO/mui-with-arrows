{"version":3,"sources":["../../src/Toolbar/Toolbar.js"],"names":["getStyles","props","context","noGutter","muiTheme","baseTheme","toolbar","root","boxSizing","WebkitTapHighlightColor","backgroundColor","height","padding","spacing","desktopGutter","display","justifyContent","Toolbar","render","children","className","style","other","prepareStyles","styles","propTypes","node","string","bool","object","defaultProps","contextTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmC;AAAA,MAC1BC,QAD0B,GACdF,KADc,CAC1BE,QAD0B;AAAA,0BAM7BD,QAAQE,QANqB;AAAA,MAI/BC,SAJ+B,qBAI/BA,SAJ+B;AAAA,MAK/BC,OAL+B,qBAK/BA,OAL+B;;;AAQjC,SAAO;AACLC,UAAM;AACJC,iBAAW,YADP;AAEJC,+BAAyB,eAFrB,EAEsC;AAC1CC,uBAAiBJ,QAAQI,eAHrB;AAIJC,cAAQL,QAAQK,MAJZ;AAKJC,eAAST,WAAW,CAAX,YAAsBE,UAAUQ,OAAV,CAAkBC,aAAxC,OALL;AAMJC,eAAS,MANL;AAOJC,sBAAgB;AAPZ;AADD,GAAP;AAWD;;IAEKC,O;;;;;;;;oBA4BJC,M,qBAAS;AAAA,iBAOH,KAAKjB,KAPF;AAAA,QAELkB,QAFK,UAELA,QAFK;AAAA,QAGLC,SAHK,UAGLA,SAHK;AAAA,QAILjB,QAJK,UAILA,QAJK;AAAA,QAKLkB,KALK,UAKLA,KALK;AAAA,QAMFC,KANE;AAAA,QASAC,aATA,GASiB,KAAKrB,OAAL,CAAaE,QAT9B,CASAmB,aATA;;AAUP,QAAMC,SAASxB,UAAU,KAAKC,KAAf,EAAsB,KAAKC,OAA3B,CAAf;;AAEA,WACE;AAAA;AAAA,iCAASoB,KAAT,IAAgB,WAAWF,SAA3B,EAAsC,OAAOG,cAAc,sBAAc,EAAd,EAAkBC,OAAOjB,IAAzB,EAA+Bc,KAA/B,CAAd,CAA7C;AACGF;AADH,KADF;AAKD,G;;;4BA5CMM,S,GAAY;AACjB;;;AAGAN,YAAU,oBAAUO,IAJH;AAKjB;;;AAGAN,aAAW,oBAAUO,MARJ;AASjB;;;AAGAxB,YAAU,oBAAUyB,IAZH;AAajB;;;AAGAP,SAAO,oBAAUQ;AAhBA,C,SAmBZC,Y,GAAe;AACpB3B,YAAU;AADU,C,SAIf4B,Y,GAAe;AACpB3B,YAAU,oBAAUyB,MAAV,CAAiBG;AADP,C;kBAwBTf,O","file":"Toolbar.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nfunction getStyles(props, context) {\n  const {noGutter} = props;\n\n  const {\n    baseTheme,\n    toolbar,\n  } = context.muiTheme;\n\n  return {\n    root: {\n      boxSizing: 'border-box',\n      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)\n      backgroundColor: toolbar.backgroundColor,\n      height: toolbar.height,\n      padding: noGutter ? 0 : `0px ${baseTheme.spacing.desktopGutter}px`,\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n  };\n}\n\nclass Toolbar extends Component {\n  static propTypes = {\n    /**\n     * Can be a `ToolbarGroup` to render a group of related items.\n     */\n    children: PropTypes.node,\n    /**\n     * The css class name of the root element.\n     */\n    className: PropTypes.string,\n    /**\n     * Do not apply `desktopGutter` to the `Toolbar`.\n     */\n    noGutter: PropTypes.bool,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    noGutter: false,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      noGutter, // eslint-disable-line no-unused-vars\n      style,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n\n    return (\n      <div {...other} className={className} style={prepareStyles(Object.assign({}, styles.root, style))}>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n"]}