{"version":3,"sources":["../../src/RaisedButton/RaisedButton.js"],"names":["validateLabel","props","propName","componentName","process","env","NODE_ENV","children","label","icon","Error","getStyles","context","state","muiTheme","baseTheme","button","raisedButton","borderRadius","disabled","disabledBackgroundColor","disabledLabelColor","fullWidth","labelPosition","primary","secondary","style","amount","backgroundColor","color","labelColor","textColor","disabledColor","disabledTextColor","primaryColor","primaryTextColor","secondaryColor","secondaryTextColor","buttonHeight","height","root","display","transition","easeOut","minWidth","lineHeight","width","padding","textAlign","position","opacity","fontSize","letterSpacing","textTransform","fontWeight","margin","userSelect","paddingLeft","spacing","desktopGutterLess","paddingRight","verticalAlign","marginLeft","marginRight","overlay","keyboardFocused","hovered","top","ripple","RaisedButton","touched","initialZDepth","zDepth","handleMouseDown","event","setState","onMouseDown","handleMouseUp","onMouseUp","handleMouseLeave","onMouseLeave","handleMouseEnter","onMouseEnter","handleTouchStart","onTouchStart","handleTouchEnd","onTouchEnd","handleKeyboardFocus","componentWillMount","componentWillReceiveProps","nextProps","nextState","render","buttonStyle","className","labelStyle","overlayStyle","rippleStyle","other","prepareStyles","styles","mergedRippleStyles","buttonEventHandlers","onKeyboardFocus","labelElement","iconCloned","key","enhancedButtonChildren","muiName","propTypes","string","object","node","containerElement","oneOfType","element","disableTouchRipple","bool","href","oneOf","func","onTouchTap","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"RaisedButton.js","sourcesContent":["import React, {Component, cloneElement} from 'react';\nimport PropTypes from 'prop-types';\nimport transitions from '../styles/transitions';\nimport {fade} from '../utils/colorManipulator';\nimport EnhancedButton from '../internal/EnhancedButton';\nimport Paper from '../Paper';\n\nfunction validateLabel(props, propName, componentName) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!props.children && (props.label !== 0 && !props.label) && !props.icon) {\n      return new Error(`Required prop label or children or icon was not specified in ${componentName}.`);\n    }\n  }\n}\n\nfunction getStyles(props, context, state) {\n  const {\n    baseTheme,\n    button,\n    raisedButton,\n    borderRadius,\n  } = context.muiTheme;\n\n  const {\n    disabled,\n    disabledBackgroundColor,\n    disabledLabelColor,\n    fullWidth,\n    icon,\n    label,\n    labelPosition,\n    primary,\n    secondary,\n    style,\n  } = props;\n\n  const amount = (primary || secondary) ? 0.4 : 0.08;\n\n  let backgroundColor = raisedButton.color;\n  let labelColor = raisedButton.textColor;\n\n  if (disabled) {\n    backgroundColor = disabledBackgroundColor || raisedButton.disabledColor;\n    labelColor = disabledLabelColor || raisedButton.disabledTextColor;\n  } else if (primary) {\n    backgroundColor = raisedButton.primaryColor;\n    labelColor = raisedButton.primaryTextColor;\n  } else if (secondary) {\n    backgroundColor = raisedButton.secondaryColor;\n    labelColor = raisedButton.secondaryTextColor;\n  } else {\n    if (props.backgroundColor) {\n      backgroundColor = props.backgroundColor;\n    }\n    if (props.labelColor) {\n      labelColor = props.labelColor;\n    }\n  }\n\n  const buttonHeight = style && style.height || button.height;\n\n  return {\n    root: {\n      display: 'inline-block',\n      transition: transitions.easeOut(),\n      minWidth: fullWidth ? '100%' : button.minWidth,\n    },\n    button: {\n      height: buttonHeight,\n      lineHeight: `${buttonHeight}px`,\n      width: '100%',\n      padding: 0,\n      borderRadius,\n      transition: transitions.easeOut(),\n      backgroundColor: backgroundColor,\n      // That's the default value for a button but not a link\n      textAlign: 'center',\n    },\n    label: {\n      position: 'relative',\n      opacity: 1,\n      fontSize: raisedButton.fontSize,\n      letterSpacing: 0,\n      textTransform: raisedButton.textTransform || button.textTransform || 'uppercase',\n      fontWeight: raisedButton.fontWeight,\n      margin: 0,\n      userSelect: 'none',\n      paddingLeft: icon && labelPosition !== 'before' ? 8 : baseTheme.spacing.desktopGutterLess,\n      paddingRight: icon && labelPosition === 'before' ? 8 : baseTheme.spacing.desktopGutterLess,\n      color: labelColor,\n    },\n    icon: {\n      verticalAlign: 'middle',\n      marginLeft: label && labelPosition !== 'before' ? 12 : 0,\n      marginRight: label && labelPosition === 'before' ? 12 : 0,\n    },\n    overlay: {\n      height: buttonHeight,\n      borderRadius,\n      backgroundColor: (state.keyboardFocused || state.hovered) && !disabled &&\n        fade(labelColor, amount),\n      transition: transitions.easeOut(),\n      top: 0,\n    },\n    ripple: {\n      color: labelColor,\n      opacity: !(primary || secondary) ? 0.1 : 0.16,\n    },\n  };\n}\n\nclass RaisedButton extends Component {\n  static muiName = 'RaisedButton';\n\n  static propTypes = {\n    /**\n     * Override the default background color for the button,\n     * but not the default disabled background color\n     * (use `disabledBackgroundColor` for this).\n     */\n    backgroundColor: PropTypes.string,\n    /**\n     * Override the inline-styles of the button element.\n     */\n    buttonStyle: PropTypes.object,\n    /**\n     * The content of the button.\n     * If a label is provided via the `label` prop, the text within the label\n     * will be displayed in addition to the content provided here.\n     */\n    children: PropTypes.node,\n    /**\n     * The CSS class name of the root element.\n     */\n    className: PropTypes.string,\n    /**\n      * The element to use as the container for the RaisedButton. Either a string to\n      * use a DOM element or a ReactElement. This is useful for wrapping the\n      * RaisedButton in a custom Link component. If a ReactElement is given, ensure\n      * that it passes all of its given props through to the underlying DOM\n      * element and renders its children prop for proper integration.\n      */\n    containerElement: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n    ]),\n    /**\n     * If true, the element's ripple effect will be disabled.\n     */\n    disableTouchRipple: PropTypes.bool,\n    /**\n     * If true, the button will be disabled.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Override the default background color for the button\n     * when it is disabled.\n     */\n    disabledBackgroundColor: PropTypes.string,\n    /**\n     * The color of the button's label when the button is disabled.\n     */\n    disabledLabelColor: PropTypes.string,\n    /**\n     * If true, the button will take up the full width of its container.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * The URL to link to when the button is clicked.\n     */\n    href: PropTypes.string,\n    /**\n     * An icon to be displayed within the button.\n     */\n    icon: PropTypes.node,\n    /**\n     * The label to be displayed within the button.\n     * If content is provided via the `children` prop, that content will be\n     * displayed in addition to the label provided here.\n     */\n    label: validateLabel,\n    /**\n     * The color of the button's label.\n     */\n    labelColor: PropTypes.string,\n    /**\n     * The position of the button's label relative to the button's `children`.\n     */\n    labelPosition: PropTypes.oneOf([\n      'before',\n      'after',\n    ]),\n    /**\n     * Override the inline-styles of the button's label element.\n     */\n    labelStyle: PropTypes.object,\n    /** @ignore */\n    onMouseDown: PropTypes.func,\n    /** @ignore */\n    onMouseEnter: PropTypes.func,\n    /** @ignore */\n    onMouseLeave: PropTypes.func,\n    /** @ignore */\n    onMouseUp: PropTypes.func,\n    /** @ignore */\n    onTouchEnd: PropTypes.func,\n    /** @ignore */\n    onTouchStart: PropTypes.func,\n    /**\n     * Callback function fired when the button is touch-tapped.\n     *\n     * @param {object} event TouchTap event targeting the button.\n     */\n    onTouchTap: PropTypes.func,\n    /**\n     * Override the inline style of the button overlay.\n     */\n    overlayStyle: PropTypes.object,\n    /**\n     * If true, the button will use the theme's primary color.\n     */\n    primary: PropTypes.bool,\n    /**\n     * Override the inline style of the ripple element.\n     */\n    rippleStyle: PropTypes.object,\n    /**\n     * If true, the button will use the theme's secondary color.\n     * If both `secondary` and `primary` are true, the button will use\n     * the theme's primary color.\n     */\n    secondary: PropTypes.bool,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    labelPosition: 'after',\n    fullWidth: false,\n    primary: false,\n    secondary: false,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    hovered: false,\n    keyboardFocused: false,\n    touched: false,\n    initialZDepth: 0,\n    zDepth: 0,\n  };\n\n  componentWillMount() {\n    const zDepth = this.props.disabled ? 0 : 1;\n    this.setState({\n      zDepth: zDepth,\n      initialZDepth: zDepth,\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const zDepth = nextProps.disabled ? 0 : 1;\n    const nextState = {\n      zDepth: zDepth,\n      initialZDepth: zDepth,\n    };\n\n    if (nextProps.disabled) {\n      nextState.hovered = false;\n    }\n\n    this.setState(nextState);\n  }\n\n  handleMouseDown = (event) => {\n    // only listen to left clicks\n    if (event.button === 0) {\n      this.setState({\n        zDepth: this.state.initialZDepth + 1,\n      });\n    }\n    if (this.props.onMouseDown) {\n      this.props.onMouseDown(event);\n    }\n  };\n\n  handleMouseUp = (event) => {\n    this.setState({\n      zDepth: this.state.initialZDepth,\n    });\n    if (this.props.onMouseUp) {\n      this.props.onMouseUp(event);\n    }\n  };\n\n  handleMouseLeave = (event) => {\n    if (!this.state.keyboardFocused) {\n      this.setState({\n        zDepth: this.state.initialZDepth,\n        hovered: false,\n      });\n    }\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(event);\n    }\n  };\n\n  handleMouseEnter = (event) => {\n    if (!this.state.keyboardFocused && !this.state.touched) {\n      this.setState({\n        hovered: true,\n      });\n    }\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(event);\n    }\n  };\n\n  handleTouchStart = (event) => {\n    this.setState({\n      touched: true,\n      zDepth: this.state.initialZDepth + 1,\n    });\n\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(event);\n    }\n  };\n\n  handleTouchEnd = (event) => {\n    this.setState({\n      touched: true,\n      zDepth: this.state.initialZDepth,\n    });\n\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(event);\n    }\n  };\n\n  handleKeyboardFocus = (event, keyboardFocused) => {\n    const zDepth = (keyboardFocused && !this.props.disabled) ? this.state.initialZDepth + 1 : this.state.initialZDepth;\n\n    this.setState({\n      zDepth: zDepth,\n      keyboardFocused: keyboardFocused,\n    });\n  };\n\n  render() {\n    const {\n      backgroundColor, // eslint-disable-line no-unused-vars\n      buttonStyle,\n      children,\n      className,\n      disabled,\n      disabledBackgroundColor, // eslint-disable-line no-unused-vars\n      disabledLabelColor, // eslint-disable-line no-unused-vars\n      fullWidth, // eslint-disable-line no-unused-vars\n      icon,\n      label,\n      labelColor, // eslint-disable-line no-unused-vars\n      labelPosition,\n      labelStyle,\n      overlayStyle,\n      primary, // eslint-disable-line no-unused-vars\n      rippleStyle,\n      secondary, // eslint-disable-line no-unused-vars\n      style,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context, this.state);\n    const mergedRippleStyles = Object.assign({}, styles.ripple, rippleStyle);\n\n    const buttonEventHandlers = disabled ? {} : {\n      onMouseDown: this.handleMouseDown,\n      onMouseUp: this.handleMouseUp,\n      onMouseLeave: this.handleMouseLeave,\n      onMouseEnter: this.handleMouseEnter,\n      onTouchStart: this.handleTouchStart,\n      onTouchEnd: this.handleTouchEnd,\n      onKeyboardFocus: this.handleKeyboardFocus,\n    };\n\n    const labelElement = label && (\n      <span style={prepareStyles(Object.assign(styles.label, labelStyle))} key=\"labelElement\">\n        {label}\n      </span>\n    );\n\n    const iconCloned = icon && cloneElement(icon, {\n      color: icon.props.color || styles.label.color,\n      style: Object.assign(styles.icon, icon.props.style),\n      key: 'iconCloned',\n    });\n\n    // Place label before or after children.\n    const enhancedButtonChildren = labelPosition === 'before' ?\n    [\n      labelElement,\n      iconCloned,\n      children,\n    ] : [\n      children,\n      iconCloned,\n      labelElement,\n    ];\n\n    return (\n      <Paper\n        className={className}\n        style={Object.assign(styles.root, style)}\n        zDepth={this.state.zDepth}\n      >\n        <EnhancedButton\n          {...other}\n          {...buttonEventHandlers}\n          ref=\"container\"\n          disabled={disabled}\n          style={Object.assign(styles.button, buttonStyle)}\n          focusRippleColor={mergedRippleStyles.color}\n          touchRippleColor={mergedRippleStyles.color}\n          focusRippleOpacity={mergedRippleStyles.opacity}\n          touchRippleOpacity={mergedRippleStyles.opacity}\n        >\n          <div\n            ref=\"overlay\"\n            style={prepareStyles(Object.assign(styles.overlay, overlayStyle))}\n          >\n            {enhancedButtonChildren}\n          </div>\n        </EnhancedButton>\n      </Paper>\n    );\n  }\n}\n\nexport default RaisedButton;\n"]}