{"version":3,"sources":["../../src/internal/EnhancedSwitch.js"],"names":["getStyles","props","context","baseTheme","muiTheme","root","cursor","disabled","position","overflow","display","height","width","input","pointerEvents","opacity","zIndex","left","boxSizing","padding","margin","controls","label","float","lineHeight","color","palette","textColor","fontFamily","wrap","transition","easeOut","flexShrink","spacing","desktopGutterLess","marginRight","labelPosition","marginLeft","ripple","rippleColor","primary1Color","top","EnhancedSwitch","state","isKeyboardFocused","handleChange","event","tabPressed","setState","isInputChecked","refs","checkbox","checked","hasOwnProperty","onParentShouldUpdate","onSwitch","handleKeyDown","code","handleKeyUp","handleMouseDown","button","touchRipple","start","handleMouseUp","end","handleMouseLeave","handleTouchStart","handleTouchEnd","handleBlur","onBlur","handleFocus","setTimeout","onFocus","componentDidMount","inputNode","switched","componentWillReceiveProps","nextProps","hasCheckedProp","hasNewDefaultProp","defaultChecked","isSwitched","setSwitched","newSwitchedValue","getValue","value","render","name","iconStyle","inputStyle","inputType","labelStyle","onMouseUp","onMouseDown","onMouseLeave","onTouchStart","onTouchEnd","disableTouchRipple","disableFocusRipple","className","rippleStyle","style","switchElement","thumbStyle","trackStyle","other","prepareStyles","styles","wrapStyles","mergedRippleStyle","labelElement","showTouchRipple","showFocusRipple","focusRipple","ripples","inputElement","switchOrThumbElement","elementsInOrder","propTypes","bool","string","object","isRequired","node","oneOf","func","element","any","contextTypes"],"mappings":"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","file":"EnhancedSwitch.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport EventListener from 'react-event-listener';\nimport keycode from 'keycode';\nimport transitions from '../styles/transitions';\nimport FocusRipple from './FocusRipple';\nimport TouchRipple from './TouchRipple';\nimport Paper from './../Paper';\nimport warning from 'warning';\n\nfunction getStyles(props, context) {\n  const {baseTheme} = context.muiTheme;\n\n  return {\n    root: {\n      cursor: props.disabled ? 'not-allowed' : 'pointer',\n      position: 'relative',\n      overflow: 'visible',\n      display: 'table',\n      height: 'auto',\n      width: '100%',\n    },\n    input: {\n      position: 'absolute',\n      cursor: 'inherit',\n      pointerEvents: 'all',\n      opacity: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: 2,\n      left: 0,\n      boxSizing: 'border-box',\n      padding: 0,\n      margin: 0,\n    },\n    controls: {\n      display: 'flex',\n      width: '100%',\n      height: '100%',\n    },\n    label: {\n      float: 'left',\n      position: 'relative',\n      display: 'block',\n      width: 'calc(100% - 60px)',\n      lineHeight: '24px',\n      color: baseTheme.palette.textColor,\n      fontFamily: baseTheme.fontFamily,\n    },\n    wrap: {\n      transition: transitions.easeOut(),\n      float: 'left',\n      position: 'relative',\n      display: 'block',\n      flexShrink: 0,\n      width: 60 - baseTheme.spacing.desktopGutterLess,\n      marginRight: (props.labelPosition === 'right') ?\n        baseTheme.spacing.desktopGutterLess : 0,\n      marginLeft: (props.labelPosition === 'left') ?\n        baseTheme.spacing.desktopGutterLess : 0,\n    },\n    ripple: {\n      color: props.rippleColor || baseTheme.palette.primary1Color,\n      height: '200%',\n      width: '200%',\n      top: -12,\n      left: -12,\n    },\n  };\n}\n\nclass EnhancedSwitch extends Component {\n  static propTypes = {\n    checked: PropTypes.bool,\n    className: PropTypes.string,\n    defaultChecked: PropTypes.bool,\n    disableFocusRipple: PropTypes.bool,\n    disableTouchRipple: PropTypes.bool,\n    disabled: PropTypes.bool,\n    iconStyle: PropTypes.object,\n    inputStyle: PropTypes.object,\n    inputType: PropTypes.string.isRequired,\n    label: PropTypes.node,\n    labelPosition: PropTypes.oneOf(['left', 'right']),\n    labelStyle: PropTypes.object,\n    name: PropTypes.string,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n    onMouseDown: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onMouseUp: PropTypes.func,\n    onParentShouldUpdate: PropTypes.func,\n    onSwitch: PropTypes.func,\n    onTouchEnd: PropTypes.func,\n    onTouchStart: PropTypes.func,\n    rippleColor: PropTypes.string,\n    rippleStyle: PropTypes.object,\n    style: PropTypes.object,\n    switchElement: PropTypes.element.isRequired,\n    switched: PropTypes.bool.isRequired,\n    thumbStyle: PropTypes.object,\n    trackStyle: PropTypes.object,\n    value: PropTypes.any,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    isKeyboardFocused: false,\n  };\n\n  componentDidMount() {\n    const inputNode = this.refs.checkbox;\n    if ((!this.props.switched || inputNode.checked !== this.props.switched) &&\n      this.props.onParentShouldUpdate) {\n      this.props.onParentShouldUpdate(inputNode.checked);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const hasCheckedProp = nextProps.hasOwnProperty('checked');\n    const hasNewDefaultProp =\n      (nextProps.hasOwnProperty('defaultChecked') &&\n      (nextProps.defaultChecked !== this.props.defaultChecked));\n\n    if (hasCheckedProp || hasNewDefaultProp) {\n      const switched = nextProps.checked || nextProps.defaultChecked || false;\n\n      this.setState({\n        switched: switched,\n      });\n\n      if (this.props.onParentShouldUpdate && switched !== this.props.switched) {\n        this.props.onParentShouldUpdate(switched);\n      }\n    }\n  }\n\n  isSwitched() {\n    return this.refs.checkbox.checked;\n  }\n\n  // no callback here because there is no event\n  setSwitched(newSwitchedValue) {\n    if (!this.props.hasOwnProperty('checked') || this.props.checked === false) {\n      if (this.props.onParentShouldUpdate) {\n        this.props.onParentShouldUpdate(newSwitchedValue);\n      }\n      this.refs.checkbox.checked = newSwitchedValue;\n    } else {\n      warning(false, 'Material-UI: Cannot call set method while checked is defined as a property.');\n    }\n  }\n\n  getValue() {\n    return this.refs.checkbox.value;\n  }\n\n  handleChange = (event) => {\n    this.tabPressed = false;\n    this.setState({\n      isKeyboardFocused: false,\n    });\n\n    const isInputChecked = this.refs.checkbox.checked;\n\n    if (!this.props.hasOwnProperty('checked') && this.props.onParentShouldUpdate) {\n      this.props.onParentShouldUpdate(isInputChecked);\n    }\n\n    if (this.props.onSwitch) {\n      this.props.onSwitch(event, isInputChecked);\n    }\n  };\n\n  // Checkbox inputs only use SPACE to change their state. Using ENTER will\n  // update the ui but not the input.\n  handleKeyDown = (event) => {\n    const code = keycode(event);\n\n    if (code === 'tab') {\n      this.tabPressed = true;\n    }\n    if (this.state.isKeyboardFocused && code === 'space') {\n      this.handleChange(event);\n    }\n  };\n\n  handleKeyUp = (event) => {\n    if (this.state.isKeyboardFocused && keycode(event) === 'space') {\n      this.handleChange(event);\n    }\n  };\n\n  /**\n   * Because both the ripples and the checkbox input cannot share pointer\n   * events, the checkbox input takes control of pointer events and calls\n   * ripple animations manually.\n   */\n  handleMouseDown = (event) => {\n    // only listen to left clicks\n    if (event.button === 0) {\n      this.refs.touchRipple.start(event);\n    }\n  };\n\n  handleMouseUp = () => {\n    this.refs.touchRipple.end();\n  };\n\n  handleMouseLeave = () => {\n    this.refs.touchRipple.end();\n  };\n\n  handleTouchStart = (event) => {\n    this.refs.touchRipple.start(event);\n  };\n\n  handleTouchEnd = () => {\n    this.refs.touchRipple.end();\n  };\n\n  handleBlur = (event) => {\n    this.setState({\n      isKeyboardFocused: false,\n    });\n\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  handleFocus = (event) => {\n    // setTimeout is needed becuase the focus event fires first\n    // Wait so that we can capture if this was a keyboard focus\n    // or touch focus\n    setTimeout(() => {\n      if (this.tabPressed) {\n        this.setState({\n          isKeyboardFocused: true,\n        });\n      }\n    }, 150);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  render() {\n    const {\n      name,\n      value,\n      iconStyle,\n      inputStyle,\n      inputType,\n      label,\n      labelStyle,\n      labelPosition,\n      onSwitch, // eslint-disable-line no-unused-vars\n      onBlur, // eslint-disable-line no-unused-vars\n      onFocus, // eslint-disable-line no-unused-vars\n      onMouseUp, // eslint-disable-line no-unused-vars\n      onMouseDown, // eslint-disable-line no-unused-vars\n      onMouseLeave, // eslint-disable-line no-unused-vars\n      onTouchStart, // eslint-disable-line no-unused-vars\n      onTouchEnd, // eslint-disable-line no-unused-vars\n      onParentShouldUpdate, // eslint-disable-line no-unused-vars\n      disabled,\n      disableTouchRipple,\n      disableFocusRipple,\n      className,\n      rippleColor, // eslint-disable-line no-unused-vars\n      rippleStyle,\n      style,\n      switched, // eslint-disable-line no-unused-vars\n      switchElement,\n      thumbStyle,\n      trackStyle,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n    const wrapStyles = Object.assign(styles.wrap, iconStyle);\n    const mergedRippleStyle = Object.assign(styles.ripple, rippleStyle);\n\n    if (thumbStyle) {\n      wrapStyles.marginLeft /= 2;\n      wrapStyles.marginRight /= 2;\n    }\n\n    const labelElement = label && (\n      <label style={prepareStyles(Object.assign(styles.label, labelStyle))}>\n        {label}\n      </label>\n    );\n\n    const showTouchRipple = !disabled && !disableTouchRipple;\n    const showFocusRipple = !disabled && !disableFocusRipple;\n\n    const touchRipple = (\n      <TouchRipple\n        ref=\"touchRipple\"\n        key=\"touchRipple\"\n        style={mergedRippleStyle}\n        color={mergedRippleStyle.color}\n        muiTheme={this.context.muiTheme}\n        centerRipple={true}\n      />\n    );\n\n    const focusRipple = (\n      <FocusRipple\n        key=\"focusRipple\"\n        innerStyle={mergedRippleStyle}\n        color={mergedRippleStyle.color}\n        muiTheme={this.context.muiTheme}\n        show={this.state.isKeyboardFocused}\n      />\n    );\n\n    const ripples = [\n      showTouchRipple ? touchRipple : null,\n      showFocusRipple ? focusRipple : null,\n    ];\n\n    const inputElement = (\n      <input\n        {...other}\n        ref=\"checkbox\"\n        type={inputType}\n        style={prepareStyles(Object.assign(styles.input, inputStyle))}\n        name={name}\n        value={value}\n        disabled={disabled}\n        onBlur={this.handleBlur}\n        onFocus={this.handleFocus}\n        onChange={this.handleChange}\n        onMouseUp={showTouchRipple && this.handleMouseUp}\n        onMouseDown={showTouchRipple && this.handleMouseDown}\n        onMouseLeave={showTouchRipple && this.handleMouseLeave}\n        onTouchStart={showTouchRipple && this.handleTouchStart}\n        onTouchEnd={showTouchRipple && this.handleTouchEnd}\n      />\n    );\n\n    // If toggle component (indicated by whether the style includes thumb) manually lay out\n    // elements in order to nest ripple elements\n    const switchOrThumbElement = !thumbStyle ? (\n      <div style={prepareStyles(wrapStyles)}>\n        {switchElement}\n        {ripples}\n      </div>\n    ) : (\n      <div style={prepareStyles(wrapStyles)}>\n        <div style={prepareStyles(Object.assign({}, trackStyle))} />\n        <Paper style={thumbStyle} zDepth={1} circle={true}> {ripples} </Paper>\n      </div>\n    );\n\n    const elementsInOrder = labelPosition === 'right' ? (\n      <div style={styles.controls}>\n        {switchOrThumbElement}\n        {labelElement}\n      </div>\n    ) : (\n      <div style={styles.controls}>\n        {labelElement}\n        {switchOrThumbElement}\n      </div>\n    );\n\n    return (\n      <div ref=\"root\" className={className} style={prepareStyles(Object.assign(styles.root, style))}>\n        <EventListener\n          target=\"window\"\n          onKeyDown={this.handleKeyDown}\n          onKeyUp={this.handleKeyUp}\n        />\n        {inputElement}\n        {elementsInOrder}\n      </div>\n    );\n  }\n}\n\nexport default EnhancedSwitch;\n"]}