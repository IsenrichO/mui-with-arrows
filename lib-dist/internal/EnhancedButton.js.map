{"version":3,"sources":["../../src/internal/EnhancedButton.js"],"names":["styleInjected","listening","tabPressed","injectStyle","style","document","createElement","innerHTML","body","appendChild","listenForTabPresses","on","window","event","EnhancedButton","state","isKeyboardFocused","handleKeyDown","props","disabled","disableKeyboardFocus","handleTouchTap","removeKeyboardFocus","onKeyDown","handleKeyUp","onKeyUp","handleBlur","cancelFocusTimeout","onBlur","handleFocus","persist","focusTimeout","setTimeout","setKeyboardFocus","onFocus","handleClick","onClick","onTouchTap","componentWillMount","keyboardFocused","setState","componentDidMount","button","focus","onKeyboardFocus","componentWillReceiveProps","nextProps","componentWillUnmount","clearTimeout","createButtonChildren","centerRipple","children","disableFocusRipple","disableTouchRipple","focusRippleColor","focusRippleOpacity","touchRippleColor","touchRippleOpacity","focusRipple","undefined","touchRipple","render","containerElement","href","tabIndex","type","other","context","muiTheme","prepareStyles","enhancedButton","mergedStyles","border","boxSizing","display","fontFamily","baseTheme","WebkitTapHighlightColor","tapHighlightColor","cursor","textDecoration","margin","padding","outline","fontSize","fontWeight","position","verticalAlign","zIndex","backgroundColor","background","buttonProps","ref","node","buttonChildren","isValidElement","cloneElement","propTypes","bool","oneOfType","string","element","number","func","object","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"EnhancedButton.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Events from '../utils/events';\nimport keycode from 'keycode';\nimport FocusRipple from './FocusRipple';\nimport TouchRipple from './TouchRipple';\n\nlet styleInjected = false;\nlet listening = false;\nlet tabPressed = false;\n\nfunction injectStyle() {\n  if (!styleInjected) {\n    // Remove inner padding and border in Firefox 4+.\n    const style = document.createElement('style');\n    style.innerHTML = `\n      button::-moz-focus-inner,\n      input::-moz-focus-inner {\n        border: 0;\n        padding: 0;\n      }\n    `;\n\n    document.body.appendChild(style);\n    styleInjected = true;\n  }\n}\n\nfunction listenForTabPresses() {\n  if (!listening) {\n    Events.on(window, 'keydown', (event) => {\n      tabPressed = keycode(event) === 'tab';\n    });\n    listening = true;\n  }\n}\n\nclass EnhancedButton extends Component {\n  static propTypes = {\n    centerRipple: PropTypes.bool,\n    children: PropTypes.node,\n    containerElement: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n    ]),\n    disableFocusRipple: PropTypes.bool,\n    disableKeyboardFocus: PropTypes.bool,\n    disableTouchRipple: PropTypes.bool,\n    disabled: PropTypes.bool,\n    focusRippleColor: PropTypes.string,\n    focusRippleOpacity: PropTypes.number,\n    href: PropTypes.string,\n    keyboardFocused: PropTypes.bool,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onFocus: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    onKeyboardFocus: PropTypes.func,\n    onTouchTap: PropTypes.func,\n    style: PropTypes.object,\n    tabIndex: PropTypes.number,\n    touchRippleColor: PropTypes.string,\n    touchRippleOpacity: PropTypes.number,\n    type: PropTypes.string,\n  };\n\n  static defaultProps = {\n    containerElement: 'button',\n    onBlur: () => {},\n    onClick: () => {},\n    onFocus: () => {},\n    onKeyDown: () => {},\n    onKeyUp: () => {},\n    onKeyboardFocus: () => {},\n    onTouchTap: () => {},\n    tabIndex: 0,\n    type: 'button',\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    isKeyboardFocused: false,\n  };\n\n  componentWillMount() {\n    const {disabled, disableKeyboardFocus, keyboardFocused} = this.props;\n    if (!disabled && keyboardFocused && !disableKeyboardFocus) {\n      this.setState({isKeyboardFocused: true});\n    }\n  }\n\n  componentDidMount() {\n    injectStyle();\n    listenForTabPresses();\n    if (this.state.isKeyboardFocused) {\n      this.button.focus();\n      this.props.onKeyboardFocus(null, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ((nextProps.disabled || nextProps.disableKeyboardFocus) &&\n      this.state.isKeyboardFocused) {\n      this.setState({isKeyboardFocused: false});\n      if (nextProps.onKeyboardFocus) {\n        nextProps.onKeyboardFocus(null, false);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.focusTimeout) {\n      clearTimeout(this.focusTimeout);\n    }\n  }\n\n  isKeyboardFocused() {\n    return this.state.isKeyboardFocused;\n  }\n\n  removeKeyboardFocus(event) {\n    if (this.state.isKeyboardFocused) {\n      this.setState({isKeyboardFocused: false});\n      this.props.onKeyboardFocus(event, false);\n    }\n  }\n\n  setKeyboardFocus(event) {\n    if (!this.state.isKeyboardFocused) {\n      this.setState({isKeyboardFocused: true});\n      this.props.onKeyboardFocus(event, true);\n    }\n  }\n\n  cancelFocusTimeout() {\n    if (this.focusTimeout) {\n      clearTimeout(this.focusTimeout);\n      this.focusTimeout = null;\n    }\n  }\n\n  createButtonChildren() {\n    const {\n      centerRipple,\n      children,\n      disabled,\n      disableFocusRipple,\n      disableKeyboardFocus,\n      disableTouchRipple,\n      focusRippleColor,\n      focusRippleOpacity,\n      touchRippleColor,\n      touchRippleOpacity,\n    } = this.props;\n    const {isKeyboardFocused} = this.state;\n\n    // Focus Ripple\n    const focusRipple = isKeyboardFocused && !disabled && !disableFocusRipple && !disableKeyboardFocus ? (\n      <FocusRipple\n        color={focusRippleColor}\n        opacity={focusRippleOpacity}\n        show={isKeyboardFocused}\n        key=\"focusRipple\"\n      />\n    ) : undefined;\n\n    // Touch Ripple\n    const touchRipple = !disabled && !disableTouchRipple ? (\n      <TouchRipple\n        centerRipple={centerRipple}\n        color={touchRippleColor}\n        opacity={touchRippleOpacity}\n        key=\"touchRipple\"\n      >\n        {children}\n      </TouchRipple>\n    ) : undefined;\n\n    return [\n      focusRipple,\n      touchRipple,\n      touchRipple ? undefined : children,\n    ];\n  }\n\n  handleKeyDown = (event) => {\n    if (!this.props.disabled && !this.props.disableKeyboardFocus) {\n      if (keycode(event) === 'enter' && this.state.isKeyboardFocused) {\n        this.handleTouchTap(event);\n      }\n      if (keycode(event) === 'esc' && this.state.isKeyboardFocused) {\n        this.removeKeyboardFocus(event);\n      }\n    }\n    this.props.onKeyDown(event);\n  };\n\n  handleKeyUp = (event) => {\n    if (!this.props.disabled && !this.props.disableKeyboardFocus) {\n      if (keycode(event) === 'space' && this.state.isKeyboardFocused) {\n        this.handleTouchTap(event);\n      }\n    }\n    this.props.onKeyUp(event);\n  };\n\n  handleBlur = (event) => {\n    this.cancelFocusTimeout();\n    this.removeKeyboardFocus(event);\n    this.props.onBlur(event);\n  };\n\n  handleFocus = (event) => {\n    if (event) event.persist();\n    if (!this.props.disabled && !this.props.disableKeyboardFocus) {\n      // setTimeout is needed because the focus event fires first\n      // Wait so that we can capture if this was a keyboard focus\n      // or touch focus\n      this.focusTimeout = setTimeout(() => {\n        if (tabPressed) {\n          this.setKeyboardFocus(event);\n          tabPressed = false;\n        }\n      }, 150);\n\n      this.props.onFocus(event);\n    }\n  };\n\n  handleClick = (event) => {\n    if (!this.props.disabled) {\n      tabPressed = false;\n      this.props.onClick(event);\n    }\n  };\n\n  handleTouchTap = (event) => {\n    this.cancelFocusTimeout();\n    if (!this.props.disabled) {\n      tabPressed = false;\n      this.removeKeyboardFocus(event);\n      this.props.onTouchTap(event);\n    }\n  };\n\n  render() {\n    const {\n      centerRipple, // eslint-disable-line no-unused-vars\n      children,\n      containerElement,\n      disabled,\n      disableFocusRipple, // eslint-disable-line no-unused-vars\n      disableKeyboardFocus, // eslint-disable-line no-unused-vars\n      disableTouchRipple, // eslint-disable-line no-unused-vars\n      focusRippleColor, // eslint-disable-line no-unused-vars\n      focusRippleOpacity, // eslint-disable-line no-unused-vars\n      href,\n      keyboardFocused, // eslint-disable-line no-unused-vars\n      touchRippleColor, // eslint-disable-line no-unused-vars\n      touchRippleOpacity, // eslint-disable-line no-unused-vars\n      onBlur, // eslint-disable-line no-unused-vars\n      onClick, // eslint-disable-line no-unused-vars\n      onFocus, // eslint-disable-line no-unused-vars\n      onKeyUp, // eslint-disable-line no-unused-vars\n      onKeyDown, // eslint-disable-line no-unused-vars\n      onKeyboardFocus, // eslint-disable-line no-unused-vars\n      onTouchTap, // eslint-disable-line no-unused-vars\n      style,\n      tabIndex,\n      type,\n      ...other\n    } = this.props;\n\n    const {\n      prepareStyles,\n      enhancedButton,\n    } = this.context.muiTheme;\n\n    const mergedStyles = Object.assign({\n      border: 10,\n      boxSizing: 'border-box',\n      display: 'inline-block',\n      fontFamily: this.context.muiTheme.baseTheme.fontFamily,\n      WebkitTapHighlightColor: enhancedButton.tapHighlightColor, // Remove mobile color flashing (deprecated)\n      cursor: disabled ? 'default' : 'pointer',\n      textDecoration: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 'none',\n      fontSize: 'inherit',\n      fontWeight: 'inherit',\n      position: 'relative', // This is needed so that ripples do not bleed past border radius.\n      verticalAlign: href ? 'middle' : null,\n      zIndex: 1, // This is also needed so that (onTouch) ripples do not bleed past border radius.\n    }, style);\n\n\n    // Passing both background:none & backgroundColor can break due to object iteration order\n    if (!mergedStyles.backgroundColor && !mergedStyles.background) {\n      mergedStyles.background = 'none';\n    }\n\n    if (disabled && href) {\n      return (\n        <span\n          {...other}\n          style={mergedStyles}\n        >\n          {children}\n        </span>\n      );\n    }\n\n    const buttonProps = {\n      ...other,\n      style: prepareStyles(mergedStyles),\n      ref: (node) => this.button = node,\n      disabled: disabled,\n      href: href,\n      onBlur: this.handleBlur,\n      onClick: this.handleClick,\n      onFocus: this.handleFocus,\n      onKeyUp: this.handleKeyUp,\n      onKeyDown: this.handleKeyDown,\n      onTouchTap: this.handleTouchTap,\n      tabIndex: disabled || disableKeyboardFocus ? -1 : tabIndex,\n    };\n\n    const buttonChildren = this.createButtonChildren();\n\n    if (React.isValidElement(containerElement)) {\n      return React.cloneElement(containerElement, buttonProps, buttonChildren);\n    }\n\n    if (!href && containerElement === 'button') {\n      buttonProps.type = type;\n    }\n\n    return React.createElement(href ? 'a' : containerElement, buttonProps, buttonChildren);\n  }\n}\n\nexport default EnhancedButton;\n"]}