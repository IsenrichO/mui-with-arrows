{"version":3,"sources":["../../src/internal/BeforeAfterWrapper.js"],"names":["styles","box","boxSizing","BeforeAfterWrapper","render","props","beforeStyle","afterStyle","beforeElementType","afterElementType","elementType","other","prepareStyles","context","muiTheme","beforeElement","afterElement","createElement","style","key","children","propTypes","string","object","node","defaultProps","contextTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,IAAMA,SAAS;AACbC,OAAK;AACHC,eAAW;AADR;AADQ,CAAf;;IAMMC,kB;;;;;;;;+BAwBJC,M,qBAAS;AAAA,iBAQH,KAAKC,KARF;AAAA,QAELC,WAFK,UAELA,WAFK;AAAA,QAGLC,UAHK,UAGLA,UAHK;AAAA,QAILC,iBAJK,UAILA,iBAJK;AAAA,QAKLC,gBALK,UAKLA,gBALK;AAAA,QAMLC,WANK,UAMLA,WANK;AAAA,QAOFC,KAPE;AAAA,QAUAC,aAVA,GAUiB,KAAKC,OAAL,CAAaC,QAV9B,CAUAF,aAVA;;;AAYP,QAAIG,sBAAJ;AACA,QAAIC,qBAAJ;;AAEA,QAAIV,WAAJ,EAAiB;AACfS,sBAAgB,gBAAME,aAAN,CAAoB,KAAKZ,KAAL,CAAWG,iBAA/B,EACd;AACEU,eAAON,cAAc,sBAAc,EAAd,EAAkBZ,OAAOC,GAAzB,EAA8BK,WAA9B,CAAd,CADT;AAEEa,aAAK;AAFP,OADc,CAAhB;AAKD;;AAED,QAAIZ,UAAJ,EAAgB;AACdS,qBAAe,gBAAMC,aAAN,CAAoB,KAAKZ,KAAL,CAAWI,gBAA/B,EACb;AACES,eAAON,cAAc,sBAAc,EAAd,EAAkBZ,OAAOC,GAAzB,EAA8BM,UAA9B,CAAd,CADT;AAEEY,aAAK;AAFP,OADa,CAAf;AAKD;;AAED,QAAMC,WAAW,CAACL,aAAD,EAAgB,KAAKV,KAAL,CAAWe,QAA3B,EAAqCJ,YAArC,CAAjB;;AAEA,QAAMX,QAAQM,KAAd;AACAN,UAAMa,KAAN,GAAcN,cAAc,sBAAc,EAAd,EAAkB,KAAKP,KAAL,CAAWa,KAA7B,CAAd,CAAd;;AAEA,WAAO,gBAAMD,aAAN,CAAoB,KAAKZ,KAAL,CAAWK,WAA/B,EAA4CL,KAA5C,EAAmDe,QAAnD,CAAP;AACD,G;;;4BA5DMC,S,GAAY;AACjBZ,oBAAkB,oBAAUa,MADX;AAEjBf,cAAY,oBAAUgB,MAFL;AAGjBf,qBAAmB,oBAAUc,MAHZ;AAIjBhB,eAAa,oBAAUiB,MAJN;AAKjBH,YAAU,oBAAUI,IALH;AAMjBd,eAAa,oBAAUY,MANN;AAOjB;;;AAGAJ,SAAO,oBAAUK;AAVA,C,SAaZE,Y,GAAe;AACpBjB,qBAAmB,KADC;AAEpBC,oBAAkB,KAFE;AAGpBC,eAAa;AAHO,C,SAMfgB,Y,GAAe;AACpBZ,YAAU,oBAAUS,MAAV,CAAiBI;AADP,C;kBA4CTxB,kB","file":"BeforeAfterWrapper.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n *  BeforeAfterWrapper\n *    An alternative for the ::before and ::after css pseudo-elements for\n *    components whose styles are defined in javascript instead of css.\n *\n *  Usage: For the element that we want to apply before and after elements to,\n *    wrap its children with BeforeAfterWrapper. For example:\n *\n *                                            <Paper>\n *  <Paper>                                     <div> // See notice\n *    <BeforeAfterWrapper>        renders         <div/> // before element\n *      [children of paper]       ------>         [children of paper]\n *    </BeforeAfterWrapper>                       <div/> // after element\n *  </Paper>                                    </div>\n *                                            </Paper>\n *\n *  Notice: Notice that this div bundles together our elements. If the element\n *    that we want to apply before and after elements is a HTML tag (i.e. a\n *    div, p, or button tag), we can avoid this extra nesting by passing using\n *    the BeforeAfterWrapper in place of said tag like so:\n *\n *  <p>\n *    <BeforeAfterWrapper>   do this instead   <BeforeAfterWrapper elementType='p'>\n *      [children of p]          ------>         [children of p]\n *    </BeforeAfterWrapper>                    </BeforeAfterWrapper>\n *  </p>\n *\n *  BeforeAfterWrapper features spread functionality. This means that we can\n *  pass HTML tag properties directly into the BeforeAfterWrapper tag.\n *\n *  When using BeforeAfterWrapper, ensure that the parent of the beforeElement\n *  and afterElement have a defined style position.\n */\n\nconst styles = {\n  box: {\n    boxSizing: 'border-box',\n  },\n};\n\nclass BeforeAfterWrapper extends Component {\n  static propTypes = {\n    afterElementType: PropTypes.string,\n    afterStyle: PropTypes.object,\n    beforeElementType: PropTypes.string,\n    beforeStyle: PropTypes.object,\n    children: PropTypes.node,\n    elementType: PropTypes.string,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    beforeElementType: 'div',\n    afterElementType: 'div',\n    elementType: 'div',\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {\n      beforeStyle,\n      afterStyle,\n      beforeElementType, // eslint-disable-line no-unused-vars\n      afterElementType, // eslint-disable-line no-unused-vars\n      elementType, // eslint-disable-line no-unused-vars\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n\n    let beforeElement;\n    let afterElement;\n\n    if (beforeStyle) {\n      beforeElement = React.createElement(this.props.beforeElementType,\n        {\n          style: prepareStyles(Object.assign({}, styles.box, beforeStyle)),\n          key: '::before',\n        });\n    }\n\n    if (afterStyle) {\n      afterElement = React.createElement(this.props.afterElementType,\n        {\n          style: prepareStyles(Object.assign({}, styles.box, afterStyle)),\n          key: '::after',\n        });\n    }\n\n    const children = [beforeElement, this.props.children, afterElement];\n\n    const props = other;\n    props.style = prepareStyles(Object.assign({}, this.props.style));\n\n    return React.createElement(this.props.elementType, props, children);\n  }\n}\n\nexport default BeforeAfterWrapper;\n"]}