{"version":3,"sources":["../../src/internal/AutoLockScrolling.js"],"names":["originalBodyOverflow","lockingCounter","AutoLockScrolling","locked","componentDidMount","props","lock","preventScrolling","componentWillReceiveProps","nextProps","allowScrolling","componentWillUnmount","body","document","getElementsByTagName","style","overflow","render","propTypes","bool","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAIA,uBAAuB,IAA3B;AACA,IAAIC,iBAAiB,CAArB;;IAEMC,iB;;;;;;;;;;;;0JA0BJC,M,GAAS,K;;;8BArBTC,iB,gCAAoB;AAClB,QAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoB,IAAxB,EAA8B;AAC5B,WAAKC,gBAAL;AACD;AACF,G;;8BAEDC,yB,sCAA0BC,S,EAAW;AACnC,QAAI,KAAKJ,KAAL,CAAWC,IAAX,KAAoBG,UAAUH,IAAlC,EAAwC;AACtC,UAAIG,UAAUH,IAAd,EAAoB;AAClB,aAAKC,gBAAL;AACD,OAFD,MAEO;AACL,aAAKG,cAAL;AACD;AACF;AACF,G;;8BAEDC,oB,mCAAuB;AACrB,SAAKD,cAAL;AACD,G;;AAED;;;8BAGAH,gB,+BAAmB;AACjB,QAAI,KAAKJ,MAAL,KAAgB,IAApB,EAA0B;AACxB;AACD;;AAEDF,qBAAiBA,iBAAiB,CAAlC;AACA,SAAKE,MAAL,GAAc,IAAd;;AAEA;AACA,QAAIF,mBAAmB,CAAvB,EAA0B;AACxB,UAAMW,OAAOC,SAASC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAb;AACAd,6BAAuBY,KAAKG,KAAL,CAAWC,QAAlC;AACAJ,WAAKG,KAAL,CAAWC,QAAX,GAAsB,QAAtB;AACD;AACF,G;;8BAEDN,c,6BAAiB;AACf,QAAI,KAAKP,MAAL,KAAgB,IAApB,EAA0B;AACxBF,uBAAiBA,iBAAiB,CAAlC;AACA,WAAKE,MAAL,GAAc,KAAd;AACD;;AAED,QAAIF,mBAAmB,CAAnB,IAAwBD,yBAAyB,IAArD,EAA2D;AACzD,UAAMY,OAAOC,SAASC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAb;AACAF,WAAKG,KAAL,CAAWC,QAAX,GAAsBhB,wBAAwB,EAA9C;AACAA,6BAAuB,IAAvB;AACD;AACF,G;;8BAEDiB,M,qBAAS;AACP,WAAO,IAAP;AACD,G;;;4BA1DMC,S,GAAY;AACjBZ,QAAM,oBAAUa,IAAV,CAAeC;AADJ,C;kBA6DNlB,iB","file":"AutoLockScrolling.js","sourcesContent":["import {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nlet originalBodyOverflow = null;\nlet lockingCounter = 0;\n\nclass AutoLockScrolling extends Component {\n  static propTypes = {\n    lock: PropTypes.bool.isRequired,\n  };\n\n  componentDidMount() {\n    if (this.props.lock === true) {\n      this.preventScrolling();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.lock !== nextProps.lock) {\n      if (nextProps.lock) {\n        this.preventScrolling();\n      } else {\n        this.allowScrolling();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.allowScrolling();\n  }\n\n  // force to only lock/unlock once\n  locked = false;\n\n  preventScrolling() {\n    if (this.locked === true) {\n      return;\n    }\n\n    lockingCounter = lockingCounter + 1;\n    this.locked = true;\n\n    // only lock the first time the component is mounted.\n    if (lockingCounter === 1) {\n      const body = document.getElementsByTagName('body')[0];\n      originalBodyOverflow = body.style.overflow;\n      body.style.overflow = 'hidden';\n    }\n  }\n\n  allowScrolling() {\n    if (this.locked === true) {\n      lockingCounter = lockingCounter - 1;\n      this.locked = false;\n    }\n\n    if (lockingCounter === 0 && originalBodyOverflow !== null) {\n      const body = document.getElementsByTagName('body')[0];\n      body.style.overflow = originalBodyOverflow || '';\n      originalBodyOverflow = null;\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default AutoLockScrolling;\n"]}