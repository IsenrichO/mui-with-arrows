{"version":3,"sources":["../../src/internal/ScaleIn.js"],"names":["ScaleIn","render","props","children","childStyle","enterDelay","maxScale","minScale","style","other","prepareStyles","context","muiTheme","mergedRootStyles","position","overflow","height","newChildren","Children","map","child","key","propTypes","object","node","number","defaultProps","contextTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,O;;;;;;;;oBAqBJC,M,qBAAS;AAAA,iBASH,KAAKC,KATF;AAAA,QAELC,QAFK,UAELA,QAFK;AAAA,QAGLC,UAHK,UAGLA,UAHK;AAAA,QAILC,UAJK,UAILA,UAJK;AAAA,QAKLC,QALK,UAKLA,QALK;AAAA,QAMLC,QANK,UAMLA,QANK;AAAA,QAOLC,KAPK,UAOLA,KAPK;AAAA,QAQFC,KARE;AAAA,QAWAC,aAXA,GAWiB,KAAKC,OAAL,CAAaC,QAX9B,CAWAF,aAXA;;;AAaP,QAAMG,mBAAmB,sBAAc,EAAd,EAAkB;AACzCC,gBAAU,UAD+B;AAEzCC,gBAAU,QAF+B;AAGzCC,cAAQ;AAHiC,KAAlB,EAItBR,KAJsB,CAAzB;;AAMA,QAAMS,cAAc,gBAAMC,QAAN,CAAeC,GAAf,CAAmBhB,QAAnB,EAA6B,UAACiB,KAAD,EAAW;AAC1D,aACE;AAAA;AAAA;AACE,eAAKA,MAAMC,GADb;AAEE,sBAAYhB,UAFd;AAGE,oBAAUC,QAHZ;AAIE,oBAAUC,QAJZ;AAKE,iBAAOH;AALT;AAOGgB;AAPH,OADF;AAWD,KAZmB,CAApB;;AAcA,WACE;AAAA;AAAA,iCACMX,KADN;AAEE,eAAOC,cAAcG,gBAAd,CAFT;AAGE,mBAAU;AAHZ;AAKGI;AALH,KADF;AASD,G;;;4BA9DMK,S,GAAY;AACjBlB,cAAY,oBAAUmB,MADL;AAEjBpB,YAAU,oBAAUqB,IAFH;AAGjBnB,cAAY,oBAAUoB,MAHL;AAIjBnB,YAAU,oBAAUmB,MAJH;AAKjBlB,YAAU,oBAAUkB,MALH;AAMjB;;;AAGAjB,SAAO,oBAAUe;AATA,C,SAYZG,Y,GAAe;AACpBrB,cAAY;AADQ,C,SAIfsB,Y,GAAe;AACpBf,YAAU,oBAAUW,MAAV,CAAiBK;AADP,C;kBAiDT5B,O","file":"ScaleIn.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTransitionGroup from 'react-transition-group/TransitionGroup';\nimport ScaleInChild from './ScaleInChild';\n\nclass ScaleIn extends Component {\n  static propTypes = {\n    childStyle: PropTypes.object,\n    children: PropTypes.node,\n    enterDelay: PropTypes.number,\n    maxScale: PropTypes.number,\n    minScale: PropTypes.number,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    enterDelay: 0,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {\n      children,\n      childStyle,\n      enterDelay,\n      maxScale,\n      minScale,\n      style,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n\n    const mergedRootStyles = Object.assign({}, {\n      position: 'relative',\n      overflow: 'hidden',\n      height: '100%',\n    }, style);\n\n    const newChildren = React.Children.map(children, (child) => {\n      return (\n        <ScaleInChild\n          key={child.key}\n          enterDelay={enterDelay}\n          maxScale={maxScale}\n          minScale={minScale}\n          style={childStyle}\n        >\n          {child}\n        </ScaleInChild>\n      );\n    });\n\n    return (\n      <ReactTransitionGroup\n        {...other}\n        style={prepareStyles(mergedRootStyles)}\n        component=\"div\"\n      >\n        {newChildren}\n      </ReactTransitionGroup>\n    );\n  }\n}\n\nexport default ScaleIn;\n"]}