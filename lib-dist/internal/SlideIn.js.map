{"version":3,"sources":["../../src/internal/SlideIn.js"],"names":["SlideIn","getLeaveDirection","props","direction","render","enterDelay","children","childStyle","style","other","prepareStyles","context","muiTheme","mergedRootStyles","position","overflow","height","newChildren","Children","map","child","key","propTypes","object","node","oneOf","number","defaultProps","contextTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,O;;;;;;;;;;;;0JAkBJC,iB,GAAoB,YAAM;AACxB,aAAO,MAAKC,KAAL,CAAWC,SAAlB;AACD,K;;;oBAEDC,M,qBAAS;AAAA;;AAAA,iBAQH,KAAKF,KARF;AAAA,QAELG,UAFK,UAELA,UAFK;AAAA,QAGLC,QAHK,UAGLA,QAHK;AAAA,QAILC,UAJK,UAILA,UAJK;AAAA,QAKLJ,SALK,UAKLA,SALK;AAAA,QAMLK,KANK,UAMLA,KANK;AAAA,QAOFC,KAPE;AAAA,QAUAC,aAVA,GAUiB,KAAKC,OAAL,CAAaC,QAV9B,CAUAF,aAVA;;;AAYP,QAAMG,mBAAmB,sBAAc,EAAd,EAAkB;AACzCC,gBAAU,UAD+B;AAEzCC,gBAAU,QAF+B;AAGzCC,cAAQ;AAHiC,KAAlB,EAItBR,KAJsB,CAAzB;;AAMA,QAAMS,cAAc,gBAAMC,QAAN,CAAeC,GAAf,CAAmBb,QAAnB,EAA6B,UAACc,KAAD,EAAW;AAC1D,aACE;AAAA;AAAA;AACE,eAAKA,MAAMC,GADb;AAEE,qBAAWlB,SAFb;AAGE,sBAAYE,UAHd;AAIE,6BAAmB,OAAKJ,iBAJ1B;AAKE,iBAAOM;AALT;AAOGa;AAPH,OADF;AAWD,KAZmB,EAYjB,IAZiB,CAApB;;AAcA,WACE;AAAA;AAAA,iCACMX,KADN;AAEE,eAAOC,cAAcG,gBAAd,CAFT;AAGE,mBAAU;AAHZ;AAKGI;AALH,KADF;AASD,G;;;4BA9DMK,S,GAAY;AACjBf,cAAY,oBAAUgB,MADL;AAEjBjB,YAAU,oBAAUkB,IAFH;AAGjBrB,aAAW,oBAAUsB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,IAAlB,EAAwB,MAAxB,CAAhB,CAHM;AAIjBpB,cAAY,oBAAUqB,MAJL;AAKjBlB,SAAO,oBAAUe;AALA,C,SAQZI,Y,GAAe;AACpBtB,cAAY,CADQ;AAEpBF,aAAW;AAFS,C,SAKfyB,Y,GAAe;AACpBhB,YAAU,oBAAUW,MAAV,CAAiBM;AADP,C;kBAoDT7B,O","file":"SlideIn.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTransitionGroup from 'react-transition-group/TransitionGroup';\nimport SlideInChild from './SlideInChild';\n\nclass SlideIn extends Component {\n  static propTypes = {\n    childStyle: PropTypes.object,\n    children: PropTypes.node,\n    direction: PropTypes.oneOf(['left', 'right', 'up', 'down']),\n    enterDelay: PropTypes.number,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    enterDelay: 0,\n    direction: 'left',\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  getLeaveDirection = () => {\n    return this.props.direction;\n  };\n\n  render() {\n    const {\n      enterDelay,\n      children,\n      childStyle,\n      direction,\n      style,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n\n    const mergedRootStyles = Object.assign({}, {\n      position: 'relative',\n      overflow: 'hidden',\n      height: '100%',\n    }, style);\n\n    const newChildren = React.Children.map(children, (child) => {\n      return (\n        <SlideInChild\n          key={child.key}\n          direction={direction}\n          enterDelay={enterDelay}\n          getLeaveDirection={this.getLeaveDirection}\n          style={childStyle}\n        >\n          {child}\n        </SlideInChild>\n      );\n    }, this);\n\n    return (\n      <ReactTransitionGroup\n        {...other}\n        style={prepareStyles(mergedRootStyles)}\n        component=\"div\"\n      >\n        {newChildren}\n      </ReactTransitionGroup>\n    );\n  }\n}\n\nexport default SlideIn;\n"]}