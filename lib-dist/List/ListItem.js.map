{"version":3,"sources":["../../src/List/ListItem.js"],"names":["getStyles","props","context","state","insetChildren","leftAvatar","leftCheckbox","leftIcon","nestedLevel","rightAvatar","rightIcon","rightIconButton","rightToggle","secondaryText","secondaryTextLines","muiTheme","listItem","textColor","baseTheme","palette","hoverColor","singleAvatar","singleNoAvatar","twoLine","threeLine","isKeyboardFocused","undefined","styles","root","backgroundColor","hovered","rightIconButtonHovered","rightIconButtonKeyboardFocused","color","display","fontSize","lineHeight","position","transition","easeOut","innerDiv","marginLeft","nestedLevelDepth","paddingLeft","paddingRight","paddingBottom","paddingTop","icons","height","width","top","margin","left","right","avatars","label","cursor","primaryText","marginTop","secondaryTextColor","overflow","textOverflow","whiteSpace","WebkitLineClamp","WebkitBoxOrient","ListItem","open","touch","handleKeyboardFocus","event","setState","onKeyboardFocus","handleMouseEnter","onMouseEnter","handleMouseLeave","onMouseLeave","handleNestedListToggle","stopPropagation","onNestedListToggle","handleRightIconButtonKeyboardFocus","iconButton","handleRightIconButtonMouseLeave","handleRightIconButtonMouseEnter","handleRightIconButtonMouseUp","onMouseUp","handleRightIconButtonTouchTap","onTouchTap","handleTouchStart","onTouchStart","handleTouchEnd","onTouchEnd","componentWillMount","initiallyOpen","componentWillReceiveProps","nextProps","disabled","shouldComponentUpdate","nextState","nextContext","applyFocusState","focusState","button","buttonEl","findDOMNode","blur","focus","setKeyboardFocus","createDisabledElement","contentChildren","additionalProps","innerDivStyle","style","mergedDivStyles","prepareStyles","createLabelElement","mergedLabelStyles","createTextElement","data","key","isValidElement","type","cloneElement","pushElement","children","element","baseStyles","push","length","render","autoGenerateNestedIndicator","containerElement","disableKeyboardFocus","nestedItems","nestedListStyle","primaryTogglesNestedList","other","leftIconColor","rightIconColor","hasNestListItems","hasRightElement","needsNestedIndicator","rightIconButtonElement","rightIconButtonHandlers","onMouseDown","primaryTextElement","secondaryTextElement","nestedList","simpleLabel","node","muiName","propTypes","bool","oneOfType","string","object","arrayOf","number","func","oneOf","defaultProps","contextTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0C;AAAA,MAEtCC,aAFsC,GAapCH,KAboC,CAEtCG,aAFsC;AAAA,MAGtCC,UAHsC,GAapCJ,KAboC,CAGtCI,UAHsC;AAAA,MAItCC,YAJsC,GAapCL,KAboC,CAItCK,YAJsC;AAAA,MAKtCC,QALsC,GAapCN,KAboC,CAKtCM,QALsC;AAAA,MAMtCC,WANsC,GAapCP,KAboC,CAMtCO,WANsC;AAAA,MAOtCC,WAPsC,GAapCR,KAboC,CAOtCQ,WAPsC;AAAA,MAQtCC,SARsC,GAapCT,KAboC,CAQtCS,SARsC;AAAA,MAStCC,eATsC,GAapCV,KAboC,CAStCU,eATsC;AAAA,MAUtCC,WAVsC,GAapCX,KAboC,CAUtCW,WAVsC;AAAA,MAWtCC,aAXsC,GAapCZ,KAboC,CAWtCY,aAXsC;AAAA,MAYtCC,kBAZsC,GAapCb,KAboC,CAYtCa,kBAZsC;AAAA,MAejCC,QAfiC,GAerBb,OAfqB,CAejCa,QAfiC;AAAA,MAgBjCC,QAhBiC,GAgBrBD,QAhBqB,CAgBjCC,QAhBiC;;;AAkBxC,MAAMC,YAAYF,SAASG,SAAT,CAAmBC,OAAnB,CAA2BF,SAA7C;AACA,MAAMG,aAAanB,MAAMmB,UAAN,IAAoB,4BAAKH,SAAL,EAAgB,GAAhB,CAAvC;AACA,MAAMI,eAAe,CAACR,aAAD,KAAmBR,cAAcI,WAAjC,CAArB;AACA,MAAMa,iBAAiB,CAACT,aAAD,IAAkB,EAAER,cAAcI,WAAhB,CAAzC;AACA,MAAMc,UAAUV,iBAAiBC,uBAAuB,CAAxD;AACA,MAAMU,YAAYX,iBAAiBC,qBAAqB,CAAxD;;AAEA,MAAMW,oBACJ,CAACxB,MAAMwB,iBAAN,KAA4BC,SAA5B,GAAwCzB,KAAxC,GAAgDE,KAAjD,EAAwDsB,iBAD1D;;AAGA,MAAME,SAAS;AACbC,UAAM;AACJC,uBAAiB,CAACJ,qBAAqBtB,MAAM2B,OAA5B,KACjB,CAAC3B,MAAM4B,sBADU,IAEjB,CAAC5B,MAAM6B,8BAFU,GAEuBZ,UAFvB,GAEoC,IAHjD;AAIJa,aAAOhB,SAJH;AAKJiB,eAAS,OALL;AAMJC,gBAAU,EANN;AAOJC,kBAAY,MAPR;AAQJC,gBAAU,UARN;AASJC,kBAAY,sBAAYC,OAAZ;AATR,KADO;;AAab;AACAC,cAAU;AACRC,kBAAYjC,cAAcQ,SAAS0B,gBAD3B;AAERC,mBAAapC,YAAYF,UAAZ,IAA0BC,YAA1B,IAA0CF,aAA1C,GAA0D,EAA1D,GAA+D,EAFpE;AAGRwC,oBAAclC,aAAaD,WAAb,IAA4BE,eAA5B,GAA8C,EAA9C,GAAmDC,cAAc,EAAd,GAAmB,EAH5E;AAIRiC,qBAAexB,eAAe,EAAf,GAAoB,EAJ3B;AAKRyB,kBAAYxB,kBAAkBE,SAAlB,GAA8B,EAA9B,GAAmC,EALvC;AAMRa,gBAAU;AANF,KAdG;;AAuBbU,WAAO;AACLC,cAAQ,EADH;AAELC,aAAO,EAFF;AAGLf,eAAS,OAHJ;AAILG,gBAAU,UAJL;AAKLa,WAAK3B,UAAU,EAAV,GAAeF,eAAe,CAAf,GAAmB,CALlC;AAML8B,cAAQ;AANH,KAvBM;;AAgCb5C,cAAU;AACR6C,YAAM;AADE,KAhCG;;AAoCb1C,eAAW;AACT2C,aAAO;AADE,KApCE;;AAwCbC,aAAS;AACPjB,gBAAU,UADH;AAEPa,WAAK7B,eAAe,CAAf,GAAmB;AAFjB,KAxCI;;AA6CbkC,WAAO;AACLC,cAAQ;AADH,KA7CM;;AAiDbnD,gBAAY;AACV+C,YAAM;AADI,KAjDC;;AAqDb3C,iBAAa;AACX4C,aAAO;AADI,KArDA;;AAyDb/C,kBAAc;AACZ+B,gBAAU,UADE;AAEZH,eAAS,OAFG;AAGZe,aAAO,EAHK;AAIZC,WAAK3B,UAAU,EAAV,GAAeF,eAAe,EAAf,GAAoB,EAJ5B;AAKZ+B,YAAM;AALM,KAzDD;;AAiEbK,iBAAa,EAjEA;;AAoEb9C,qBAAiB;AACf0B,gBAAU,UADK;AAEfH,eAAS,OAFM;AAGfgB,WAAK3B,UAAU,EAAV,GAAeF,eAAe,CAAf,GAAmB,CAHxB;AAIfgC,aAAO;AAJQ,KApEJ;;AA2EbzC,iBAAa;AACXyB,gBAAU,UADC;AAEXH,eAAS,OAFE;AAGXe,aAAO,EAHI;AAIXC,WAAK3B,UAAU,EAAV,GAAeF,eAAe,EAAf,GAAoB,EAJ7B;AAKXgC,aAAO;AALI,KA3EA;;AAmFbxC,mBAAe;AACbsB,gBAAU,EADG;AAEbC,kBAAYZ,YAAY,MAAZ,GAAqB,MAFpB;AAGbwB,cAAQxB,YAAY,EAAZ,GAAiB,EAHZ;AAIb2B,cAAQ,CAJK;AAKbO,iBAAW,CALE;AAMbzB,aAAOjB,SAAS2C,kBANH;;AAQb;AACAC,gBAAU,QATG;AAUbC,oBAAc,UAVD;AAWbC,kBAAYtC,YAAY,IAAZ,GAAmB,QAXlB;AAYbU,eAASV,YAAY,aAAZ,GAA4B,IAZxB;AAabuC,uBAAiBvC,YAAY,CAAZ,GAAgB,IAbpB;AAcbwC,uBAAiBxC,YAAY,UAAZ,GAAyB;AAd7B;AAnFF,GAAf;;AAqGA,SAAOG,MAAP;AACD;;IAEKsC,Q;;;;;;;;;;;;0JAwLJ9D,K,GAAQ;AACN2B,eAAS,KADH;AAENL,yBAAmB,KAFb;AAGNyC,YAAM,KAHA;AAINnC,8BAAwB,KAJlB;AAKNC,sCAAgC,KAL1B;AAMNmC,aAAO;AAND,K,QAsHRC,mB,GAAsB,UAACC,KAAD,EAAQ5C,iBAAR,EAA8B;AAClD,YAAK6C,QAAL,CAAc,EAAC7C,mBAAmBA,iBAApB,EAAd;AACA,YAAKxB,KAAL,CAAWsE,eAAX,CAA2BF,KAA3B,EAAkC5C,iBAAlC;AACD,K,QAED+C,gB,GAAmB,UAACH,KAAD,EAAW;AAC5B,UAAI,CAAC,MAAKlE,KAAL,CAAWgE,KAAhB,EAAuB,MAAKG,QAAL,CAAc,EAACxC,SAAS,IAAV,EAAd;AACvB,YAAK7B,KAAL,CAAWwE,YAAX,CAAwBJ,KAAxB;AACD,K,QAEDK,gB,GAAmB,UAACL,KAAD,EAAW;AAC5B,YAAKC,QAAL,CAAc,EAACxC,SAAS,KAAV,EAAd;AACA,YAAK7B,KAAL,CAAW0E,YAAX,CAAwBN,KAAxB;AACD,K,QAEDO,sB,GAAyB,UAACP,KAAD,EAAW;AAClCA,YAAMQ,eAAN;;AAEA,UAAI,MAAK5E,KAAL,CAAWiE,IAAX,KAAoB,IAAxB,EAA8B;AAC5B,cAAKI,QAAL,CAAc,EAACJ,MAAM,CAAC,MAAK/D,KAAL,CAAW+D,IAAnB,EAAd,EAAwC,YAAM;AAC5C,gBAAKjE,KAAL,CAAW6E,kBAAX;AACD,SAFD;AAGD,OAJD,MAIO;AACL;AACA;AACA,cAAK7E,KAAL,CAAW6E,kBAAX;AAEE3E,iBAAO;AACL+D,kBAAM,CAAC,MAAK/D,KAAL,CAAW+D;AADb;AAFT;AAMD;AACF,K,QAEDa,kC,GAAqC,UAACV,KAAD,EAAQ5C,iBAAR,EAA8B;AACjE,UAAIA,iBAAJ,EAAuB;AACrB,cAAK6C,QAAL,CAAc;AACZ7C,6BAAmB,KADP;AAEZO,0CAAgCP;AAFpB,SAAd;AAID;;AAED,UAAMuD,aAAa,MAAK/E,KAAL,CAAWU,eAA9B;;AAEA,UAAIqE,cAAcA,WAAW/E,KAAX,CAAiBsE,eAAnC,EAAoDS,WAAW/E,KAAX,CAAiBsE,eAAjB,CAAiCF,KAAjC,EAAwC5C,iBAAxC;AACrD,K,QAEDwD,+B,GAAkC,UAACZ,KAAD,EAAW;AAC3C,UAAMW,aAAa,MAAK/E,KAAL,CAAWU,eAA9B;AACA,YAAK2D,QAAL,CAAc,EAACvC,wBAAwB,KAAzB,EAAd;AACA,UAAIiD,cAAcA,WAAW/E,KAAX,CAAiB0E,YAAnC,EAAiDK,WAAW/E,KAAX,CAAiB0E,YAAjB,CAA8BN,KAA9B;AAClD,K,QAEDa,+B,GAAkC,UAACb,KAAD,EAAW;AAC3C,UAAMW,aAAa,MAAK/E,KAAL,CAAWU,eAA9B;AACA,YAAK2D,QAAL,CAAc,EAACvC,wBAAwB,IAAzB,EAAd;AACA,UAAIiD,cAAcA,WAAW/E,KAAX,CAAiBwE,YAAnC,EAAiDO,WAAW/E,KAAX,CAAiBwE,YAAjB,CAA8BJ,KAA9B;AAClD,K,QAEDc,4B,GAA+B,UAACd,KAAD,EAAW;AACxC,UAAMW,aAAa,MAAK/E,KAAL,CAAWU,eAA9B;AACA0D,YAAMQ,eAAN;AACA,UAAIG,cAAcA,WAAW/E,KAAX,CAAiBmF,SAAnC,EAA8CJ,WAAW/E,KAAX,CAAiBmF,SAAjB,CAA2Bf,KAA3B;AAC/C,K,QAEDgB,6B,GAAgC,UAAChB,KAAD,EAAW;AACzC,UAAMW,aAAa,MAAK/E,KAAL,CAAWU,eAA9B;;AAEA;AACA0D,YAAMQ,eAAN;AACA,UAAIG,cAAcA,WAAW/E,KAAX,CAAiBqF,UAAnC,EAA+CN,WAAW/E,KAAX,CAAiBqF,UAAjB,CAA4BjB,KAA5B;AAChD,K,QAEDkB,gB,GAAmB,UAAClB,KAAD,EAAW;AAC5B,YAAKC,QAAL,CAAc,EAACH,OAAO,IAAR,EAAd;AACA,YAAKlE,KAAL,CAAWuF,YAAX,CAAwBnB,KAAxB;AACD,K,QAEDoB,c,GAAiB,UAACpB,KAAD,EAAW;AAC1B,YAAKC,QAAL,CAAc,EAACH,OAAO,IAAR,EAAd;AACA,YAAKlE,KAAL,CAAWyF,UAAX,CAAsBrB,KAAtB;AACD,K;;;qBA9LDsB,kB,iCAAqB;AACnB,SAAKrB,QAAL,CAAc;AACZJ,YAAM,KAAKjE,KAAL,CAAWiE,IAAX,KAAoB,IAApB,GAA2B,KAAKjE,KAAL,CAAW2F,aAAX,KAA6B,IAAxD,GAA+D,KAAK3F,KAAL,CAAWiE;AADpE,KAAd;AAGD,G;;qBAED2B,yB,sCAA0BC,S,EAAW;AACnC;AACA,QAAIA,UAAU5B,IAAV,KAAmB,IAAvB,EACE,KAAKI,QAAL,CAAc,EAACJ,MAAM4B,UAAU5B,IAAjB,EAAd;AACF,QAAI4B,UAAUC,QAAV,IAAsB,KAAK5F,KAAL,CAAW2B,OAArC,EACE,KAAKwC,QAAL,CAAc,EAACxC,SAAS,KAAV,EAAd;AACH,G;;qBAEDkE,qB,kCAAsBF,S,EAAWG,S,EAAWC,W,EAAa;AACvD,WACE,CAAC,4BAAa,KAAKjG,KAAlB,EAAyB6F,SAAzB,CAAD,IACA,CAAC,4BAAa,KAAK3F,KAAlB,EAAyB8F,SAAzB,CADD,IAEA,CAAC,4BAAa,KAAK/F,OAAlB,EAA2BgG,WAA3B,CAHH;AAKD,G;;AAED;;;qBACAC,e,4BAAgBC,U,EAAY;AAC1B,QAAI,KAAKC,MAAT,EAAiB;AACf,UAAMC,WAAW,mBAASC,WAAT,CAAqB,KAAKF,MAA1B,CAAjB;;AAEA,cAAQD,UAAR;AACE,aAAK,MAAL;AACEE,mBAASE,IAAT;AACA;AACF,aAAK,SAAL;AACEF,mBAASG,KAAT;AACA;AACF,aAAK,kBAAL;AACE,eAAKJ,MAAL,CAAYK,gBAAZ;AACAJ,mBAASG,KAAT;AACA;AAVJ;AAYD;AACF,G;;qBAEDE,qB,kCAAsBhF,M,EAAQiF,e,EAAiBC,e,EAAiB;AAAA,iBAI1D,KAAK5G,KAJqD;AAAA,QAE5D6G,aAF4D,UAE5DA,aAF4D;AAAA,QAG5DC,KAH4D,UAG5DA,KAH4D;;;AAM9D,QAAMC,kBAAkB,sBAAc,EAAd,EACtBrF,OAAOC,IADe,EAEtBD,OAAOa,QAFe,EAGtBsE,aAHsB,EAItBC,KAJsB,CAAxB;;AAOA,WACE;AAAA;AAAA,iCACMF,eADN;AAEE,eAAO,KAAK3G,OAAL,CAAaa,QAAb,CAAsBkG,aAAtB,CAAoCD,eAApC;AAFT;AAIGJ;AAJH,KADF;AAQD,G;;qBAEDM,kB,+BAAmBvF,M,EAAQiF,e,EAAiBC,e,EAAiB;AAAA,kBAIvD,KAAK5G,KAJkD;AAAA,QAEzD6G,aAFyD,WAEzDA,aAFyD;AAAA,QAGzDC,KAHyD,WAGzDA,KAHyD;;;AAM3D,QAAMI,oBAAoB,sBAAc,EAAd,EACxBxF,OAAOC,IADiB,EAExBD,OAAOa,QAFiB,EAGxBsE,aAHwB,EAIxBnF,OAAO4B,KAJiB,EAKxBwD,KALwB,CAA1B;;AAQA,WACE;AAAA;AAAA,iCACMF,eADN;AAEE,eAAO,KAAK3G,OAAL,CAAaa,QAAb,CAAsBkG,aAAtB,CAAoCE,iBAApC;AAFT;AAIGP;AAJH,KADF;AAQD,G;;qBAEDQ,iB,8BAAkBzF,M,EAAQ0F,I,EAAMC,G,EAAK;AAAA,QAC5BL,aAD4B,GACX,KAAK/G,OAAL,CAAaa,QADF,CAC5BkG,aAD4B;;AAEnC,QAAI,gBAAMM,cAAN,CAAqBF,IAArB,CAAJ,EAAgC;AAC9B,UAAIN,QAAQ,sBAAc,EAAd,EAAkBpF,MAAlB,EAA0B0F,KAAKpH,KAAL,CAAW8G,KAArC,CAAZ;AACA,UAAI,OAAOM,KAAKG,IAAZ,KAAqB,QAAzB,EAAmC;AAAE;AACnCT,gBAAQE,cAAcF,KAAd,CAAR;AACD;AACD,aAAO,gBAAMU,YAAN,CAAmBJ,IAAnB,EAAyB;AAC9BC,aAAKA,GADyB;AAE9BP,eAAOA;AAFuB,OAAzB,CAAP;AAID;;AAED,WACE;AAAA;AAAA,QAAK,KAAKO,GAAV,EAAe,OAAOL,cAActF,MAAd,CAAtB;AACG0F;AADH,KADF;AAKD,G;;qBAqFDK,W,wBAAYC,Q,EAAUC,O,EAASC,U,EAAYhB,e,EAAiB;AAC1D,QAAIe,OAAJ,EAAa;AACX,UAAMjG,SAAS,sBAAc,EAAd,EAAkBkG,UAAlB,EAA8BD,QAAQ3H,KAAR,CAAc8G,KAA5C,CAAf;AACAY,eAASG,IAAT,CACE,gBAAML,YAAN,CAAmBG,OAAnB;AACEN,aAAKK,SAASI,MADhB;AAEEhB,eAAOpF;AAFT,SAGKkF,eAHL,EADF;AAOD;AACF,G;;qBAEDmB,M,qBAAS;AAAA;;AAAA,kBAkCH,KAAK/H,KAlCF;AAAA,QAELgI,2BAFK,WAELA,2BAFK;AAAA,QAGLN,QAHK,WAGLA,QAHK;AAAA,QAILO,gBAJK,WAILA,gBAJK;AAAA,QAKLnC,QALK,WAKLA,QALK;AAAA,QAMLoC,oBANK,WAMLA,oBANK;AAAA,QAOL/G,UAPK,WAOLA,UAPK;AAAA,QAQLwE,aARK,WAQLA,aARK;AAAA,QASLkB,aATK,WASLA,aATK;AAAA,QAUL1G,aAVK,WAULA,aAVK;AAAA,QAWLC,UAXK,WAWLA,UAXK;AAAA,QAYLC,YAZK,WAYLA,YAZK;AAAA,QAaLC,QAbK,WAaLA,QAbK;AAAA,QAcL6H,WAdK,WAcLA,WAdK;AAAA,QAeL5H,WAfK,WAeLA,WAfK;AAAA,QAgBL6H,eAhBK,WAgBLA,eAhBK;AAAA,QAiBL9D,eAjBK,WAiBLA,eAjBK;AAAA,QAkBL9C,iBAlBK,WAkBLA,iBAlBK;AAAA,QAmBLgD,YAnBK,WAmBLA,YAnBK;AAAA,QAoBLE,YApBK,WAoBLA,YApBK;AAAA,QAqBLG,kBArBK,WAqBLA,kBArBK;AAAA,QAsBLU,YAtBK,WAsBLA,YAtBK;AAAA,QAuBLF,UAvBK,WAuBLA,UAvBK;AAAA,QAwBL7E,WAxBK,WAwBLA,WAxBK;AAAA,QAyBLC,SAzBK,WAyBLA,SAzBK;AAAA,QA0BLC,eA1BK,WA0BLA,eA1BK;AAAA,QA2BLC,WA3BK,WA2BLA,WA3BK;AAAA,QA4BL6C,WA5BK,WA4BLA,WA5BK;AAAA,QA6BL6E,wBA7BK,WA6BLA,wBA7BK;AAAA,QA8BLzH,aA9BK,WA8BLA,aA9BK;AAAA,QA+BLC,kBA/BK,WA+BLA,kBA/BK;AAAA,QAgCLiG,KAhCK,WAgCLA,KAhCK;AAAA,QAiCFwB,KAjCE;AAAA,QAoCAtB,aApCA,GAoCiB,KAAK/G,OAAL,CAAaa,QApC9B,CAoCAkG,aApCA;;AAqCP,QAAMtF,SAAS3B,UAAU,KAAKC,KAAf,EAAsB,KAAKC,OAA3B,EAAoC,KAAKC,KAAzC,CAAf;AACA,QAAMyG,kBAAkB,CAACe,QAAD,CAAxB;;AAEA,QAAIpH,QAAJ,EAAc;AACZ,UAAMsG,kBAAkB;AACtB5E,eAAO1B,SAASN,KAAT,CAAegC,KAAf,IAAwB,KAAK/B,OAAL,CAAaa,QAAb,CAAsBC,QAAtB,CAA+BwH;AADxC,OAAxB;AAGA,WAAKd,WAAL,CACEd,eADF,EAEErG,QAFF,EAGE,sBAAc,EAAd,EAAkBoB,OAAOoB,KAAzB,EAAgCpB,OAAOpB,QAAvC,CAHF,EAIEsG,eAJF;AAMD;;AAED,QAAInG,SAAJ,EAAe;AACb,UAAMmG,mBAAkB;AACtB5E,eAAOvB,UAAUT,KAAV,CAAgBgC,KAAhB,IAAyB,KAAK/B,OAAL,CAAaa,QAAb,CAAsBC,QAAtB,CAA+ByH;AADzC,OAAxB;AAGA,WAAKf,WAAL,CACEd,eADF,EAEElG,SAFF,EAGE,sBAAc,EAAd,EAAkBiB,OAAOoB,KAAzB,EAAgCpB,OAAOjB,SAAvC,CAHF,EAIEmG,gBAJF;AAMD;;AAED,QAAIxG,UAAJ,EAAgB;AACd,WAAKqH,WAAL,CACEd,eADF,EAEEvG,UAFF,EAGE,sBAAc,EAAd,EAAkBsB,OAAO2B,OAAzB,EAAkC3B,OAAOtB,UAAzC,CAHF;AAKD;;AAED,QAAII,WAAJ,EAAiB;AACf,WAAKiH,WAAL,CACEd,eADF,EAEEnG,WAFF,EAGE,sBAAc,EAAd,EAAkBkB,OAAO2B,OAAzB,EAAkC3B,OAAOlB,WAAzC,CAHF;AAKD;;AAED,QAAIH,YAAJ,EAAkB;AAChB,WAAKoH,WAAL,CACEd,eADF,EAEEtG,YAFF,EAGE,sBAAc,EAAd,EAAkBqB,OAAOrB,YAAzB,CAHF;AAKD;;AAED;AACA,QAAMoI,mBAAmBN,YAAYL,MAArC;AACA,QAAMY,kBAAkBlI,eAAeC,SAAf,IAA4BC,eAA5B,IAA+CC,WAAvE;AACA,QAAMgI,uBAAuBF,oBAAoBT,2BAApB,IAAmD,CAACU,eAAjF;;AAEA,QAAIhI,mBAAmBiI,oBAAvB,EAA6C;AAC3C,UAAIC,yBAAyBlI,eAA7B;AACA,UAAMmI,0BAA0B;AAC9BvE,yBAAiB,KAAKQ,kCADQ;AAE9BN,sBAAc,KAAKS,+BAFW;AAG9BP,sBAAc,KAAKM,+BAHW;AAI9BK,oBAAY,KAAKD,6BAJa;AAK9B0D,qBAAa,KAAK5D,4BALY;AAM9BC,mBAAW,KAAKD;AANc,OAAhC;;AASA;AACA,UAAIyD,oBAAJ,EAA0B;AACxBC,iCAAyB,KAAK1I,KAAL,CAAW+D,IAAX,GACvB;AAAA;AAAA;AAAY;AAAZ,SADuB,GAEvB;AAAA;AAAA;AAAY;AAAZ,SAFF;AAGA4E,gCAAwBxD,UAAxB,GAAqC,KAAKV,sBAA1C;AACD;;AAED,WAAK8C,WAAL,CACEd,eADF,EAEEiC,sBAFF,EAGE,sBAAc,EAAd,EAAkBlH,OAAOhB,eAAzB,CAHF,EAIEmI,uBAJF;AAMD;;AAED,QAAIlI,WAAJ,EAAiB;AACf,WAAK8G,WAAL,CACEd,eADF,EAEEhG,WAFF,EAGE,sBAAc,EAAd,EAAkBe,OAAOf,WAAzB,CAHF;AAKD;;AAED,QAAI6C,WAAJ,EAAiB;AACf,UAAMuF,qBAAqB,KAAK5B,iBAAL,CACzBzF,OAAO8B,WADkB,EAEzBA,WAFyB,EAGzB,aAHyB,CAA3B;AAKAmD,sBAAgBkB,IAAhB,CAAqBkB,kBAArB;AACD;;AAED,QAAInI,aAAJ,EAAmB;AACjB,UAAMoI,uBAAuB,KAAK7B,iBAAL,CAC3BzF,OAAOd,aADoB,EAE3BA,aAF2B,EAG3B,eAH2B,CAA7B;AAKA+F,sBAAgBkB,IAAhB,CAAqBmB,oBAArB;AACD;;AAED,QAAMC,aAAad,YAAYL,MAAZ,GACjB;AAAA;AAAA,QAAY,aAAavH,WAAzB,EAAsC,MAAM,KAAKL,KAAL,CAAW+D,IAAvD,EAA6D,OAAOmE,eAApE;AACGD;AADH,KADiB,GAIf1G,SAJJ;;AAMA,QAAMyH,cAAc,CAACb,wBAAD,KAA8BhI,gBAAgBM,WAA9C,CAApB;;AAEA,WACE;AAAA;AAAA;AAEIuI,oBAAc,KAAKjC,kBAAL,CAAwBvF,MAAxB,EAAgCiF,eAAhC,EAAiD2B,KAAjD,CAAd,GACAxC,WAAW,KAAKY,qBAAL,CAA2BhF,MAA3B,EAAmCiF,eAAnC,EAAoD2B,KAApD,CAAX,GACE;AAAA;AAAA;AACE,4BAAkBL;AADpB,WAEMK,KAFN;AAGE,gCAAsBJ,wBAAwB,KAAKhI,KAAL,CAAW6B,8BAH3D;AAIE,2BAAiB,KAAKoC,mBAJxB;AAKE,wBAAc,KAAKM,gBALrB;AAME,wBAAc,KAAKF,gBANrB;AAOE,wBAAc,KAAKe,gBAPrB;AAQE,sBAAY,KAAKE,cARnB;AASE,sBAAY6C,2BAA2B,KAAK1D,sBAAhC,GAAyDU,UATvE;AAUE,eAAK,aAAC8D,IAAD;AAAA,mBAAU,OAAK/C,MAAL,GAAc+C,IAAxB;AAAA,WAVP;AAWE,iBAAO,sBAAc,EAAd,EAAkBzH,OAAOC,IAAzB,EAA+BmF,KAA/B;AAXT;AAaE;AAAA;AAAA,YAAK,OAAOE,cAAc,sBAActF,OAAOa,QAArB,EAA+BsE,aAA/B,CAAd,CAAZ;AACGF;AADH;AAbF,OAJN;AAuBGsC;AAvBH,KADF;AA2BD,G;;;4BAlkBMG,O,GAAU,U,SAEVC,S,GAAY;AACjB;;;;;;AAMArB,+BAA6B,oBAAUsB,IAPtB;AAQjB;;;AAGA5B,YAAU,oBAAUyB,IAXH;AAYjB;;;;;;;AAOAlB,oBAAkB,oBAAUsB,SAAV,CAAoB,CACpC,oBAAUC,MAD0B,EAEpC,oBAAU7B,OAF0B,CAApB,CAnBD;AAuBjB;;;AAGAO,wBAAsB,oBAAUoB,IA1Bf;AA2BjB;;;;;;AAMAxD,YAAU,oBAAUwD,IAjCH;AAkCjB;;;AAGAnI,cAAY,oBAAUqI,MArCL;AAsCjB;;;AAGA7D,iBAAe,oBAAU2D,IAzCR;AA0CjB;;;AAGAzC,iBAAe,oBAAU4C,MA7CR;AA8CjB;;;;AAIAtJ,iBAAe,oBAAUmJ,IAlDR;AAmDjB;;;;;;;AAOA9H,qBAAmB,oBAAU8H,IA1DZ;AA2DjB;;;AAGAlJ,cAAY,oBAAUuH,OA9DL;AA+DjB;;;AAGAtH,gBAAc,oBAAUsH,OAlEP;AAmEjB;;;AAGArH,YAAU,oBAAUqH,OAtEH;AAuEjB;;;AAGAQ,eAAa,oBAAUuB,OAAV,CAAkB,oBAAU/B,OAA5B,CA1EI;AA2EjB;;;;AAIApH,eAAa,oBAAUoJ,MA/EN;AAgFjB;;;AAGAvB,mBAAiB,oBAAUqB,MAnFV;AAoFjB;;;;;;AAMAnF,mBAAiB,oBAAUsF,IA1FV;AA2FjB;AACApF,gBAAc,oBAAUoF,IA5FP;AA6FjB;AACAlF,gBAAc,oBAAUkF,IA9FP;AA+FjB;;;;;AAKA/E,sBAAoB,oBAAU+E,IApGb;AAqGjB;AACAnE,cAAY,oBAAUmE,IAtGL;AAuGjB;AACArE,gBAAc,oBAAUqE,IAxGP;AAyGjB;AACAvE,cAAY,oBAAUuE,IA1GL;AA2GjB;;;AAGA3F,QAAM,oBAAUqF,IA9GC;AA+GjB;;;;AAIA9F,eAAa,oBAAU2F,IAnHN;AAoHjB;;;;AAIAd,4BAA0B,oBAAUiB,IAxHnB;AAyHjB;;;AAGA9I,eAAa,oBAAUmH,OA5HN;AA6HjB;;;AAGAlH,aAAW,oBAAUkH,OAhIJ;AAiIjB;;;;;;;AAOAjH,mBAAiB,oBAAUiH,OAxIV;AAyIjB;;;AAGAhH,eAAa,oBAAUgH,OA5IN;AA6IjB;;;;AAIA/G,iBAAe,oBAAUuI,IAjJR;AAkJjB;;;;AAIAtI,sBAAoB,oBAAUgJ,KAAV,CAAgB,CAAC,CAAD,EAAI,CAAJ,CAAhB,CAtJH;AAuJjB;;;AAGA/C,SAAO,oBAAU2C;AA1JA,C,SA6JZK,Y,GAAe;AACpB9B,+BAA6B,IADT;AAEpBC,oBAAkB,MAFE;AAGpBC,wBAAsB,KAHF;AAIpBpC,YAAU,KAJU;AAKpBH,iBAAe,KALK;AAMpBxF,iBAAe,KANK;AAOpBgI,eAAa,EAPO;AAQpB5H,eAAa,CARO;AASpB+D,mBAAiB,2BAAM,CAAE,CATL;AAUpBE,gBAAc,wBAAM,CAAE,CAVF;AAWpBE,gBAAc,wBAAM,CAAE,CAXF;AAYpBG,sBAAoB,8BAAM,CAAE,CAZR;AAapBY,cAAY,sBAAM,CAAE,CAbA;AAcpBF,gBAAc,wBAAM,CAAE,CAdF;AAepBtB,QAAM,IAfc;AAgBpBoE,4BAA0B,KAhBN;AAiBpBxH,sBAAoB;AAjBA,C,SAoBfkJ,Y,GAAe;AACpBjJ,YAAU,oBAAU2I,MAAV,CAAiBO;AADP,C;kBAkZThG,Q","file":"ListItem.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport shallowEqual from 'recompose/shallowEqual';\nimport {fade} from '../utils/colorManipulator';\nimport transitions from '../styles/transitions';\nimport EnhancedButton from '../internal/EnhancedButton';\nimport IconButton from '../IconButton';\nimport OpenIcon from '../svg-icons/navigation/expand-less';\nimport CloseIcon from '../svg-icons/navigation/expand-more';\nimport NestedList from './NestedList';\n\nfunction getStyles(props, context, state) {\n  const {\n    insetChildren,\n    leftAvatar,\n    leftCheckbox,\n    leftIcon,\n    nestedLevel,\n    rightAvatar,\n    rightIcon,\n    rightIconButton,\n    rightToggle,\n    secondaryText,\n    secondaryTextLines,\n  } = props;\n\n  const {muiTheme} = context;\n  const {listItem} = muiTheme;\n\n  const textColor = muiTheme.baseTheme.palette.textColor;\n  const hoverColor = props.hoverColor || fade(textColor, 0.1);\n  const singleAvatar = !secondaryText && (leftAvatar || rightAvatar);\n  const singleNoAvatar = !secondaryText && !(leftAvatar || rightAvatar);\n  const twoLine = secondaryText && secondaryTextLines === 1;\n  const threeLine = secondaryText && secondaryTextLines > 1;\n\n  const isKeyboardFocused =\n    (props.isKeyboardFocused !== undefined ? props : state).isKeyboardFocused;\n\n  const styles = {\n    root: {\n      backgroundColor: (isKeyboardFocused || state.hovered) &&\n      !state.rightIconButtonHovered &&\n      !state.rightIconButtonKeyboardFocused ? hoverColor : null,\n      color: textColor,\n      display: 'block',\n      fontSize: 16,\n      lineHeight: '16px',\n      position: 'relative',\n      transition: transitions.easeOut(),\n    },\n\n    // This inner div is needed so that ripples will span the entire container\n    innerDiv: {\n      marginLeft: nestedLevel * listItem.nestedLevelDepth,\n      paddingLeft: leftIcon || leftAvatar || leftCheckbox || insetChildren ? 72 : 16,\n      paddingRight: rightIcon || rightAvatar || rightIconButton ? 56 : rightToggle ? 72 : 16,\n      paddingBottom: singleAvatar ? 20 : 16,\n      paddingTop: singleNoAvatar || threeLine ? 16 : 20,\n      position: 'relative',\n    },\n\n    icons: {\n      height: 24,\n      width: 24,\n      display: 'block',\n      position: 'absolute',\n      top: twoLine ? 12 : singleAvatar ? 4 : 0,\n      margin: 12,\n    },\n\n    leftIcon: {\n      left: 4,\n    },\n\n    rightIcon: {\n      right: 4,\n    },\n\n    avatars: {\n      position: 'absolute',\n      top: singleAvatar ? 8 : 16,\n    },\n\n    label: {\n      cursor: 'pointer',\n    },\n\n    leftAvatar: {\n      left: 16,\n    },\n\n    rightAvatar: {\n      right: 16,\n    },\n\n    leftCheckbox: {\n      position: 'absolute',\n      display: 'block',\n      width: 24,\n      top: twoLine ? 24 : singleAvatar ? 16 : 12,\n      left: 16,\n    },\n\n    primaryText: {\n    },\n\n    rightIconButton: {\n      position: 'absolute',\n      display: 'block',\n      top: twoLine ? 12 : singleAvatar ? 4 : 0,\n      right: 4,\n    },\n\n    rightToggle: {\n      position: 'absolute',\n      display: 'block',\n      width: 54,\n      top: twoLine ? 25 : singleAvatar ? 17 : 13,\n      right: 8,\n    },\n\n    secondaryText: {\n      fontSize: 14,\n      lineHeight: threeLine ? '18px' : '16px',\n      height: threeLine ? 36 : 16,\n      margin: 0,\n      marginTop: 4,\n      color: listItem.secondaryTextColor,\n\n      // needed for 2 and 3 line ellipsis\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: threeLine ? null : 'nowrap',\n      display: threeLine ? '-webkit-box' : null,\n      WebkitLineClamp: threeLine ? 2 : null,\n      WebkitBoxOrient: threeLine ? 'vertical' : null,\n    },\n  };\n\n  return styles;\n}\n\nclass ListItem extends Component {\n  static muiName = 'ListItem';\n\n  static propTypes = {\n    /**\n     * If true, generate a nested-list-indicator icon when nested list\n     * items are detected. Note that an indicator will not be created\n     * if a `rightIcon` or `rightIconButton` has been provided to\n     * the element.\n     */\n    autoGenerateNestedIndicator: PropTypes.bool,\n    /**\n     * Children passed into the `ListItem`.\n     */\n    children: PropTypes.node,\n    /**\n     * The element to use as the container for the ListItem. Either a string to\n     * use a DOM element or a ReactElement. This is useful for wrapping the\n     * ListItem in a custom Link component. If a ReactElement is given, ensure\n     * that it passes all of its given props through to the underlying DOM\n     * element and renders its children prop for proper integration.\n     */\n    containerElement: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n    ]),\n    /**\n     * If true, the element will not be able to be focused by the keyboard.\n     */\n    disableKeyboardFocus: PropTypes.bool,\n    /**\n     * If true, the element will not be clickable\n     * and will not display hover effects.\n     * This is automatically disabled if either `leftCheckbox`\n     * or `rightToggle` is set.\n     */\n    disabled: PropTypes.bool,\n    /**\n    * Override the hover background color.\n    */\n    hoverColor: PropTypes.string,\n    /**\n     * If true, the nested `ListItem`s are initially displayed.\n     */\n    initiallyOpen: PropTypes.bool,\n    /**\n     * Override the inline-styles of the inner div element.\n     */\n    innerDivStyle: PropTypes.object,\n    /**\n     * If true, the children will be indented by 72px.\n     * This is useful if there is no left avatar or left icon.\n     */\n    insetChildren: PropTypes.bool,\n    /**\n     * Use to control if the list item should render as keyboard focused.  If\n     * undefined (default), this will be automatically managed.  If provided,\n     * it will change the components style.  Note that this will not change the\n     * actual focus - and should only be used when you want to simulate\n     * keyboard focus (eg. in a rich text input autocomplete).\n     */\n    isKeyboardFocused: PropTypes.bool,\n    /**\n     * This is the `Avatar` element to be displayed on the left side.\n     */\n    leftAvatar: PropTypes.element,\n    /**\n     * This is the `Checkbox` element to be displayed on the left side.\n     */\n    leftCheckbox: PropTypes.element,\n    /**\n     * This is the `SvgIcon` or `FontIcon` to be displayed on the left side.\n     */\n    leftIcon: PropTypes.element,\n    /**\n     * An array of `ListItem`s to nest underneath the current `ListItem`.\n     */\n    nestedItems: PropTypes.arrayOf(PropTypes.element),\n    /**\n     * Controls how deep a `ListItem` appears.\n     * This property is automatically managed, so modify at your own risk.\n     */\n    nestedLevel: PropTypes.number,\n    /**\n     * Override the inline-styles of the nested items' `NestedList`.\n     */\n    nestedListStyle: PropTypes.object,\n    /**\n     * Callback function fired when the `ListItem` is focused or blurred by the keyboard.\n     *\n     * @param {object} event `focus` or `blur` event targeting the `ListItem`.\n     * @param {boolean} isKeyboardFocused If true, the `ListItem` is focused.\n     */\n    onKeyboardFocus: PropTypes.func,\n    /** @ignore */\n    onMouseEnter: PropTypes.func,\n    /** @ignore */\n    onMouseLeave: PropTypes.func,\n    /**\n     * Callbak function fired when the `ListItem` toggles its nested list.\n     *\n     * @param {object} listItem The `ListItem`.\n     */\n    onNestedListToggle: PropTypes.func,\n    /** @ignore */\n    onTouchEnd: PropTypes.func,\n    /** @ignore */\n    onTouchStart: PropTypes.func,\n    /** @ignore */\n    onTouchTap: PropTypes.func,\n    /**\n     * Control toggle state of nested list.\n     */\n    open: PropTypes.bool,\n    /**\n     * This is the block element that contains the primary text.\n     * If a string is passed in, a div tag will be rendered.\n     */\n    primaryText: PropTypes.node,\n    /**\n     * If true, clicking or tapping the primary text of the `ListItem`\n     * toggles the nested list.\n     */\n    primaryTogglesNestedList: PropTypes.bool,\n    /**\n     * This is the `Avatar` element to be displayed on the right side.\n     */\n    rightAvatar: PropTypes.element,\n    /**\n     * This is the `SvgIcon` or `FontIcon` to be displayed on the right side.\n     */\n    rightIcon: PropTypes.element,\n    /**\n     * This is the `IconButton` to be displayed on the right side.\n     * Hovering over this button will remove the `ListItem` hover.\n     * Also, clicking on this button will not trigger a\n     * ripple on the `ListItem`; the event will be stopped and prevented\n     * from bubbling up to cause a `ListItem` click.\n     */\n    rightIconButton: PropTypes.element,\n    /**\n     * This is the `Toggle` element to display on the right side.\n     */\n    rightToggle: PropTypes.element,\n    /**\n     * This is the block element that contains the secondary text.\n     * If a string is passed in, a div tag will be rendered.\n     */\n    secondaryText: PropTypes.node,\n    /**\n     * Can be 1 or 2. This is the number of secondary\n     * text lines before ellipsis will show.\n     */\n    secondaryTextLines: PropTypes.oneOf([1, 2]),\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    autoGenerateNestedIndicator: true,\n    containerElement: 'span',\n    disableKeyboardFocus: false,\n    disabled: false,\n    initiallyOpen: false,\n    insetChildren: false,\n    nestedItems: [],\n    nestedLevel: 0,\n    onKeyboardFocus: () => {},\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onNestedListToggle: () => {},\n    onTouchEnd: () => {},\n    onTouchStart: () => {},\n    open: null,\n    primaryTogglesNestedList: false,\n    secondaryTextLines: 1,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    hovered: false,\n    isKeyboardFocused: false,\n    open: false,\n    rightIconButtonHovered: false,\n    rightIconButtonKeyboardFocused: false,\n    touch: false,\n  };\n\n  componentWillMount() {\n    this.setState({\n      open: this.props.open === null ? this.props.initiallyOpen === true : this.props.open,\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // update the state when the component is controlled.\n    if (nextProps.open !== null)\n      this.setState({open: nextProps.open});\n    if (nextProps.disabled && this.state.hovered)\n      this.setState({hovered: false});\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return (\n      !shallowEqual(this.props, nextProps) ||\n      !shallowEqual(this.state, nextState) ||\n      !shallowEqual(this.context, nextContext)\n    );\n  }\n\n  // This method is needed by the `MenuItem` component.\n  applyFocusState(focusState) {\n    if (this.button) {\n      const buttonEl = ReactDOM.findDOMNode(this.button);\n\n      switch (focusState) {\n        case 'none':\n          buttonEl.blur();\n          break;\n        case 'focused':\n          buttonEl.focus();\n          break;\n        case 'keyboard-focused':\n          this.button.setKeyboardFocus();\n          buttonEl.focus();\n          break;\n      }\n    }\n  }\n\n  createDisabledElement(styles, contentChildren, additionalProps) {\n    const {\n      innerDivStyle,\n      style,\n    } = this.props;\n\n    const mergedDivStyles = Object.assign({},\n      styles.root,\n      styles.innerDiv,\n      innerDivStyle,\n      style\n    );\n\n    return (\n      <div\n        {...additionalProps}\n        style={this.context.muiTheme.prepareStyles(mergedDivStyles)}\n      >\n        {contentChildren}\n      </div>\n    );\n  }\n\n  createLabelElement(styles, contentChildren, additionalProps) {\n    const {\n      innerDivStyle,\n      style,\n    } = this.props;\n\n    const mergedLabelStyles = Object.assign({},\n      styles.root,\n      styles.innerDiv,\n      innerDivStyle,\n      styles.label,\n      style\n    );\n\n    return (\n      <label\n        {...additionalProps}\n        style={this.context.muiTheme.prepareStyles(mergedLabelStyles)}\n      >\n        {contentChildren}\n      </label>\n    );\n  }\n\n  createTextElement(styles, data, key) {\n    const {prepareStyles} = this.context.muiTheme;\n    if (React.isValidElement(data)) {\n      let style = Object.assign({}, styles, data.props.style);\n      if (typeof data.type === 'string') { // if element is a native dom node\n        style = prepareStyles(style);\n      }\n      return React.cloneElement(data, {\n        key: key,\n        style: style,\n      });\n    }\n\n    return (\n      <div key={key} style={prepareStyles(styles)}>\n        {data}\n      </div>\n    );\n  }\n\n  handleKeyboardFocus = (event, isKeyboardFocused) => {\n    this.setState({isKeyboardFocused: isKeyboardFocused});\n    this.props.onKeyboardFocus(event, isKeyboardFocused);\n  };\n\n  handleMouseEnter = (event) => {\n    if (!this.state.touch) this.setState({hovered: true});\n    this.props.onMouseEnter(event);\n  };\n\n  handleMouseLeave = (event) => {\n    this.setState({hovered: false});\n    this.props.onMouseLeave(event);\n  };\n\n  handleNestedListToggle = (event) => {\n    event.stopPropagation();\n\n    if (this.props.open === null) {\n      this.setState({open: !this.state.open}, () => {\n        this.props.onNestedListToggle(this);\n      });\n    } else {\n      // Exposing `this` in the callback is quite a bad API.\n      // I'm doing a one level deep clone to expose a fake state.open.\n      this.props.onNestedListToggle({\n        ...this,\n        state: {\n          open: !this.state.open,\n        },\n      });\n    }\n  };\n\n  handleRightIconButtonKeyboardFocus = (event, isKeyboardFocused) => {\n    if (isKeyboardFocused) {\n      this.setState({\n        isKeyboardFocused: false,\n        rightIconButtonKeyboardFocused: isKeyboardFocused,\n      });\n    }\n\n    const iconButton = this.props.rightIconButton;\n\n    if (iconButton && iconButton.props.onKeyboardFocus) iconButton.props.onKeyboardFocus(event, isKeyboardFocused);\n  };\n\n  handleRightIconButtonMouseLeave = (event) => {\n    const iconButton = this.props.rightIconButton;\n    this.setState({rightIconButtonHovered: false});\n    if (iconButton && iconButton.props.onMouseLeave) iconButton.props.onMouseLeave(event);\n  };\n\n  handleRightIconButtonMouseEnter = (event) => {\n    const iconButton = this.props.rightIconButton;\n    this.setState({rightIconButtonHovered: true});\n    if (iconButton && iconButton.props.onMouseEnter) iconButton.props.onMouseEnter(event);\n  };\n\n  handleRightIconButtonMouseUp = (event) => {\n    const iconButton = this.props.rightIconButton;\n    event.stopPropagation();\n    if (iconButton && iconButton.props.onMouseUp) iconButton.props.onMouseUp(event);\n  };\n\n  handleRightIconButtonTouchTap = (event) => {\n    const iconButton = this.props.rightIconButton;\n\n    // Stop the event from bubbling up to the list-item\n    event.stopPropagation();\n    if (iconButton && iconButton.props.onTouchTap) iconButton.props.onTouchTap(event);\n  };\n\n  handleTouchStart = (event) => {\n    this.setState({touch: true});\n    this.props.onTouchStart(event);\n  };\n\n  handleTouchEnd = (event) => {\n    this.setState({touch: true});\n    this.props.onTouchEnd(event);\n  }\n\n  pushElement(children, element, baseStyles, additionalProps) {\n    if (element) {\n      const styles = Object.assign({}, baseStyles, element.props.style);\n      children.push(\n        React.cloneElement(element, {\n          key: children.length,\n          style: styles,\n          ...additionalProps,\n        })\n      );\n    }\n  }\n\n  render() {\n    const {\n      autoGenerateNestedIndicator,\n      children,\n      containerElement,\n      disabled,\n      disableKeyboardFocus,\n      hoverColor, // eslint-disable-line no-unused-vars\n      initiallyOpen, // eslint-disable-line no-unused-vars\n      innerDivStyle,\n      insetChildren, // eslint-disable-line no-unused-vars\n      leftAvatar,\n      leftCheckbox,\n      leftIcon,\n      nestedItems,\n      nestedLevel,\n      nestedListStyle,\n      onKeyboardFocus, // eslint-disable-line no-unused-vars\n      isKeyboardFocused, // eslint-disable-line no-unused-vars\n      onMouseEnter, // eslint-disable-line no-unused-vars\n      onMouseLeave, // eslint-disable-line no-unused-vars\n      onNestedListToggle, // eslint-disable-line no-unused-vars\n      onTouchStart, // eslint-disable-line no-unused-vars\n      onTouchTap,\n      rightAvatar,\n      rightIcon,\n      rightIconButton,\n      rightToggle,\n      primaryText,\n      primaryTogglesNestedList,\n      secondaryText,\n      secondaryTextLines, // eslint-disable-line no-unused-vars\n      style,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context, this.state);\n    const contentChildren = [children];\n\n    if (leftIcon) {\n      const additionalProps = {\n        color: leftIcon.props.color || this.context.muiTheme.listItem.leftIconColor,\n      };\n      this.pushElement(\n        contentChildren,\n        leftIcon,\n        Object.assign({}, styles.icons, styles.leftIcon),\n        additionalProps\n      );\n    }\n\n    if (rightIcon) {\n      const additionalProps = {\n        color: rightIcon.props.color || this.context.muiTheme.listItem.rightIconColor,\n      };\n      this.pushElement(\n        contentChildren,\n        rightIcon,\n        Object.assign({}, styles.icons, styles.rightIcon),\n        additionalProps\n      );\n    }\n\n    if (leftAvatar) {\n      this.pushElement(\n        contentChildren,\n        leftAvatar,\n        Object.assign({}, styles.avatars, styles.leftAvatar)\n      );\n    }\n\n    if (rightAvatar) {\n      this.pushElement(\n        contentChildren,\n        rightAvatar,\n        Object.assign({}, styles.avatars, styles.rightAvatar)\n      );\n    }\n\n    if (leftCheckbox) {\n      this.pushElement(\n        contentChildren,\n        leftCheckbox,\n        Object.assign({}, styles.leftCheckbox)\n      );\n    }\n\n    // RightIconButtonElement\n    const hasNestListItems = nestedItems.length;\n    const hasRightElement = rightAvatar || rightIcon || rightIconButton || rightToggle;\n    const needsNestedIndicator = hasNestListItems && autoGenerateNestedIndicator && !hasRightElement;\n\n    if (rightIconButton || needsNestedIndicator) {\n      let rightIconButtonElement = rightIconButton;\n      const rightIconButtonHandlers = {\n        onKeyboardFocus: this.handleRightIconButtonKeyboardFocus,\n        onMouseEnter: this.handleRightIconButtonMouseEnter,\n        onMouseLeave: this.handleRightIconButtonMouseLeave,\n        onTouchTap: this.handleRightIconButtonTouchTap,\n        onMouseDown: this.handleRightIconButtonMouseUp,\n        onMouseUp: this.handleRightIconButtonMouseUp,\n      };\n\n      // Create a nested list indicator icon if we don't have an icon on the right\n      if (needsNestedIndicator) {\n        rightIconButtonElement = this.state.open ?\n          <IconButton><OpenIcon /></IconButton> :\n          <IconButton><CloseIcon /></IconButton>;\n        rightIconButtonHandlers.onTouchTap = this.handleNestedListToggle;\n      }\n\n      this.pushElement(\n        contentChildren,\n        rightIconButtonElement,\n        Object.assign({}, styles.rightIconButton),\n        rightIconButtonHandlers\n      );\n    }\n\n    if (rightToggle) {\n      this.pushElement(\n        contentChildren,\n        rightToggle,\n        Object.assign({}, styles.rightToggle)\n      );\n    }\n\n    if (primaryText) {\n      const primaryTextElement = this.createTextElement(\n        styles.primaryText,\n        primaryText,\n        'primaryText'\n      );\n      contentChildren.push(primaryTextElement);\n    }\n\n    if (secondaryText) {\n      const secondaryTextElement = this.createTextElement(\n        styles.secondaryText,\n        secondaryText,\n        'secondaryText'\n      );\n      contentChildren.push(secondaryTextElement);\n    }\n\n    const nestedList = nestedItems.length ? (\n      <NestedList nestedLevel={nestedLevel} open={this.state.open} style={nestedListStyle}>\n        {nestedItems}\n      </NestedList>\n    ) : undefined;\n\n    const simpleLabel = !primaryTogglesNestedList && (leftCheckbox || rightToggle);\n\n    return (\n      <div>\n        {\n          simpleLabel ? this.createLabelElement(styles, contentChildren, other) :\n          disabled ? this.createDisabledElement(styles, contentChildren, other) : (\n            <EnhancedButton\n              containerElement={containerElement}\n              {...other}\n              disableKeyboardFocus={disableKeyboardFocus || this.state.rightIconButtonKeyboardFocused}\n              onKeyboardFocus={this.handleKeyboardFocus}\n              onMouseLeave={this.handleMouseLeave}\n              onMouseEnter={this.handleMouseEnter}\n              onTouchStart={this.handleTouchStart}\n              onTouchEnd={this.handleTouchEnd}\n              onTouchTap={primaryTogglesNestedList ? this.handleNestedListToggle : onTouchTap}\n              ref={(node) => this.button = node}\n              style={Object.assign({}, styles.root, style)}\n            >\n              <div style={prepareStyles(Object.assign(styles.innerDiv, innerDivStyle))}>\n                {contentChildren}\n              </div>\n            </EnhancedButton>\n          )\n        }\n        {nestedList}\n      </div>\n    );\n  }\n}\n\nexport default ListItem;\n"]}