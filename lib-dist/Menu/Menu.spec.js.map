{"version":3,"sources":["../../src/Menu/Menu.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","mountWithContext","childContextTypes","object","keycodeEvent","key","keyCode","createMenu","props","it","onMenuItemFocusChangeSpy","menu","disableAutoFocus","onMenuItemFocusChange","wrapper","deepEqual","args","reset","simulate","strictEqual","unmount","callCount","setProps","menuItemsAndDividers","children","length","get","type","style","marginTop","marginBottom","fontSize","color","divider","find","child","contains","MyComponent1","state","value","handleChange","event","setState","render"],"mappings":"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","file":"Menu.spec.js","sourcesContent":["/* eslint-env mocha */\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {mount, shallow} from 'enzyme';\nimport {spy} from 'sinon';\nimport {assert} from 'chai';\nimport Menu from './Menu';\nimport MenuItem from '../MenuItem';\nimport Divider from '../Divider';\nimport getMuiTheme from '../styles/getMuiTheme';\nimport keycode from 'keycode';\n\ndescribe('<Menu />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node) => shallow(node, {context: {muiTheme}});\n  const mountWithContext = (node) => mount(node, {\n    context: {muiTheme},\n    childContextTypes: {muiTheme: PropTypes.object},\n  });\n  const keycodeEvent = (key) => ({keyCode: keycode(key)});\n\n  describe('onMenuItemFocusChange', () => {\n    function createMenu(props) {\n      return (\n        <Menu {...props}>\n          <MenuItem primaryText=\"item 1\" />\n          <Divider />\n          <MenuItem primaryText=\"item 2\" />\n          <MenuItem primaryText=\"item 3\" />\n        </Menu>\n      );\n    }\n\n    it('is invoked when using the arrow key to go down to the bottom and back up to the top', () => {\n      const onMenuItemFocusChangeSpy = spy();\n      const menu = createMenu({\n        disableAutoFocus: false,\n        onMenuItemFocusChange: onMenuItemFocusChangeSpy,\n      });\n      const wrapper = mountWithContext(menu);\n\n      assert.deepEqual(onMenuItemFocusChangeSpy.args[0], [null, 0],\n        'initial focus should invoke callback with 0');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.simulate('keydown', keycodeEvent('down'));\n      assert.strictEqual(onMenuItemFocusChangeSpy.args[0][1], 1,\n        'down-arrow invokes callback with index 1');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.simulate('keydown', keycodeEvent('down'));\n      assert.strictEqual(onMenuItemFocusChangeSpy.args[0][1], 2,\n        'down-arrow invokes callback with index 2');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.simulate('keydown', keycodeEvent('down'));\n      assert.strictEqual(onMenuItemFocusChangeSpy.args[0][1], 2,\n        'down-arrow at end invokes callback with unchanged index');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.simulate('keydown', keycodeEvent('up'));\n      assert.strictEqual(onMenuItemFocusChangeSpy.args[0][1], 1,\n        'up-arrow invokes callback with 1');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.simulate('keydown', keycodeEvent('up'));\n      assert.strictEqual(onMenuItemFocusChangeSpy.args[0][1], 0,\n        'up-arrow invokes callback with 0');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.simulate('keydown', keycodeEvent('up'));\n      assert.strictEqual(onMenuItemFocusChangeSpy.args[0][1], 0,\n        'up-arrow at top invokes callback with unchanged index');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.unmount(); // Otherwise the timer in FocusRipple keeps Node from exiting\n    });\n\n    it('is invoked when props change', () => {\n      const onMenuItemFocusChangeSpy = spy();\n      const menu = createMenu({\n        disableAutoFocus: true,\n        onMenuItemFocusChange: onMenuItemFocusChangeSpy,\n      });\n      const wrapper = mountWithContext(menu);\n      assert.strictEqual(onMenuItemFocusChangeSpy.callCount, 0,\n        'should not be called when creating with disableAutoFocus=true');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.setProps({disableAutoFocus: false});\n      assert.deepEqual(onMenuItemFocusChangeSpy.args[0], [null, 0],\n        'changing disableAutoFocus to false invokes callback');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.setProps({disableAutoFocus: true});\n      assert.deepEqual(onMenuItemFocusChangeSpy.args[0], [null, -1],\n        'changing disableAutoFocus to true invokes callback');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.unmount(); // Otherwise the timer in FocusRipple keeps Node from exiting\n    });\n\n    it('is invoked for hotkeys', () => {\n      const onMenuItemFocusChangeSpy = spy();\n      const menu = (\n        <Menu\n          disableAutoFocus={false}\n          onMenuItemFocusChange={onMenuItemFocusChangeSpy}\n        >\n          <MenuItem primaryText=\"a00\" />\n          <MenuItem primaryText=\"b11\" />\n          <Divider />\n          <MenuItem primaryText=\"b00\" />\n        </Menu>\n      );\n      const wrapper = mountWithContext(menu);\n\n      wrapper.simulate('keydown', keycodeEvent('b'));\n      assert.strictEqual(onMenuItemFocusChangeSpy.args[0][1], 0,\n        '\"b\" invokes callback with focus index 0');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.simulate('keydown', keycodeEvent('0'));\n      // The Divider is incorrectly counted by Menu.setFocusIndexStartsWith().\n      assert.strictEqual(onMenuItemFocusChangeSpy.args[0][1], 3,\n        '\"b0\" invokes callback with focus index 3, which is probably a bug');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.simulate('keydown', keycodeEvent('0'));\n      assert.strictEqual(onMenuItemFocusChangeSpy.args[0][1], 3,\n        '\"b0\" invokes callback with focus index 3');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.simulate('keydown', keycodeEvent('!'));\n      // It seems like the focus index should be changed to -1 here.\n      assert.strictEqual(onMenuItemFocusChangeSpy.callCount, 0,\n        '\"b00!\" does not change the focus index, which is probably a bug');\n      onMenuItemFocusChangeSpy.reset();\n\n      wrapper.unmount(); // Otherwise the timer in FocusRipple keeps Node from exiting\n    });\n  });\n\n  it('should render MenuItem and Divider children', () => {\n    const wrapper = shallowWithContext(\n      <Menu>\n        <MenuItem primaryText=\"item 1\" />\n        <Divider />\n        <MenuItem primaryText=\"item 2\" />\n      </Menu>\n    );\n\n    const menuItemsAndDividers = wrapper.children().children().children();\n    assert.strictEqual(menuItemsAndDividers.length, 3, 'there should be three children');\n    assert.strictEqual(menuItemsAndDividers.get(0).type, MenuItem, 'first child should be a MenuItem');\n    assert.strictEqual(menuItemsAndDividers.get(1).type, Divider, 'second child should be a Divider');\n    assert.strictEqual(menuItemsAndDividers.get(2).type, MenuItem, 'third child should be a MenuItem');\n    assert.deepEqual(\n      menuItemsAndDividers.get(1).props.style,\n      {\n        marginTop: 7,\n        marginBottom: 8,\n      },\n      'the Divider gets default styles'\n    );\n  });\n\n  describe('prop: children', () => {\n    it(\"should render disabled MenuItem with the Menu's menuItemStyle\", () => {\n      const wrapper = shallowWithContext(\n        <Menu menuItemStyle={{fontSize: 60}}>\n          <MenuItem style={{fontSize: 10}} primaryText=\"item 1\" />\n          <MenuItem disabled={true} style={{fontSize: 10}} primaryText=\"item 2\" />\n        </Menu>\n      );\n\n      const menuItemsAndDividers = wrapper.children().children().children();\n      assert.strictEqual(menuItemsAndDividers.length, 2, 'there should be two children');\n      assert.strictEqual(menuItemsAndDividers.get(0).type, MenuItem, 'first child should be a MenuItem');\n      assert.strictEqual(menuItemsAndDividers.get(1).type, MenuItem, 'second child should be a MenuItem');\n      assert.strictEqual(menuItemsAndDividers.get(0).props.style.fontSize, 60,\n        'the normal MenuItem should merge styles with menuItemStyle');\n      assert.strictEqual(menuItemsAndDividers.get(1).props.style.fontSize, 60,\n        'the disabled MenuItem should merge styles with menuItemStyle');\n    });\n\n    it(\"should merge the Divider's styles over the Menu's default divider styles\", () => {\n      const style = {\n        color: 'red',\n        marginTop: '999px',\n      };\n      const wrapper = shallowWithContext(\n        <Menu>\n          <Divider style={style} />\n        </Menu>\n      );\n\n      const divider = wrapper.find(Divider);\n      assert.strictEqual(divider.length, 1, 'there should be one divider child');\n\n      assert.deepEqual(\n        divider.props().style,\n        Object.assign({}, style, {\n          marginBottom: 8,\n        }),\n        \"existing styles should be merged over Menu's styles\"\n      );\n    });\n\n    it('should be able to accept any children', () => {\n      const child = <div foo=\"bar\" />;\n      const wrapper = shallowWithContext(\n        <Menu>\n          {child}\n        </Menu>\n      );\n      assert.strictEqual(wrapper.contains(child), true);\n    });\n  });\n\n  describe('MultiSelect', () => {\n    it('should multi select 2 items after selecting 3 and deselecting 1', () => {\n      class MyComponent1 extends Component {\n        state = {\n          value: null,\n        }\n\n        handleChange = (event, value) => {\n          this.setState({value: value});\n        }\n\n        render() {\n          return (\n            <Menu\n              multiple={true}\n              value={this.state.value}\n              onChange={this.handleChange}\n            >\n              <MenuItem className=\"item1\" value=\"item1\" primaryText=\"item 1\" />\n              <MenuItem className=\"item2\" value=\"item2\" primaryText=\"item 2\" />\n              <MenuItem className=\"item3\" value=\"item3\" primaryText=\"item 3\" />\n            </Menu>\n          );\n        }\n      }\n\n      const wrapper = mountWithContext(<MyComponent1 />);\n\n      wrapper.find('.item1').simulate('touchTap');\n      wrapper.find('.item2').simulate('touchTap');\n      wrapper.find('.item3').simulate('touchTap');\n      wrapper.find('.item1').simulate('touchTap');   // deselect\n\n      assert.deepEqual(wrapper.state().value, ['item2', 'item3']);\n    });\n  });\n});\n"]}