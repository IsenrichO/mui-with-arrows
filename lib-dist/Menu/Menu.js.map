{"version":3,"sources":["../../src/Menu/Menu.js"],"names":["getStyles","props","context","desktop","maxHeight","width","muiTheme","styles","root","zIndex","menu","overflowY","divider","marginTop","marginBottom","list","display","paddingBottom","paddingTop","userSelect","selectedMenuItem","color","menuItem","selectedTextColor","Menu","filteredChildren","getFilteredChildren","children","selectedIndex","getLastSelectedIndex","newFocusIndex","disableAutoFocus","onMenuItemFocusChange","state","focusIndex","isKeyboardFocused","initiallyKeyboardFocused","keyWidth","hotKeyHolder","componentDidMount","autoWidth","setWidth","setScollPosition","componentWillReceiveProps","nextProps","multiple","setState","shouldComponentUpdate","nextState","nextContext","componentDidUpdate","getValueLink","valueLink","value","requestChange","onChange","setKeyboardFocused","keyboardFocused","Children","forEach","child","push","cloneMenuItem","childIndex","index","childIsDisabled","disabled","selectedChildStyles","selected","isChildSelected","selectedMenuItemStyle","mergedChildStyles","style","menuItemStyle","extraProps","isFocused","focusState","onTouchTap","event","handleMenuItemTouchTap","ref","cloneElement","decrementKeyboardFocusIndex","setFocusIndex","getMenuItemCount","menuItemCount","childIsADivider","type","muiName","menuItemIndex","setFocusIndexStartsWith","keys","foundIndex","primaryText","RegExp","test","item","menuValue","itemValue","isValidElement","indexOf","itemIndex","newMenuValue","splice","onItemTouchTap","incrementKeyboardFocusIndex","maxIndex","childValue","length","hasOwnProperty","newIndex","focusedMenuItem","refs","menuItemHeight","selectedOffSet","findDOMNode","offsetTop","scrollTop","scrollContainer","cancelScrollEvent","stopPropagation","preventDefault","el","listEl","elWidth","offsetWidth","minWidth","keyIncrements","newWidth","Math","ceil","render","listStyle","onEscKeyDown","other","prepareStyles","mergedRootStyles","mergedListStyles","newChildren","map","childName","newChild","handleClickAway","handleKeyDown","handleOnWheel","propTypes","bool","node","object","number","func","onKeyDown","any","stringOrNumber","defaultProps","contextTypes","isRequired","defaultPrevented","key","shiftKey","hotKeys","append","scrollHeight","clientHeight","wheelDelta","deltaY","isDeltaPositive"],"mappings":"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","file":"Menu.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport shallowEqual from 'recompose/shallowEqual';\nimport ClickAwayListener from '../internal/ClickAwayListener';\nimport keycode from 'keycode';\nimport propTypes from '../utils/propTypes';\nimport List from '../List/List';\nimport {HotKeyHolder} from './menuUtils';\n\nfunction getStyles(props, context) {\n  const {\n    desktop,\n    maxHeight,\n    width,\n  } = props;\n\n  const {muiTheme} = context;\n\n  const styles = {\n    root: {\n      // Nested div bacause the List scales x faster than it scales y\n      zIndex: muiTheme.zIndex.menu,\n      maxHeight: maxHeight,\n      overflowY: maxHeight ? 'auto' : null,\n    },\n    divider: {\n      marginTop: 7,\n      marginBottom: 8,\n    },\n    list: {\n      display: 'table-cell',\n      paddingBottom: desktop ? 16 : 8,\n      paddingTop: desktop ? 16 : 8,\n      userSelect: 'none',\n      width: width,\n    },\n    selectedMenuItem: {\n      color: muiTheme.menuItem.selectedTextColor,\n    },\n  };\n\n  return styles;\n}\n\nclass Menu extends Component {\n  static propTypes = {\n    /**\n     * If true, the width of the menu will be set automatically\n     * according to the widths of its children,\n     * using proper keyline increments (64px for desktop,\n     * 56px otherwise).\n     */\n    autoWidth: PropTypes.bool,\n    /**\n     * The content of the menu. This is usually used to pass `MenuItem`\n     * elements.\n     */\n    children: PropTypes.node,\n    /**\n     * If true, the menu item will render with compact desktop styles.\n     */\n    desktop: PropTypes.bool,\n    /**\n     * If true, the menu will not be auto-focused.\n     */\n    disableAutoFocus: PropTypes.bool,\n    /**\n     * If true, the menu will be keyboard-focused initially.\n     */\n    initiallyKeyboardFocused: PropTypes.bool,\n    /**\n     * Override the inline-styles of the underlying `List` element.\n     */\n    listStyle: PropTypes.object,\n    /**\n     * The maximum height of the menu in pixels. If specified,\n     * the menu will be scrollable if it is taller than the provided\n     * height.\n     */\n    maxHeight: PropTypes.number,\n    /**\n     * Override the inline-styles of menu items.\n     */\n    menuItemStyle: PropTypes.object,\n    /**\n     * If true, `value` must be an array and the menu will support\n     * multiple selections.\n     */\n    multiple: PropTypes.bool,\n    /**\n     * Callback function fired when a menu item with `value` not\n     * equal to the current `value` of the menu is touch-tapped.\n     *\n     * @param {object} event TouchTap event targeting the menu item.\n     * @param {any}  value If `multiple` is true, the menu's `value`\n     * array with either the menu item's `value` added (if\n     * it wasn't already selected) or omitted (if it was already selected).\n     * Otherwise, the `value` of the menu item.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Callback function fired when the menu is focused and the *Esc* key\n     * is pressed.\n     *\n     * @param {object} event `keydown` event targeting the menu.\n     */\n    onEscKeyDown: PropTypes.func,\n    /**\n     * Callback function fired when a menu item is touch-tapped.\n     *\n     * @param {object} event TouchTap event targeting the menu item.\n     * @param {object} menuItem The menu item.\n     * @param {number} index The index of the menu item.\n     */\n    onItemTouchTap: PropTypes.func,\n    /** @ignore */\n    onKeyDown: PropTypes.func,\n    /**\n     * Callback function fired when the focus on a `MenuItem` is changed.\n     * There will be some \"duplicate\" changes reported if two different\n     * focusing event happen, for example if a `MenuItem` is focused via\n     * the keyboard and then it is clicked on.\n     *\n     * @param {object} event The event that triggered the focus change.\n     * The event can be null since the focus can be changed for non-event\n     * reasons such as prop changes.\n     * @param {number} newFocusIndex The index of the newly focused\n     * `MenuItem` or `-1` if focus was lost.\n     */\n    onMenuItemFocusChange: PropTypes.func,\n    /**\n     * Override the inline-styles of selected menu items.\n     */\n    selectedMenuItemStyle: PropTypes.object,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * If `multiple` is true, an array of the `value`s of the selected\n     * menu items. Otherwise, the `value` of the selected menu item.\n     * If provided, the menu will be a controlled component.\n     * This component also supports valueLink.\n     */\n    value: PropTypes.any,\n    /**\n     * ValueLink for the menu's `value`.\n     */\n    valueLink: PropTypes.object,\n    /**\n     * The width of the menu. If not specified, the menu's width\n     * will be set according to the widths of its children, using\n     * proper keyline increments (64px for desktop, 56px otherwise).\n     */\n    width: propTypes.stringOrNumber,\n  };\n\n  static defaultProps = {\n    autoWidth: true,\n    desktop: false,\n    disableAutoFocus: false,\n    initiallyKeyboardFocused: false,\n    maxHeight: null,\n    multiple: false,\n    onChange: () => {},\n    onEscKeyDown: () => {},\n    onItemTouchTap: () => {},\n    onKeyDown: () => {},\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    const filteredChildren = this.getFilteredChildren(props.children);\n    const selectedIndex = this.getLastSelectedIndex(props, filteredChildren);\n\n    const newFocusIndex = props.disableAutoFocus ? -1 : selectedIndex >= 0 ? selectedIndex : 0;\n    if (newFocusIndex !== -1 && props.onMenuItemFocusChange) {\n      props.onMenuItemFocusChange(null, newFocusIndex);\n    }\n    this.state = {\n      focusIndex: newFocusIndex,\n      isKeyboardFocused: props.initiallyKeyboardFocused,\n      keyWidth: props.desktop ? 64 : 56,\n    };\n\n    this.hotKeyHolder = new HotKeyHolder();\n  }\n\n  componentDidMount() {\n    if (this.props.autoWidth) {\n      this.setWidth();\n    }\n    this.setScollPosition();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let selectedIndex;\n    const filteredChildren = this.getFilteredChildren(nextProps.children);\n\n    if (this.props.multiple !== true) {\n      selectedIndex = this.getLastSelectedIndex(nextProps, filteredChildren);\n    } else {\n      selectedIndex = this.state.focusIndex;\n    }\n\n    const newFocusIndex = nextProps.disableAutoFocus ? -1 : selectedIndex >= 0 ? selectedIndex : 0;\n    if (newFocusIndex !== this.state.focusIndex && this.props.onMenuItemFocusChange) {\n      this.props.onMenuItemFocusChange(null, newFocusIndex);\n    }\n    this.setState({\n      focusIndex: newFocusIndex,\n      keyWidth: nextProps.desktop ? 64 : 56,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return (\n      !shallowEqual(this.props, nextProps) ||\n      !shallowEqual(this.state, nextState) ||\n      !shallowEqual(this.context, nextContext)\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.autoWidth) this.setWidth();\n  }\n\n  handleClickAway = (event) => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    this.setFocusIndex(event, -1, false);\n  };\n\n  // Do not use outside of this component, it will be removed once valueLink is deprecated\n  getValueLink(props) {\n    return props.valueLink || {\n      value: props.value,\n      requestChange: props.onChange,\n    };\n  }\n\n  setKeyboardFocused(keyboardFocused) {\n    this.setState({\n      isKeyboardFocused: keyboardFocused,\n    });\n  }\n\n  getFilteredChildren(children) {\n    const filteredChildren = [];\n    React.Children.forEach(children, (child) => {\n      if (child) {\n        filteredChildren.push(child);\n      }\n    });\n    return filteredChildren;\n  }\n\n  cloneMenuItem(child, childIndex, styles, index) {\n    const childIsDisabled = child.props.disabled;\n\n    const selectedChildStyles = {};\n    if (!childIsDisabled) {\n      const selected = this.isChildSelected(child, this.props);\n\n      if (selected) {\n        Object.assign(selectedChildStyles, styles.selectedMenuItem, this.props.selectedMenuItemStyle);\n      }\n    }\n    const mergedChildStyles = Object.assign({}, child.props.style, this.props.menuItemStyle, selectedChildStyles);\n\n    const extraProps = {\n      desktop: this.props.desktop,\n      style: mergedChildStyles,\n    };\n    if (!childIsDisabled) {\n      const isFocused = childIndex === this.state.focusIndex;\n      let focusState = 'none';\n      if (isFocused) {\n        focusState = this.state.isKeyboardFocused ?\n          'keyboard-focused' : 'focused';\n      }\n\n      Object.assign(extraProps, {\n        focusState: focusState,\n        onTouchTap: (event) => {\n          this.handleMenuItemTouchTap(event, child, index);\n          if (child.props.onTouchTap) child.props.onTouchTap(event);\n        },\n        ref: isFocused ? 'focusedMenuItem' : null,\n      });\n    }\n    return React.cloneElement(child, extraProps);\n  }\n\n  decrementKeyboardFocusIndex(event) {\n    let index = this.state.focusIndex;\n\n    index--;\n    if (index < 0) index = 0;\n\n    this.setFocusIndex(event, index, true);\n  }\n\n  getMenuItemCount(filteredChildren) {\n    let menuItemCount = 0;\n    filteredChildren.forEach((child) => {\n      const childIsADivider = child.type && child.type.muiName === 'Divider';\n      const childIsDisabled = child.props.disabled;\n      if (!childIsADivider && !childIsDisabled) menuItemCount++;\n    });\n    return menuItemCount;\n  }\n\n  getLastSelectedIndex(props, filteredChildren) {\n    let selectedIndex = -1;\n    let menuItemIndex = 0;\n\n    filteredChildren.forEach((child) => {\n      const childIsADivider = child.type && child.type.muiName === 'Divider';\n\n      if (this.isChildSelected(child, props)) selectedIndex = menuItemIndex;\n      if (!childIsADivider) menuItemIndex++;\n    });\n\n    return selectedIndex;\n  }\n\n  handleKeyDown = (event) => {\n    const filteredChildren = this.getFilteredChildren(this.props.children);\n    const key = keycode(event);\n    switch (key) {\n      case 'down':\n        event.preventDefault();\n        this.incrementKeyboardFocusIndex(event, filteredChildren);\n        break;\n      case 'esc':\n        this.props.onEscKeyDown(event);\n        break;\n      case 'tab':\n        event.preventDefault();\n        if (event.shiftKey) {\n          this.decrementKeyboardFocusIndex(event);\n        } else {\n          this.incrementKeyboardFocusIndex(event, filteredChildren);\n        }\n        break;\n      case 'up':\n        event.preventDefault();\n        this.decrementKeyboardFocusIndex(event);\n        break;\n      default:\n        if (key && key.length === 1) {\n          const hotKeys = this.hotKeyHolder.append(key);\n          if (this.setFocusIndexStartsWith(event, hotKeys)) {\n            event.preventDefault();\n          }\n        }\n    }\n    this.props.onKeyDown(event);\n  };\n\n  setFocusIndexStartsWith(event, keys) {\n    let foundIndex = -1;\n    React.Children.forEach(this.props.children, (child, index) => {\n      if (foundIndex >= 0) {\n        return;\n      }\n      const {primaryText} = child.props;\n      if (typeof primaryText === 'string' && new RegExp(`^${keys}`, 'i').test(primaryText)) {\n        foundIndex = index;\n      }\n    });\n    if (foundIndex >= 0) {\n      this.setFocusIndex(event, foundIndex, true);\n      return true;\n    }\n    return false;\n  }\n\n  handleMenuItemTouchTap(event, item, index) {\n    const children = this.props.children;\n    const multiple = this.props.multiple;\n    const valueLink = this.getValueLink(this.props);\n    let menuValue = valueLink.value;\n    const itemValue = item.props.value;\n    const focusIndex = React.isValidElement(children) ? 0 : children.indexOf(item);\n\n    this.setFocusIndex(event, focusIndex, false);\n\n    if (multiple) {\n      menuValue = menuValue || [];\n\n      const itemIndex = menuValue.indexOf(itemValue);\n      const [...newMenuValue] = menuValue;\n      if (itemIndex === -1) {\n        newMenuValue.push(itemValue);\n      } else {\n        newMenuValue.splice(itemIndex, 1);\n      }\n\n      valueLink.requestChange(event, newMenuValue);\n    } else if (!multiple && itemValue !== menuValue) {\n      valueLink.requestChange(event, itemValue);\n    }\n\n    this.props.onItemTouchTap(event, item, index);\n  }\n\n  incrementKeyboardFocusIndex(event, filteredChildren) {\n    let index = this.state.focusIndex;\n    const maxIndex = this.getMenuItemCount(filteredChildren) - 1;\n\n    index++;\n    if (index > maxIndex) index = maxIndex;\n\n    this.setFocusIndex(event, index, true);\n  }\n\n  isChildSelected(child, props) {\n    const menuValue = this.getValueLink(props).value;\n    const childValue = child.props.value;\n\n    if (props.multiple) {\n      return menuValue && menuValue.length && menuValue.indexOf(childValue) !== -1;\n    } else {\n      return child.props.hasOwnProperty('value') && menuValue === childValue;\n    }\n  }\n\n  setFocusIndex(event, newIndex, isKeyboardFocused) {\n    if (this.props.onMenuItemFocusChange) {\n      // Do this even if `newIndex === this.state.focusIndex` to allow users\n      // to detect up-arrow on the first MenuItem or down-arrow on the last.\n      this.props.onMenuItemFocusChange(event, newIndex);\n    }\n    this.setState({\n      focusIndex: newIndex,\n      isKeyboardFocused: isKeyboardFocused,\n    });\n  }\n\n  setScollPosition() {\n    const desktop = this.props.desktop;\n    const focusedMenuItem = this.refs.focusedMenuItem;\n    const menuItemHeight = desktop ? 32 : 48;\n\n    if (focusedMenuItem) {\n      const selectedOffSet = ReactDOM.findDOMNode(focusedMenuItem).offsetTop;\n\n      // Make the focused item be the 2nd item in the list the user sees\n      let scrollTop = selectedOffSet - menuItemHeight;\n      if (scrollTop < menuItemHeight) scrollTop = 0;\n\n      ReactDOM.findDOMNode(this.refs.scrollContainer).scrollTop = scrollTop;\n    }\n  }\n\n  cancelScrollEvent(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    return false;\n  }\n\n  handleOnWheel = (event) => {\n    const scrollContainer = this.refs.scrollContainer;\n    // Only scroll lock if the the Menu is scrollable.\n    if (scrollContainer.scrollHeight <= scrollContainer.clientHeight) return;\n\n    const {scrollTop, scrollHeight, clientHeight} = scrollContainer;\n    const wheelDelta = event.deltaY;\n    const isDeltaPositive = wheelDelta > 0;\n\n    if (isDeltaPositive && wheelDelta > scrollHeight - clientHeight - scrollTop) {\n      scrollContainer.scrollTop = scrollHeight;\n      return this.cancelScrollEvent(event);\n    } else if (!isDeltaPositive && -wheelDelta > scrollTop) {\n      scrollContainer.scrollTop = 0;\n      return this.cancelScrollEvent(event);\n    }\n  }\n\n  setWidth() {\n    const el = ReactDOM.findDOMNode(this);\n    const listEl = ReactDOM.findDOMNode(this.refs.list);\n    const elWidth = el.offsetWidth;\n    const keyWidth = this.state.keyWidth;\n    const minWidth = keyWidth * 1.5;\n    let keyIncrements = elWidth / keyWidth;\n    let newWidth;\n\n    keyIncrements = keyIncrements <= 1.5 ? 1.5 : Math.ceil(keyIncrements);\n    newWidth = keyIncrements * keyWidth;\n\n    if (newWidth < minWidth) newWidth = minWidth;\n\n    el.style.width = `${newWidth}px`;\n    listEl.style.width = `${newWidth}px`;\n  }\n\n  render() {\n    const {\n      autoWidth, // eslint-disable-line no-unused-vars\n      children,\n      desktop, // eslint-disable-line no-unused-vars\n      disableAutoFocus, // eslint-disable-line no-unused-vars\n      initiallyKeyboardFocused, // eslint-disable-line no-unused-vars\n      listStyle,\n      maxHeight, // eslint-disable-line no-unused-vars\n      multiple, // eslint-disable-line no-unused-vars\n      onItemTouchTap, // eslint-disable-line no-unused-vars\n      onEscKeyDown, // eslint-disable-line no-unused-vars\n      onMenuItemFocusChange, // eslint-disable-line no-unused-vars\n      selectedMenuItemStyle, // eslint-disable-line no-unused-vars\n      menuItemStyle, // eslint-disable-line no-unused-vars\n      style,\n      value, // eslint-disable-line no-unused-vars\n      valueLink, // eslint-disable-line no-unused-vars\n      width, // eslint-disable-line no-unused-vars\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n\n    const mergedRootStyles = Object.assign(styles.root, style);\n    const mergedListStyles = Object.assign(styles.list, listStyle);\n\n    const filteredChildren = this.getFilteredChildren(children);\n\n    let menuItemIndex = 0;\n    const newChildren = React.Children.map(filteredChildren, (child, index) => {\n      const childIsDisabled = child.props.disabled;\n      const childName = child.type ? child.type.muiName : '';\n      let newChild = child;\n\n      switch (childName) {\n        case 'MenuItem':\n          newChild = this.cloneMenuItem(child, menuItemIndex, styles, index);\n          break;\n\n        case 'Divider':\n          newChild = React.cloneElement(child, {\n            style: Object.assign({}, styles.divider, child.props.style),\n          });\n          break;\n      }\n\n      if (childName === 'MenuItem' && !childIsDisabled) {\n        menuItemIndex++;\n      }\n\n      return newChild;\n    });\n\n    return (\n      <ClickAwayListener onClickAway={this.handleClickAway}>\n        <div\n          onKeyDown={this.handleKeyDown}\n          onWheel={this.handleOnWheel}\n          style={prepareStyles(mergedRootStyles)}\n          ref=\"scrollContainer\"\n          role=\"presentation\"\n        >\n          <List\n            {...other}\n            ref=\"list\"\n            style={mergedListStyles}\n            role=\"menu\"\n          >\n            {newChildren}\n          </List>\n        </div>\n      </ClickAwayListener>\n    );\n  }\n}\n\nexport default Menu;\n"]}