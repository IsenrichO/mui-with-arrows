{"version":3,"sources":["../../src/Menu/menuUtils.spec.js"],"names":["Utils","describe","hotKeyHolder","beforeEach","HotKeyHolder","afterEach","it","strictEqual","append","timeout","then","isNull","lastKeys","ms","resolve","setTimeout"],"mappings":";;;;;;AACA;;AACA;;IAAYA,K;;;;;;AAFZ;AAIAC,SAAS,YAAT,EAAuB,YAAM;AAC3BA,WAAS,cAAT,EAAyB,YAAM;AAC7B,QAAIC,qBAAJ;AACAC,eAAW,YAAM;AACfD,qBAAe,IAAIF,MAAMI,YAAV,EAAf;AACD,KAFD;AAGAC,cAAU,YAAM;AACdH,qBAAe,IAAf;AACD,KAFD;AAGAI,OAAG,0BAAH,EAA+B,YAAM;AACnC,mBAAOC,WAAP,CAAmBL,aAAaM,MAAb,CAAoB,GAApB,CAAnB,EAA6C,GAA7C;AACD,KAFD;AAGAF,OAAG,sDAAH,EAA2D,YAAM;AAC/DJ,mBAAaM,MAAb,CAAoB,GAApB;AACA,aAAOC,QAAQ,GAAR,EACJC,IADI,CACC,YAAM;AACV,qBAAOH,WAAP,CAAmBL,aAAaM,MAAb,CAAoB,GAApB,CAAnB,EAA6C,IAA7C;AACA,qBAAOD,WAAP,CAAmBL,aAAaM,MAAb,CAAoB,GAApB,CAAnB,EAA6C,KAA7C;AACA,qBAAOD,WAAP,CAAmBL,aAAaM,MAAb,CAAoB,GAApB,CAAnB,EAA6C,MAA7C;AACA,qBAAOD,WAAP,CAAmBL,aAAaM,MAAb,CAAoB,GAApB,CAAnB,EAA6C,OAA7C;AACD,OANI,EAOJE,IAPI,CAOC;AAAA,eAAMD,QAAQ,GAAR,CAAN;AAAA,OAPD,EAQJC,IARI,CAQC,YAAM;AACV,qBAAOH,WAAP,CAAmBL,aAAaM,MAAb,CAAoB,GAApB,CAAnB,EAA6C,QAA7C;AACA,qBAAOD,WAAP,CAAmBL,aAAaM,MAAb,CAAoB,GAApB,CAAnB,EAA6C,SAA7C;AACA,qBAAOD,WAAP,CAAmBL,aAAaM,MAAb,CAAoB,GAApB,CAAnB,EAA6C,UAA7C;AACD,OAZI,EAaJE,IAbI,CAaC;AAAA,eAAMD,QAAQ,GAAR,CAAN;AAAA,OAbD,EAcJC,IAdI,CAcC,YAAM;AACV,qBAAOC,MAAP,CAAcT,aAAaU,QAA3B;AACA,qBAAOL,WAAP,CAAmBL,aAAaM,MAAb,CAAoB,GAApB,CAAnB,EAA6C,GAA7C;AACD,OAjBI,CAAP;AAkBD,KApBD;AAqBA,aAASC,OAAT,CAAiBI,EAAjB,EAAqB;AACnB,aAAO,sBAAY,UAACC,OAAD;AAAA,eAAaC,WAAWD,OAAX,EAAoBD,EAApB,CAAb;AAAA,OAAZ,CAAP;AACD;AACF,GAnCD;AAoCD,CArCD","file":"menuUtils.spec.js","sourcesContent":["/* eslint-env mocha */\nimport {assert} from 'chai';\nimport * as Utils from './menuUtils';\n\ndescribe('Menu Utils', () => {\n  describe('HotKeyHolder', () => {\n    let hotKeyHolder;\n    beforeEach(() => {\n      hotKeyHolder = new Utils.HotKeyHolder();\n    });\n    afterEach(() => {\n      hotKeyHolder = null;\n    });\n    it('returns the key appended', () => {\n      assert.strictEqual(hotKeyHolder.append('k'), 'k');\n    });\n    it('holds keys within 500ms and dispose these afterwards', () => {\n      hotKeyHolder.append('k');\n      return timeout(100)\n        .then(() => {\n          assert.strictEqual(hotKeyHolder.append('o'), 'ko');\n          assert.strictEqual(hotKeyHolder.append('k'), 'kok');\n          assert.strictEqual(hotKeyHolder.append('o'), 'koko');\n          assert.strictEqual(hotKeyHolder.append('s'), 'kokos');\n        })\n        .then(() => timeout(400))\n        .then(() => {\n          assert.strictEqual(hotKeyHolder.append('a'), 'kokosa');\n          assert.strictEqual(hotKeyHolder.append('k'), 'kokosak');\n          assert.strictEqual(hotKeyHolder.append('e'), 'kokosake');\n        })\n        .then(() => timeout(600))\n        .then(() => {\n          assert.isNull(hotKeyHolder.lastKeys);\n          assert.strictEqual(hotKeyHolder.append('k'), 'k');\n        });\n    });\n    function timeout(ms) {\n      return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n  });\n});\n"]}