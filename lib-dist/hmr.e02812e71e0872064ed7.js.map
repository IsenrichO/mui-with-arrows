{"version":3,"file":"hmr.e02812e71e0872064ed7.js","sources":["webpack:///(webpack)/hot/only-dev-server.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*globals __webpack_hash__ */\r\nif(module.hot) {\r\n\tvar lastHash;\r\n\tvar upToDate = function upToDate() {\r\n\t\treturn lastHash.indexOf(__webpack_hash__) >= 0;\r\n\t};\r\n\tvar check = function check() {\r\n\t\tmodule.hot.check().then(function(updatedModules) {\r\n\t\t\tif(!updatedModules) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot find update. Need to do a full reload!\");\r\n\t\t\t\tconsole.warn(\"[HMR] (Probably because of restarting the webpack-dev-server)\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\treturn module.hot.apply({\r\n\t\t\t\tignoreUnaccepted: true,\r\n\t\t\t\tignoreDeclined: true,\r\n\t\t\t\tignoreErrored: true,\r\n\t\t\t\tonUnaccepted: function(data) {\r\n\t\t\t\t\tconsole.warn(\"Ignored an update to unaccepted module \" + data.chain.join(\" -> \"));\r\n\t\t\t\t},\r\n\t\t\t\tonDeclined: function(data) {\r\n\t\t\t\t\tconsole.warn(\"Ignored an update to declined module \" + data.chain.join(\" -> \"));\r\n\t\t\t\t},\r\n\t\t\t\tonErrored: function(data) {\r\n\t\t\t\t\tconsole.warn(\"Ignored an error while updating module \" + data.moduleId + \" (\" + data.type + \")\");\r\n\t\t\t\t}\r\n\t\t\t}).then(function(renewedModules) {\r\n\t\t\t\tif(!upToDate()) {\r\n\t\t\t\t\tcheck();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, renewedModules);\r\n\r\n\t\t\t\tif(upToDate()) {\r\n\t\t\t\t\tconsole.log(\"[HMR] App is up to date.\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}).catch(function(err) {\r\n\t\t\tvar status = module.hot.status();\r\n\t\t\tif([\"abort\", \"fail\"].indexOf(status) >= 0) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot check for update. Need to do a full reload!\");\r\n\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"[HMR] Update check failed: \" + err.stack || err.message);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tvar hotEmitter = require(\"./emitter\");\r\n\thotEmitter.on(\"webpackHotUpdate\", function(currentHash) {\r\n\t\tlastHash = currentHash;\r\n\t\tif(!upToDate()) {\r\n\t\t\tvar status = module.hot.status();\r\n\t\t\tif(status === \"idle\") {\r\n\t\t\t\tconsole.log(\"[HMR] Checking for updates on the server...\");\r\n\t\t\t\tcheck();\r\n\t\t\t} else if([\"abort\", \"fail\"].indexOf(status) >= 0) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot apply update as a previous update \" + status + \"ed. Need to do a full reload!\");\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tconsole.log(\"[HMR] Waiting for update signal from WDS...\");\r\n} else {\r\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/hot/only-dev-server.js\n// module id = 712\n// module chunks = 3"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}