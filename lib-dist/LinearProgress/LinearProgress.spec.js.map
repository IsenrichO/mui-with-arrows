{"version":3,"sources":["../../src/LinearProgress/LinearProgress.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","it","wrapper","strictEqual","children","props","style","width"],"mappings":";;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,oBAAT,EAA+B,YAAM;AACnC,MAAMC,WAAW,4BAAjB;AACA,MAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,IAAD;AAAA,WAAU,qBAAQA,IAAR,EAAc,EAACC,SAAS,EAACH,kBAAD,EAAV,EAAd,CAAV;AAAA,GAA3B;;AAEAD,WAAS,YAAT,EAAuB,YAAM;AAC3BK,OAAG,iCAAH,EAAsC,YAAM;AAC1C,UAAMC,UAAUJ,mBACd;AACE,cAAK,aADP;AAEE,eAAO,EAFT;AAGE,aAAK,CAHP;AAIE,aAAK;AAJP,QADc,CAAhB;;AASA,mBAAOK,WAAP,CAAmBD,QAAQE,QAAR,GAAmBC,KAAnB,GAA2BC,KAA3B,CAAiCC,KAApD,EAA2D,KAA3D,EACE,oCADF;AAED,KAZD;;AAcAN,OAAG,2CAAH,EAAgD,YAAM;AACpD,UAAMC,UAAUJ,mBACd;AACE,cAAK,aADP;AAEE,eAAO,EAFT;AAGE,aAAK,EAHP;AAIE,aAAK;AAJP,QADc,CAAhB;;AASA,mBAAOK,WAAP,CAAmBD,QAAQE,QAAR,GAAmBC,KAAnB,GAA2BC,KAA3B,CAAiCC,KAApD,EAA2D,KAA3D,EACE,oCADF;AAED,KAZD;;AAcAN,OAAG,kCAAH,EAAuC,YAAM;AAC3C,UAAMC,UAAUJ,mBACd;AACE,cAAK,aADP;AAEE,eAAO,EAFT;AAGE,aAAK,EAHP;AAIE,aAAK;AAJP,QADc,CAAhB;;AASA,mBAAOK,WAAP,CAAmBD,QAAQE,QAAR,GAAmBC,KAAnB,GAA2BC,KAA3B,CAAiCC,KAApD,EAA2D,IAA3D,EACE,oCADF;AAED,KAZD;AAaD,GA1CD;AA2CD,CA/CD,E,CAPA","file":"LinearProgress.spec.js","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {assert} from 'chai';\nimport LinearProgress from './LinearProgress';\nimport getMuiTheme from '../styles/getMuiTheme';\n\ndescribe('<LinearProgress />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node) => shallow(node, {context: {muiTheme}});\n\n  describe('props: min', () => {\n    it('should work when min equal zero', () => {\n      const wrapper = shallowWithContext(\n        <LinearProgress\n          mode=\"determinate\"\n          value={50}\n          min={0}\n          max={100}\n        />\n      );\n\n      assert.strictEqual(wrapper.children().props().style.width, '50%',\n        'should compute the width correctly');\n    });\n\n    it('should work when min is different to zero', () => {\n      const wrapper = shallowWithContext(\n        <LinearProgress\n          mode=\"determinate\"\n          value={75}\n          min={50}\n          max={100}\n        />\n      );\n\n      assert.strictEqual(wrapper.children().props().style.width, '50%',\n        'should compute the width correctly');\n    });\n\n    it('should work when value equal min', () => {\n      const wrapper = shallowWithContext(\n        <LinearProgress\n          mode=\"determinate\"\n          value={50}\n          min={50}\n          max={100}\n        />\n      );\n\n      assert.strictEqual(wrapper.children().props().style.width, '0%',\n        'should compute the width correctly');\n    });\n  });\n});\n"]}