{"version":3,"sources":["../../src/DropDownMenu/DropDownMenu.js"],"names":["getStyles","props","context","disabled","spacing","muiTheme","baseTheme","palette","accentColor","dropDownMenu","control","cursor","height","position","width","icon","fill","right","desktopGutterLess","top","iconSize","desktopGutterMini","iconChildren","label","color","disabledColor","textColor","desktopToolbarHeight","lineHeight","overflow","opacity","paddingLeft","desktopGutter","paddingRight","textOverflow","whiteSpace","labelWhenOpen","root","display","fontSize","desktopDropDownMenuFontSize","desktopSubheaderHeight","fontFamily","outline","transition","easeOut","rootWhenOpen","underline","borderTop","bottom","left","margin","DropDownMenu","state","open","rootNode","undefined","arrowNode","handleTouchTapControl","event","preventDefault","setState","anchorEl","handleRequestCloseMenu","close","handleEscKeyDownMenu","handleKeyDown","handleItemTouchTap","child","index","multiple","persist","onChange","value","isKeyboard","handleChange","onClose","dropArrow","dropNode","findDOMNode","focus","setKeyboardFocus","componentDidMount","autoWidth","setWidth","openImmediately","setTimeout","componentWillReceiveProps","getInputNode","el","style","hasOwnProperty","render","animated","animation","children","className","iconStyle","labelStyle","listStyle","maxHeight","menuStyleProp","menuStyle","selectionRenderer","menuItemStyle","selectedMenuItemStyle","underlineStyle","iconButton","anchorOrigin","targetOrigin","other","prepareStyles","styles","displayValue","Children","forEach","primaryText","values","selectionRendererChildren","indexOf","push","join","clientWidth","node","muiName","propTypes","origin","bool","func","string","object","number","any","defaultProps","vertical","horizontal","contextTypes","isRequired"],"mappings":"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","file":"DropDownMenu.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport transitions from '../styles/transitions';\nimport DropDownArrow from '../svg-icons/navigation/arrow-drop-down';\nimport Menu from '../Menu/Menu';\nimport ClearFix from '../internal/ClearFix';\nimport Popover from '../Popover/Popover';\nimport PopoverAnimationVertical from '../Popover/PopoverAnimationVertical';\nimport keycode from 'keycode';\nimport Events from '../utils/events';\nimport IconButton from '../IconButton';\nimport propTypes from '../utils/propTypes';\n\n\nfunction getStyles(props, context) {\n  const {disabled} = props;\n  const spacing = context.muiTheme.baseTheme.spacing;\n  const palette = context.muiTheme.baseTheme.palette;\n  const accentColor = context.muiTheme.dropDownMenu.accentColor;\n  return {\n    control: {\n      cursor: disabled ? 'not-allowed' : 'pointer',\n      height: '100%',\n      position: 'relative',\n      width: '100%',\n    },\n    icon: {\n      fill: accentColor,\n      position: 'absolute',\n      right: spacing.desktopGutterLess,\n      top: (spacing.iconSize - 24) / 2 + spacing.desktopGutterMini / 2,\n    },\n    iconChildren: {\n      fill: 'inherit',\n    },\n    label: {\n      color: disabled ? palette.disabledColor : palette.textColor,\n      height: `${spacing.desktopToolbarHeight}px`,\n      lineHeight: `${spacing.desktopToolbarHeight}px`,\n      overflow: 'hidden',\n      opacity: 1,\n      position: 'relative',\n      paddingLeft: spacing.desktopGutter,\n      paddingRight: spacing.iconSize * 2 + spacing.desktopGutterMini,\n      textOverflow: 'ellipsis',\n      top: 0,\n      whiteSpace: 'nowrap',\n    },\n    labelWhenOpen: {\n      opacity: 0,\n      top: (spacing.desktopToolbarHeight / 8),\n    },\n    root: {\n      display: 'inline-block',\n      fontSize: spacing.desktopDropDownMenuFontSize,\n      height: spacing.desktopSubheaderHeight,\n      fontFamily: context.muiTheme.baseTheme.fontFamily,\n      outline: 'none',\n      position: 'relative',\n      transition: transitions.easeOut(),\n    },\n    rootWhenOpen: {\n      opacity: 1,\n    },\n    underline: {\n      borderTop: `solid 1px ${accentColor}`,\n      bottom: 1,\n      left: 0,\n      margin: `-1px ${spacing.desktopGutter}px`,\n      right: 0,\n      position: 'absolute',\n    },\n  };\n}\n\nclass DropDownMenu extends Component {\n  static muiName = 'DropDownMenu';\n\n  // The nested styles for drop-down-menu are modified by toolbar and possibly\n  // other user components, so it will give full access to its js styles rather\n  // than just the parent.\n  static propTypes = {\n    /**\n     * This is the point on the anchor that the popover's\n     * `targetOrigin` will attach to.\n     * Options:\n     * vertical: [top, center, bottom]\n     * horizontal: [left, middle, right].\n     */\n    anchorOrigin: propTypes.origin,\n    /**\n     * If true, the popover will apply transitions when\n     * it gets added to the DOM.\n     */\n    animated: PropTypes.bool,\n    /**\n     * Override the default animation component used.\n     */\n    animation: PropTypes.func,\n    /**\n     * The width will automatically be set according to the items inside the menu.\n     * To control this width in css instead, set this prop to `false`.\n     */\n    autoWidth: PropTypes.bool,\n    /**\n     * The `MenuItem`s to populate the `Menu` with. If the `MenuItems` have the\n     * prop `label` that value will be used to render the representation of that\n     * item within the field.\n     */\n    children: PropTypes.node,\n    /**\n     * The css class name of the root element.\n     */\n    className: PropTypes.string,\n    /**\n     * Disables the menu.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Overrides default `SvgIcon` dropdown arrow component.\n     */\n    iconButton: PropTypes.node,\n    /**\n     * Overrides the styles of icon element.\n     */\n    iconStyle: PropTypes.object,\n    /**\n     * Overrides the styles of label when the `DropDownMenu` is inactive.\n     */\n    labelStyle: PropTypes.object,\n    /**\n     * The style object to use to override underlying list style.\n     */\n    listStyle: PropTypes.object,\n    /**\n     * The maximum height of the `Menu` when it is displayed.\n     */\n    maxHeight: PropTypes.number,\n    /**\n     * Override the inline-styles of menu items.\n     */\n    menuItemStyle: PropTypes.object,\n    /**\n     * Overrides the styles of `Menu` when the `DropDownMenu` is displayed.\n     */\n    menuStyle: PropTypes.object,\n    /**\n     * If true, `value` must be an array and the menu will support\n     * multiple selections.\n     */\n    multiple: PropTypes.bool,\n    /**\n     * Callback function fired when a menu item is clicked, other than the one currently selected.\n     *\n     * @param {object} event TouchTap event targeting the menu item that was clicked.\n     * @param {number} key The index of the clicked menu item in the `children` collection.\n     * @param {any} value If `multiple` is true, the menu's `value`\n     * array with either the menu item's `value` added (if\n     * it wasn't already selected) or omitted (if it was already selected).\n     * Otherwise, the `value` of the menu item.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Callback function fired when the menu is closed.\n     */\n    onClose: PropTypes.func,\n    /**\n     * Set to true to have the `DropDownMenu` automatically open on mount.\n     */\n    openImmediately: PropTypes.bool,\n    /**\n     * Override the inline-styles of selected menu items.\n     */\n    selectedMenuItemStyle: PropTypes.object,\n    /**\n     * Callback function fired when a menu item is clicked, other than the one currently selected.\n     *\n     * @param {any} value If `multiple` is true, the menu's `value`\n     * array with either the menu item's `value` added (if\n     * it wasn't already selected) or omitted (if it was already selected).\n     * Otherwise, the `value` of the menu item.\n     * @param {any} menuItem The selected `MenuItem`.\n     * If `multiple` is true, this will be an array with the `MenuItem`s matching the `value`s parameter.\n     */\n    selectionRenderer: PropTypes.func,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * This is the point on the popover which will attach to\n     * the anchor's origin.\n     * Options:\n     * vertical: [top, center, bottom]\n     * horizontal: [left, middle, right].\n     */\n    targetOrigin: propTypes.origin,\n    /**\n     * Overrides the inline-styles of the underline.\n     */\n    underlineStyle: PropTypes.object,\n    /**\n     * If `multiple` is true, an array of the `value`s of the selected\n     * menu items. Otherwise, the `value` of the selected menu item.\n     * If provided, the menu will be a controlled component.\n     */\n    value: PropTypes.any,\n  };\n\n  static defaultProps = {\n    animated: true,\n    autoWidth: true,\n    disabled: false,\n    iconButton: <DropDownArrow />,\n    openImmediately: false,\n    maxHeight: 500,\n    multiple: false,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'left',\n    },\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    open: false,\n  };\n\n  componentDidMount() {\n    if (this.props.autoWidth) {\n      this.setWidth();\n    }\n    if (this.props.openImmediately) {\n      // TODO: Temporary fix to make openImmediately work with popover.\n      /* eslint-disable react/no-did-mount-set-state */\n      setTimeout(() => this.setState({\n        open: true,\n        anchorEl: this.rootNode,\n      }), 0);\n      /* eslint-enable react/no-did-mount-set-state */\n    }\n  }\n\n  componentWillReceiveProps() {\n    if (this.props.autoWidth) {\n      this.setWidth();\n    }\n  }\n\n  rootNode = undefined;\n  arrowNode = undefined;\n\n  /**\n   * This method is deprecated but still here because the TextField\n   * need it in order to work. TODO: That will be addressed later.\n   */\n  getInputNode() {\n    const rootNode = this.rootNode;\n\n    rootNode.focus = () => {\n      if (!this.props.disabled) {\n        this.setState({\n          open: !this.state.open,\n          anchorEl: this.rootNode,\n        });\n      }\n    };\n\n    return rootNode;\n  }\n\n  setWidth() {\n    const el = this.rootNode;\n    if (!this.props.style || !this.props.style.hasOwnProperty('width')) {\n      el.style.width = 'auto';\n    }\n  }\n\n  handleTouchTapControl = (event) => {\n    event.preventDefault();\n    if (!this.props.disabled) {\n      this.setState({\n        open: !this.state.open,\n        anchorEl: this.rootNode,\n      });\n    }\n  };\n\n  handleRequestCloseMenu = () => {\n    this.close(false);\n  };\n\n  handleEscKeyDownMenu = () => {\n    this.close(true);\n  };\n\n  handleKeyDown = (event) => {\n    switch (keycode(event)) {\n      case 'up':\n      case 'down':\n      case 'space':\n      case 'enter':\n        event.preventDefault();\n        this.setState({\n          open: true,\n          anchorEl: this.rootNode,\n        });\n        break;\n    }\n  };\n\n  handleItemTouchTap = (event, child, index) => {\n    if (this.props.multiple) {\n      if (!this.state.open) {\n        this.setState({open: true});\n      }\n    } else {\n      event.persist();\n      this.setState({\n        open: false,\n      }, () => {\n        if (this.props.onChange) {\n          this.props.onChange(event, index, child.props.value);\n        }\n\n        this.close(Events.isKeyboard(event));\n      });\n    }\n  };\n\n  handleChange = (event, value) => {\n    if (this.props.multiple && this.props.onChange) {\n      this.props.onChange(event, undefined, value);\n    }\n  };\n\n  close = (isKeyboard) => {\n    this.setState({\n      open: false,\n    }, () => {\n      if (this.props.onClose) {\n        this.props.onClose();\n      }\n\n      if (isKeyboard) {\n        const dropArrow = this.arrowNode;\n        const dropNode = ReactDOM.findDOMNode(dropArrow);\n        dropNode.focus();\n        dropArrow.setKeyboardFocus(true);\n      }\n    });\n  }\n\n  render() {\n    const {\n      animated,\n      animation,\n      autoWidth,\n      multiple,\n      children,\n      className,\n      disabled,\n      iconStyle,\n      labelStyle,\n      listStyle,\n      maxHeight,\n      menuStyle: menuStyleProp,\n      selectionRenderer,\n      onClose, // eslint-disable-line no-unused-vars\n      openImmediately, // eslint-disable-line no-unused-vars\n      menuItemStyle,\n      selectedMenuItemStyle,\n      style,\n      underlineStyle,\n      value,\n      iconButton,\n      anchorOrigin,\n      targetOrigin,\n      ...other\n    } = this.props;\n    const {\n      anchorEl,\n      open,\n    } = this.state;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n\n    let displayValue = '';\n    if (!multiple) {\n      React.Children.forEach(children, (child) => {\n        if (child && value === child.props.value) {\n          if (selectionRenderer) {\n            displayValue = selectionRenderer(value, child);\n          } else {\n            // This will need to be improved (in case primaryText is a node)\n            displayValue = child.props.label || child.props.primaryText;\n          }\n        }\n      });\n    } else {\n      const values = [];\n      const selectionRendererChildren = [];\n      React.Children.forEach(children, (child) => {\n        if (child && value && value.indexOf(child.props.value) > -1) {\n          if (selectionRenderer) {\n            values.push(child.props.value);\n            selectionRendererChildren.push(child);\n          } else {\n            values.push(child.props.label || child.props.primaryText);\n          }\n        }\n      });\n\n      displayValue = [];\n      if (selectionRenderer) {\n        displayValue = selectionRenderer(values, selectionRendererChildren);\n      } else {\n        displayValue = values.join(', ');\n      }\n    }\n\n    let menuStyle;\n    if (anchorEl && !autoWidth) {\n      menuStyle = Object.assign({\n        width: anchorEl.clientWidth,\n      }, menuStyleProp);\n    } else {\n      menuStyle = menuStyleProp;\n    }\n\n    return (\n      <div\n        {...other}\n        ref={(node) => {\n          this.rootNode = node;\n        }}\n        className={className}\n        style={prepareStyles(Object.assign({}, styles.root, open && styles.rootWhenOpen, style))}\n      >\n        <ClearFix style={styles.control} onTouchTap={this.handleTouchTapControl}>\n          <div style={prepareStyles(Object.assign({}, styles.label, open && styles.labelWhenOpen, labelStyle))}>\n            {displayValue}\n          </div>\n          <IconButton\n            disabled={disabled}\n            onKeyDown={this.handleKeyDown}\n            ref={(node) => {\n              this.arrowNode = node;\n            }}\n            style={Object.assign({}, styles.icon, iconStyle)}\n            iconStyle={styles.iconChildren}\n          >\n            {iconButton}\n          </IconButton>\n          <div style={prepareStyles(Object.assign({}, styles.underline, underlineStyle))} />\n        </ClearFix>\n        <Popover\n          anchorOrigin={anchorOrigin}\n          targetOrigin={targetOrigin}\n          anchorEl={anchorEl}\n          animation={animation || PopoverAnimationVertical}\n          open={open}\n          animated={animated}\n          onRequestClose={this.handleRequestCloseMenu}\n        >\n          <Menu\n            multiple={multiple}\n            maxHeight={maxHeight}\n            desktop={true}\n            value={value}\n            onEscKeyDown={this.handleEscKeyDownMenu}\n            style={menuStyle}\n            listStyle={listStyle}\n            onItemTouchTap={this.handleItemTouchTap}\n            onChange={this.handleChange}\n            menuItemStyle={menuItemStyle}\n            selectedMenuItemStyle={selectedMenuItemStyle}\n            autoWidth={autoWidth}\n            width={!autoWidth && menuStyle ? menuStyle.width : null}\n          >\n            {children}\n          </Menu>\n        </Popover>\n      </div>\n    );\n  }\n}\n\nexport default DropDownMenu;\n"]}