{"version":3,"sources":["../../src/DropDownMenu/DropDownMenu.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","mountWithContext","childContextTypes","object","it","wrapper","strictEqual","childAt","find","prop","iconNode","defaultProps","iconButton","done","handleClose","setState","open","props","onItemTouchTap","persist","setTimeout","state","callCount","handleChange","event","value","deepEqual","args","listStyle","color","maxHeight","menuStyle","menuItemStyle","fontWeight","selectedMenuItemStyle","menu","include","desktop","style","simulate","keyCode","MyComponent1","key","render","item1","document","getElementsByClassName","ok","item2","item3","Simulate","touchTap","afterEach","unmount","items","currentValue","result","menuItem","containsMatchingElement","currentValues","values","menuItems","slice","nodes"],"mappings":"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","file":"DropDownMenu.spec.js","sourcesContent":["/* eslint-env mocha */\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {shallow, mount} from 'enzyme';\nimport {assert} from 'chai';\nimport keycode from 'keycode';\nimport {spy} from 'sinon';\nimport DropDownMenu from './DropDownMenu';\nimport getMuiTheme from '../styles/getMuiTheme';\nimport MenuItem from '../MenuItem';\nimport Menu from '../Menu/Menu';\nimport IconButton from '../IconButton';\nimport TestUtils from 'react-dom/test-utils';\n\ndescribe('<DropDownMenu />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node) => shallow(node, {context: {muiTheme}});\n  const mountWithContext = (node) => mount(node, {\n    context: {muiTheme},\n    childContextTypes: {muiTheme: PropTypes.object},\n  });\n\n  describe('prop: value', () => {\n    it('should display the right selected value text', () => {\n      const wrapper = shallowWithContext(\n        <DropDownMenu value={1}>\n          <MenuItem value={1} primaryText=\"Never\" />\n          <MenuItem value={2} primaryText=\"Every Night\" />\n        </DropDownMenu>\n      );\n\n      assert.strictEqual(wrapper.childAt(0).childAt(0).childAt(0).node, 'Never');\n    });\n  });\n\n  describe('prop: disabled', () => {\n    it('should forward the property', () => {\n      const wrapper = shallowWithContext(\n        <DropDownMenu disabled={true} />\n      );\n      assert.strictEqual(wrapper.find('IconButton').prop('disabled'), true, 'should be disabled');\n    });\n  });\n\n  describe('prop: children', () => {\n    it('should work with null child', () => {\n      const wrapper = shallowWithContext(\n        <DropDownMenu value={1}>\n          <MenuItem value={1} primaryText=\"Never\" />\n          {null}\n        </DropDownMenu>\n      );\n\n      assert.strictEqual(wrapper.childAt(0).childAt(0).childAt(0).node, 'Never');\n    });\n  });\n\n  describe('prop: iconButton', () => {\n    it('should render IconButton with given icon node', () => {\n      const iconNode = <div>test</div>;\n      const wrapper = shallowWithContext(\n        <DropDownMenu iconButton={iconNode} />\n      );\n      assert.strictEqual(wrapper.find(IconButton).childAt(0).node, iconNode);\n    });\n\n    it('should render IconButton with default icon node', () => {\n      const wrapper = shallowWithContext(\n        <DropDownMenu />\n      );\n      assert.strictEqual(wrapper.find(IconButton).childAt(0).node, DropDownMenu.defaultProps.iconButton);\n    });\n  });\n\n  describe('prop: onClose', () => {\n    it('should call onClose when an item is selected', (done) => {\n      const handleClose = spy();\n      const wrapper = shallowWithContext(\n        <DropDownMenu onClose={handleClose}>\n          <MenuItem primaryText=\"Never\" />\n        </DropDownMenu>\n      );\n\n      wrapper.setState({\n        open: true,\n      });\n      wrapper.find(Menu).props().onItemTouchTap({\n        persist: () => {},\n      });\n\n      setTimeout(() => {\n        assert.strictEqual(wrapper.state().open, false);\n        assert.strictEqual(handleClose.callCount, 1);\n        done();\n      }, 0);\n    });\n  });\n\n  describe('prop: onChange', () => {\n    it('should call onChange when an item is selected', (done) => {\n      const handleChange = spy();\n      const wrapper = shallowWithContext(\n        <DropDownMenu onChange={handleChange}>\n          <MenuItem primaryText=\"Never\" />\n        </DropDownMenu>\n      );\n\n      wrapper.setState({\n        open: true,\n      });\n      const event = {\n        persist: () => {},\n      };\n      wrapper.find(Menu).props().onItemTouchTap(\n        event,\n        {\n          props: {\n            value: 'foo',\n          },\n        },\n        3\n      );\n\n      setTimeout(() => {\n        assert.strictEqual(wrapper.state().open, false);\n        assert.strictEqual(handleChange.callCount, 1);\n        assert.deepEqual(handleChange.args[0], [\n          event,\n          3,\n          'foo',\n        ]);\n        done();\n      }, 0);\n    });\n  });\n\n  it('passes expected props through to the underlying Menu', () => {\n    const props = {\n      listStyle: {\n        color: 'black',\n      },\n      maxHeight: 10,\n      menuStyle: {\n        color: 'white',\n      },\n      menuItemStyle: {\n        fontWeight: 'bold',\n      },\n      selectedMenuItemStyle: {\n        color: 'blue',\n      },\n      value: 1,\n    };\n\n    const wrapper = shallowWithContext(\n      <DropDownMenu {...props}>\n        <div value={1} primaryText=\"Never\" />\n        <div value={2} primaryText=\"Every Night\" />\n        <div value={3} primaryText=\"Weeknights\" />\n      </DropDownMenu>\n    );\n\n    const menu = wrapper.childAt(1).childAt(0);\n    assert.include(menu.props(), {\n      desktop: true,\n      listStyle: props.listStyle,\n      maxHeight: props.maxHeight,\n      menuItemStyle: props.menuItemStyle,\n      selectedMenuItemStyle: props.selectedMenuItemStyle,\n      style: props.menuStyle,\n      value: props.value,\n    });\n  });\n\n  describe('focus handling', () => {\n    it('should open the menu when users interact', () => {\n      const wrapper = mountWithContext(\n        <DropDownMenu value={1}>\n          <MenuItem value={1} primaryText=\"Never\" />\n          <MenuItem value={2} primaryText=\"Every Night\" />\n        </DropDownMenu>\n      );\n\n      wrapper.find(IconButton).simulate('keydown', {\n        keyCode: keycode('enter'),\n      });\n      assert.strictEqual(wrapper.state().open, true, 'it should open the menu');\n    });\n  });\n\n  describe('MultiSelect', () => {\n    let wrapper;\n\n    it('should multi select 2 items after selecting 3 and deselecting 1', () => {\n      class MyComponent1 extends Component {\n        state = {\n          value: null,\n        }\n\n        handleChange = (event, key, value) => {\n          this.setState({value});\n        }\n\n        render() {\n          return (\n            <DropDownMenu\n              multiple={true}\n              value={this.state.value}\n              onChange={this.handleChange}\n            >\n              <MenuItem className=\"item1\" value=\"item1\" primaryText=\"item 1\" />\n              <MenuItem className=\"item2\" value=\"item2\" primaryText=\"item 2\" />\n              <MenuItem className=\"item3\" value=\"item3\" primaryText=\"item 3\" />\n            </DropDownMenu>\n          );\n        }\n      }\n      wrapper = mountWithContext(<MyComponent1 />);\n      wrapper.find('IconButton').simulate('touchTap');   // open\n\n      const item1 = document.getElementsByClassName('item1')[0];\n      assert.ok(item1);\n      const item2 = document.getElementsByClassName('item2')[0];\n      assert.ok(item2);\n      const item3 = document.getElementsByClassName('item3')[0];\n      assert.ok(item3);\n\n      TestUtils.Simulate.touchTap(item1);\n      TestUtils.Simulate.touchTap(item2);\n      TestUtils.Simulate.touchTap(item3);\n      assert.deepEqual(wrapper.state().value, ['item1', 'item2', 'item3']);\n\n      TestUtils.Simulate.touchTap(item1);  // deselect\n      assert.deepEqual(wrapper.state().value, ['item2', 'item3']);\n    });\n\n    afterEach(function() {\n      if (wrapper) wrapper.unmount();\n    });\n  });\n\n  describe('prop: selectionRenderer', () => {\n    it('should return the active value and MenuItem', () => {\n      const items = [\n        <MenuItem\n          value={0}\n          key={0}\n          primaryText=\"Never\"\n          className=\"item1\"\n        />,\n        <MenuItem\n          value={1}\n          key={1}\n          primaryText=\"Always\"\n          className=\"item2\"\n        />,\n      ];\n      const currentValue = 1;\n      let result = {};\n\n      const wrapper = mountWithContext(\n        <DropDownMenu\n          value={currentValue}\n          selectionRenderer={(value, menuItem) => {\n            result = {value, menuItem};\n            return menuItem;\n          }}\n        >\n          {items}\n        </DropDownMenu>\n      );\n\n      // Arguments are correct\n      assert.strictEqual(result.value, currentValue);\n      assert.deepEqual(result.menuItem, items[currentValue]);\n\n      // returned element is displayed\n      assert.strictEqual(wrapper.containsMatchingElement(items[currentValue]), true);\n    });\n\n    describe('when multiple is true', () => {\n      it('should return arrays with matching values and MenuItems', () => {\n        const items = [\n          <MenuItem\n            value={0}\n            key={0}\n            primaryText=\"Never\"\n            className=\"item1\"\n          />,\n          <MenuItem\n            value={1}\n            key={1}\n            primaryText=\"Always\"\n            className=\"item2\"\n          />,\n          <MenuItem\n            value={2}\n            key={2}\n            primaryText=\"Sometimes\"\n            className=\"item3\"\n          />,\n        ];\n        const currentValues = [0, 1];\n        let result = {};\n\n        const wrapper = mountWithContext(\n          <DropDownMenu\n            value={currentValues}\n            selectionRenderer={(values, menuItems) => {\n              result = {values, menuItems};\n              return menuItems;\n            }}\n            multiple={true}\n          >\n            {items}\n          </DropDownMenu>\n        );\n\n        // Arguments are correct\n        assert.deepEqual(result.values, currentValues);\n        assert.deepEqual(result.menuItems, items.slice(0, 2));\n\n        // First item exists\n        assert.strictEqual(wrapper.find(MenuItem).nodes[0].props.value, items[0].props.value);\n        assert.strictEqual(wrapper.containsMatchingElement(items[0]), true);\n\n        // Second item exists\n        assert.strictEqual(wrapper.find(MenuItem).nodes[1].props.value, items[1].props.value);\n        assert.strictEqual(wrapper.containsMatchingElement(items[1]), true);\n      });\n    });\n  });\n});\n"]}