{"version":3,"sources":["../../src/TimePicker/TimePickerDialog.js"],"names":["TimePickerDialog","state","open","handleRequestClose","dismiss","handleTouchTapCancel","handleTouchTapOK","props","onAccept","refs","clock","getSelectedTime","setState","handleKeyUp","event","show","onShow","onDismiss","render","bodyStyle","initialTime","format","autoOk","okLabel","cancelLabel","style","other","styles","root","fontSize","color","context","muiTheme","timePicker","clockColor","dialogContent","width","body","padding","actions","onClockChangeMinutes","undefined","propTypes","bool","object","node","oneOf","func","defaultProps","contextTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,gB;;;;;;;;;;;;0JAuBJC,K,GAAQ;AACNC,YAAM;AADA,K,QAkBRC,kB,GAAqB,YAAM;AACzB,YAAKC,OAAL;AACD,K,QAEDC,oB,GAAuB,YAAM;AAC3B,YAAKD,OAAL;AACD,K,QAEDE,gB,GAAmB,YAAM;AACvB,UAAI,MAAKC,KAAL,CAAWC,QAAf,EAAyB;AACvB,cAAKD,KAAL,CAAWC,QAAX,CAAoB,MAAKC,IAAL,CAAUC,KAAV,CAAgBC,eAAhB,EAApB;AACD;AACD,YAAKC,QAAL,CAAc;AACZV,cAAM;AADM,OAAd;AAGD,K,QAEDW,W,GAAc,UAACC,KAAD,EAAW;AACvB,cAAQ,uBAAQA,KAAR,CAAR;AACE,aAAK,OAAL;AACE,gBAAKR,gBAAL;AACA;AAHJ;AAKD,K;;;6BArCDS,I,mBAAO;AACL,QAAI,KAAKR,KAAL,CAAWS,MAAX,IAAqB,CAAC,KAAKf,KAAL,CAAWC,IAArC,EAA2C,KAAKK,KAAL,CAAWS,MAAX;AAC3C,SAAKJ,QAAL,CAAc;AACZV,YAAM;AADM,KAAd;AAGD,G;;6BAEDE,O,sBAAU;AACR,QAAI,KAAKG,KAAL,CAAWU,SAAX,IAAwB,KAAKhB,KAAL,CAAWC,IAAvC,EAA6C,KAAKK,KAAL,CAAWU,SAAX;AAC7C,SAAKL,QAAL,CAAc;AACZV,YAAM;AADM,KAAd;AAGD,G;;6BA2BDgB,M,qBAAS;AAAA,iBAWH,KAAKX,KAXF;AAAA,QAELY,SAFK,UAELA,SAFK;AAAA,QAGLC,WAHK,UAGLA,WAHK;AAAA,QAILZ,QAJK,UAILA,QAJK;AAAA,QAKLa,MALK,UAKLA,MALK;AAAA,QAMLC,MANK,UAMLA,MANK;AAAA,QAOLC,OAPK,UAOLA,OAPK;AAAA,QAQLC,WARK,UAQLA,WARK;AAAA,QASLC,KATK,UASLA,KATK;AAAA,QAUFC,KAVE;;;AAaP,QAAMC,SAAS;AACbC,YAAM;AACJC,kBAAU,EADN;AAEJC,eAAO,KAAKC,OAAL,CAAaC,QAAb,CAAsBC,UAAtB,CAAiCC;AAFpC,OADO;AAKbC,qBAAe;AACbC,eAAO;AADM,OALF;AAQbC,YAAM;AACJC,iBAAS;AADL;AARO,KAAf;;AAaA,QAAMC,UAAU,CACd;AACE,WAAK,CADP;AAEE,aAAOf,WAFT;AAGE,eAAS,IAHX;AAIE,kBAAY,KAAKnB;AAJnB,MADc,EAOd;AACE,WAAK,CADP;AAEE,aAAOkB,OAFT;AAGE,eAAS,IAHX;AAIE,kBAAY,KAAKjB;AAJnB,MAPc,CAAhB;;AAeA,QAAMkC,uBAAuBlB,WAAW,IAAX,GAAkB,KAAKhB,gBAAvB,GAA0CmC,SAAvE;AACA,QAAMvC,OAAO,KAAKD,KAAL,CAAWC,IAAxB;;AAEA,WACE;AAAA;AAAA,iCACMwB,KADN;AAEE,eAAO,sBAAcC,OAAOC,IAArB,EAA2BH,KAA3B,CAFT;AAGE,mBAAW,sBAAcE,OAAOU,IAArB,EAA2BlB,SAA3B,CAHb;AAIE,iBAASoB,OAJX;AAKE,sBAAcZ,OAAOQ,aALvB;AAME,4BAAoB,KANtB;AAOE,cAAMjC,IAPR;AAQE,wBAAgB,KAAKC;AARvB;AAUGD,cACC,8DAAe,QAAO,QAAtB,EAA+B,SAAS,KAAKW,WAA7C,GAXJ;AAaGX,cACC;AACE,aAAI,OADN;AAEE,gBAAQmB,MAFV;AAGE,qBAAaD,WAHf;AAIE,yBAAiBoB;AAJnB;AAdJ,KADF;AAwBD,G;;;4BArIME,S,GAAY;AACjBpB,UAAQ,oBAAUqB,IADD;AAEjBxB,aAAW,oBAAUyB,MAFJ;AAGjBpB,eAAa,oBAAUqB,IAHN;AAIjBxB,UAAQ,oBAAUyB,KAAV,CAAgB,CAAC,MAAD,EAAS,MAAT,CAAhB,CAJS;AAKjB1B,eAAa,oBAAUwB,MALN;AAMjBrB,WAAS,oBAAUsB,IANF;AAOjBrC,YAAU,oBAAUuC,IAPH;AAQjB9B,aAAW,oBAAU8B,IARJ;AASjB/B,UAAQ,oBAAU+B,IATD;AAUjBtB,SAAO,oBAAUmB;AAVA,C,SAaZI,Y,GAAe;AACpBzB,WAAS,IADW;AAEpBC,eAAa;AAFO,C,SAKfyB,Y,GAAe;AACpBjB,YAAU,oBAAUY,MAAV,CAAiBM;AADP,C;kBAsHTlD,gB","file":"TimePickerDialog.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport EventListener from 'react-event-listener';\nimport keycode from 'keycode';\nimport Clock from './Clock';\nimport Dialog from '../Dialog';\nimport FlatButton from '../FlatButton';\n\nclass TimePickerDialog extends Component {\n  static propTypes = {\n    autoOk: PropTypes.bool,\n    bodyStyle: PropTypes.object,\n    cancelLabel: PropTypes.node,\n    format: PropTypes.oneOf(['ampm', '24hr']),\n    initialTime: PropTypes.object,\n    okLabel: PropTypes.node,\n    onAccept: PropTypes.func,\n    onDismiss: PropTypes.func,\n    onShow: PropTypes.func,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    okLabel: 'OK',\n    cancelLabel: 'Cancel',\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    open: false,\n  };\n\n  show() {\n    if (this.props.onShow && !this.state.open) this.props.onShow();\n    this.setState({\n      open: true,\n    });\n  }\n\n  dismiss() {\n    if (this.props.onDismiss && this.state.open) this.props.onDismiss();\n    this.setState({\n      open: false,\n    });\n  }\n\n  handleRequestClose = () => {\n    this.dismiss();\n  };\n\n  handleTouchTapCancel = () => {\n    this.dismiss();\n  };\n\n  handleTouchTapOK = () => {\n    if (this.props.onAccept) {\n      this.props.onAccept(this.refs.clock.getSelectedTime());\n    }\n    this.setState({\n      open: false,\n    });\n  };\n\n  handleKeyUp = (event) => {\n    switch (keycode(event)) {\n      case 'enter':\n        this.handleTouchTapOK();\n        break;\n    }\n  };\n\n  render() {\n    const {\n      bodyStyle,\n      initialTime,\n      onAccept, // eslint-disable-line no-unused-vars\n      format,\n      autoOk,\n      okLabel,\n      cancelLabel,\n      style,\n      ...other\n    } = this.props;\n\n    const styles = {\n      root: {\n        fontSize: 14,\n        color: this.context.muiTheme.timePicker.clockColor,\n      },\n      dialogContent: {\n        width: 280,\n      },\n      body: {\n        padding: 0,\n      },\n    };\n\n    const actions = [\n      <FlatButton\n        key={0}\n        label={cancelLabel}\n        primary={true}\n        onTouchTap={this.handleTouchTapCancel}\n      />,\n      <FlatButton\n        key={1}\n        label={okLabel}\n        primary={true}\n        onTouchTap={this.handleTouchTapOK}\n      />,\n    ];\n\n    const onClockChangeMinutes = autoOk === true ? this.handleTouchTapOK : undefined;\n    const open = this.state.open;\n\n    return (\n      <Dialog\n        {...other}\n        style={Object.assign(styles.root, style)}\n        bodyStyle={Object.assign(styles.body, bodyStyle)}\n        actions={actions}\n        contentStyle={styles.dialogContent}\n        repositionOnUpdate={false}\n        open={open}\n        onRequestClose={this.handleRequestClose}\n      >\n        {open &&\n          <EventListener target=\"window\" onKeyUp={this.handleKeyUp} />\n        }\n        {open &&\n          <Clock\n            ref=\"clock\"\n            format={format}\n            initialTime={initialTime}\n            onChangeMinutes={onClockChangeMinutes}\n          />\n        }\n      </Dialog>\n    );\n  }\n}\n\nexport default TimePickerDialog;\n"]}