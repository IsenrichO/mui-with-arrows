{"version":3,"sources":["../../src/TimePicker/TimePickerDialog.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","it","onDismissCallback","onAcceptCallback","okButtonLabel","wrapper","instance","refs","clock","getSelectedTime","returns","Date","now","handleTouchTapOK","to","have","property","state","equal"],"mappings":";;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;;;AANA;AAQAA,SAAS,sBAAT,EAAiC,YAAM;AACrC,MAAMC,WAAW,4BAAjB;AACA,MAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,IAAD;AAAA,WAAU,qBAAQA,IAAR,EAAc,EAACC,SAAS,EAACH,kBAAD,EAAV,EAAd,CAAV;AAAA,GAA3B;;AAEAI,KAAG,wDAAH,EAA6D,YAAM;AACjE,QAAMC,oBAAoB,iBAA1B;AACA,QAAMC,mBAAmB,iBAAzB;AACA,QAAMC,gBAAgB,SAAtB;AACA,QAAMC,UAAUP,mBACd;AACE,iBAAWI,iBADb;AAEE,gBAAUC,gBAFZ;AAGE,eAASC;AAHX,MADc,CAAhB;AAOAC,YAAQC,QAAR,GAAmBC,IAAnB,GAA0B,EAACC,OAAO,EAACC,iBAAiB,mBAAOC,OAAP,CAAeC,KAAKC,GAAL,EAAf,CAAlB,EAAR,EAA1B;AACAP,YAAQC,QAAR,GAAmBO,gBAAnB;AACA,sBAAOX,iBAAP,EAA0BY,EAA1B,CAA6BC,IAA7B,CAAkCC,QAAlC,CAA2C,WAA3C,EAAwD,CAAxD;AACA,sBAAOb,gBAAP,EAAyBW,EAAzB,CAA4BC,IAA5B,CAAiCC,QAAjC,CAA0C,WAA1C,EAAuD,CAAvD;AACA,sBAAOX,QAAQY,KAAR,CAAc,MAAd,CAAP,EAA8BH,EAA9B,CAAiCI,KAAjC,CAAuC,KAAvC;AACD,GAhBD;AAiBD,CArBD","file":"TimePickerDialog.spec.js","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {expect} from 'chai';\nimport {spy, stub} from 'sinon';\nimport getMuiTheme from '../styles/getMuiTheme';\nimport TimePickerDialog from './TimePickerDialog';\n\ndescribe('<TimePickerDialog />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node) => shallow(node, {context: {muiTheme}});\n\n  it('should not call onDismiss when user clicks on OK label', () => {\n    const onDismissCallback = spy();\n    const onAcceptCallback = spy();\n    const okButtonLabel = 'CLICKME';\n    const wrapper = shallowWithContext(\n      <TimePickerDialog\n        onDismiss={onDismissCallback}\n        onAccept={onAcceptCallback}\n        okLabel={okButtonLabel}\n      />\n    );\n    wrapper.instance().refs = {clock: {getSelectedTime: stub().returns(Date.now())}};\n    wrapper.instance().handleTouchTapOK();\n    expect(onDismissCallback).to.have.property('callCount', 0);\n    expect(onAcceptCallback).to.have.property('callCount', 1);\n    expect(wrapper.state('open')).to.equal(false);\n  });\n});\n"]}