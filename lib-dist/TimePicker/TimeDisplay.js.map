{"version":3,"sources":["../../src/TimePicker/TimeDisplay.js"],"names":["TimeDisplay","state","transitionDirection","componentWillReceiveProps","nextProps","selectedTime","props","direction","setState","sanitizeTime","hour","getHours","min","getMinutes","toString","format","length","render","affix","mode","onSelectAffix","onSelectHour","onSelectMin","other","context","muiTheme","prepareStyles","timePicker","styles","root","padding","borderTopLeftRadius","borderTopRightRadius","backgroundColor","headerColor","color","textColor","text","margin","lineHeight","height","fontSize","display","justifyContent","alignItems","time","flex","position","affixTop","top","left","clickable","cursor","inactive","opacity","buttons","propTypes","oneOf","func","object","isRequired","defaultProps","contextTypes"],"mappings":"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","file":"TimeDisplay.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass TimeDisplay extends Component {\n  static propTypes = {\n    affix: PropTypes.oneOf(['', 'pm', 'am']),\n    format: PropTypes.oneOf(['ampm', '24hr']),\n    mode: PropTypes.oneOf(['hour', 'minute']),\n    onSelectAffix: PropTypes.func,\n    onSelectHour: PropTypes.func,\n    onSelectMin: PropTypes.func,\n    selectedTime: PropTypes.object.isRequired,\n  };\n\n  static defaultProps = {\n    affix: '',\n    mode: 'hour',\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    transitionDirection: 'up',\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.selectedTime !== this.props.selectedTime) {\n      const direction = nextProps.selectedTime > this.props.selectedTime ? 'up' : 'down';\n\n      this.setState({\n        transitionDirection: direction,\n      });\n    }\n  }\n\n  sanitizeTime() {\n    let hour = this.props.selectedTime.getHours();\n    let min = this.props.selectedTime.getMinutes().toString();\n\n    if (this.props.format === 'ampm') {\n      hour %= 12;\n      hour = hour || 12;\n    }\n\n    hour = hour.toString();\n    if (hour.length < 2 ) hour = `0${hour}`;\n    if (min.length < 2 ) min = `0${min}`;\n\n    return [hour, min];\n  }\n\n  render() {\n    const {\n      affix,\n      format,\n      mode,\n      onSelectAffix,\n      onSelectHour,\n      onSelectMin,\n      selectedTime, // eslint-disable-line no-unused-vars\n      ...other\n    } = this.props;\n\n    const {prepareStyles, timePicker} = this.context.muiTheme;\n\n    const styles = {\n      root: {\n        padding: '14px 0',\n        borderTopLeftRadius: 2,\n        borderTopRightRadius: 2,\n        backgroundColor: timePicker.headerColor,\n        color: timePicker.textColor,\n      },\n      text: {\n        margin: '6px 0',\n        lineHeight: '58px',\n        height: 58,\n        fontSize: 58,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n      },\n      time: {\n        margin: '0 10px',\n      },\n      affix: {\n        flex: 1,\n        position: 'relative',\n        lineHeight: '17px',\n        height: 17,\n        fontSize: 17,\n      },\n      affixTop: {\n        position: 'absolute',\n        top: -20,\n        left: 0,\n      },\n      clickable: {\n        cursor: 'pointer',\n      },\n      inactive: {\n        opacity: 0.7,\n      },\n    };\n\n    const [hour, min] = this.sanitizeTime();\n\n    let buttons = [];\n    if (format === 'ampm') {\n      buttons = [\n        <div\n          key=\"pm\"\n          style={prepareStyles(Object.assign({}, styles.clickable, affix === 'pm' ? {} : styles.inactive))}\n          onTouchTap={() => onSelectAffix('pm')}\n        >\n          {'PM'}\n        </div>,\n        <div\n          key=\"am\"\n          style={prepareStyles(Object.assign({},\n            styles.affixTop, styles.clickable, affix === 'am' ? {} : styles.inactive))}\n          onTouchTap={() => onSelectAffix('am')}\n        >\n          {'AM'}\n        </div>,\n      ];\n    }\n\n    return (\n      <div {...other} style={prepareStyles(styles.root)}>\n        <div style={prepareStyles(styles.text)}>\n          <div style={prepareStyles(Object.assign({}, styles.affix))} />\n          <div style={prepareStyles(styles.time)}>\n            <span\n              style={prepareStyles(Object.assign({}, styles.clickable, mode === 'hour' ? {} : styles.inactive))}\n              onTouchTap={onSelectHour}\n            >\n              {hour}\n            </span>\n            <span>:</span>\n            <span\n              style={prepareStyles(Object.assign({},\n                styles.clickable, mode === 'minute' ? {} : styles.inactive))}\n              onTouchTap={onSelectMin}\n            >\n              {min}\n            </span>\n          </div>\n          <div style={prepareStyles(Object.assign({}, styles.affix))}>\n            {buttons}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimeDisplay;\n"]}