{"version":3,"sources":["../../src/TimePicker/TimePicker.spec.js"],"names":["describe","muiTheme","shallowWithContext","node","context","it","initialTime","Date","valueTime","wrapper","strictEqual","find","props","value"],"mappings":";;AACA;;;;AACA;;AACA;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,gBAAT,EAA2B,YAAM;AAC/B,MAAMC,WAAW,4BAAjB;AACA,MAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,IAAD;AAAA,WAAU,qBAAQA,IAAR,EAAc,EAACC,SAAS,EAACH,kBAAD,EAAV,EAAd,CAAV;AAAA,GAA3B;;AAEAI,KAAG,oDAAH,EAAyD,YAAM;AAC7D,QAAMC,cAAc,IAAIC,IAAJ,CAAS,aAAT,CAApB,CAD6D,CAChB;AAC7C,QAAMC,YAAY,yBAASF,WAAT,EAAsB,CAAtB,CAAlB;;AAEA,QAAMG,UAAUP,mBACd;AACE,aAAOM,SADT;AAEE,cAAO,MAFT;AAGE,cAAO,OAHT;AAIE,mBAAaF;AAJf,MADc,CAAhB;;AASA,iBAAOI,WAAP,CAAmBD,QAAQE,IAAR,sBAAwBC,KAAxB,GAAgCC,KAAnD,EAA0D,2BAAWL,SAAX,CAA1D;AACD,GAdD;;AAgBAH,KAAG,qEAAH,EAA0E,YAAM;AAC9E,QAAMC,cAAc,IAAIC,IAAJ,CAAS,aAAT,CAApB,CAD8E,CACjC;;AAE7C,QAAME,UAAUP,mBACd,sDAAY,QAAO,MAAnB,EAA0B,QAAO,OAAjC,EAAyC,aAAaI,WAAtD,GADc,CAAhB;;AAIA,iBAAOI,WAAP,CAAmBD,QAAQE,IAAR,sBAAwBC,KAAxB,GAAgCC,KAAnD,EAA0D,2BAAWP,WAAX,CAA1D;AACD,GARD;;AAUAD,KAAG,4CAAH,EAAiD,YAAM;AACrD,QAAMC,cAAc,IAApB;AACA,QAAME,YAAY,IAAID,IAAJ,CAAS,aAAT,CAAlB,CAFqD,CAEV;;AAE3C,QAAME,UAAUP,mBACd;AACE,aAAOM,SADT;AAEE,cAAO,MAFT;AAGE,cAAO,OAHT;AAIE,mBAAaF;AAJf,MADc,CAAhB;;AASA,iBAAOI,WAAP,CAAmBD,QAAQE,IAAR,sBAAwBC,KAAxB,GAAgCC,KAAnD,EAA0D,2BAAWL,SAAX,CAA1D;AACD,GAdD;AAeD,CA7CD,E,CAVA","file":"TimePicker.spec.js","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport {shallow} from 'enzyme';\nimport {assert} from 'chai';\n\nimport TimePicker from './TimePicker';\nimport {addHours, formatTime} from './timeUtils';\nimport getMuiTheme from '../styles/getMuiTheme';\nimport TextField from '../TextField';\n\ndescribe('<TimePicker />', () => {\n  const muiTheme = getMuiTheme();\n  const shallowWithContext = (node) => shallow(node, {context: {muiTheme}});\n\n  it('has to give value prop precedence over defaultTime', () => {\n    const initialTime = new Date(1448967059892); // Tue, 01 Dec 2015 10:50:59 GMT\n    const valueTime = addHours(initialTime, 2);\n\n    const wrapper = shallowWithContext(\n      <TimePicker\n        value={valueTime}\n        format=\"ampm\"\n        locale=\"en-US\"\n        initialTime={initialTime}\n      />\n    );\n\n    assert.strictEqual(wrapper.find(TextField).props().value, formatTime(valueTime));\n  });\n\n  it('takes defaulTime prop to set first value when value prop is missing', () => {\n    const initialTime = new Date(1448967059892); // Tue, 01 Dec 2015 10:50:59 GMT\n\n    const wrapper = shallowWithContext(\n      <TimePicker format=\"ampm\" locale=\"en-US\" defaultTime={initialTime} />\n    );\n\n    assert.strictEqual(wrapper.find(TextField).props().value, formatTime(initialTime));\n  });\n\n  it('shows value prop if defaultTime is missing', () => {\n    const initialTime = null;\n    const valueTime = new Date(1448967059892); // Tue, 01 Dec 2015 10:50:59 GM\n\n    const wrapper = shallowWithContext(\n      <TimePicker\n        value={valueTime}\n        format=\"ampm\"\n        locale=\"en-US\"\n        defaultTime={initialTime}\n      />\n    );\n\n    assert.strictEqual(wrapper.find(TextField).props().value, formatTime(valueTime));\n  });\n});\n"]}