{"version":3,"sources":["../../src/TimePicker/ClockHours.js"],"names":["ClockHours","handleUp","event","preventDefault","setClock","nativeEvent","handleMove","isMousePressed","handleTouchMove","changedTouches","handleTouchEnd","componentDidMount","clockElement","findDOMNode","refs","mask","center","x","offsetWidth","y","offsetHeight","basePoint","buttons","which","finish","offsetX","offset","offsetY","hours","getHours","props","onChange","step","cx","cy","atan","Math","atan2","deg","round","value","floor","delta","pow","distance","sqrt","format","getSelected","hour","initialHours","getHourNumbers","style","pointerEvents","hourSize","i","push","map","isSelected","render","styles","root","height","width","borderRadius","position","boxSizing","hitMask","prepareStyles","context","muiTheme","numbers","propTypes","oneOf","number","func","defaultProps","Date","contextTypes","object","isRequired"],"mappings":"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","file":"ClockHours.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport ClockNumber from './ClockNumber';\nimport ClockPointer from './ClockPointer';\nimport {getTouchEventOffsetValues, rad2deg} from './timeUtils';\n\nclass ClockHours extends Component {\n  static propTypes = {\n    format: PropTypes.oneOf(['ampm', '24hr']),\n    initialHours: PropTypes.number,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    initialHours: new Date().getHours(),\n    onChange: () => {},\n    format: 'ampm',\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    const clockElement = ReactDOM.findDOMNode(this.refs.mask);\n\n    this.center = {\n      x: clockElement.offsetWidth / 2,\n      y: clockElement.offsetHeight / 2,\n    };\n\n    this.basePoint = {\n      x: this.center.x,\n      y: 0,\n    };\n  }\n\n  isMousePressed(event) {\n    if (typeof event.buttons === 'undefined') {\n      return event.nativeEvent.which;\n    }\n\n    return event.buttons;\n  }\n\n  handleUp = (event) => {\n    event.preventDefault();\n    this.setClock(event.nativeEvent, true);\n  };\n\n  handleMove = (event) => {\n    event.preventDefault();\n    if (this.isMousePressed(event) !== 1 ) return;\n    this.setClock(event.nativeEvent, false);\n  };\n\n  handleTouchMove = (event) => {\n    event.preventDefault();\n    this.setClock(event.changedTouches[0], false);\n  };\n\n  handleTouchEnd = (event) => {\n    event.preventDefault();\n    this.setClock(event.changedTouches[0], true);\n  };\n\n  setClock(event, finish) {\n    if (typeof event.offsetX === 'undefined') {\n      const offset = getTouchEventOffsetValues(event);\n\n      event.offsetX = offset.offsetX;\n      event.offsetY = offset.offsetY;\n    }\n\n    const hours = this.getHours(event.offsetX, event.offsetY);\n\n    this.props.onChange(hours, finish);\n  }\n\n  getHours(offsetX, offsetY) {\n    const step = 30;\n    const x = offsetX - this.center.x;\n    const y = offsetY - this.center.y;\n    const cx = this.basePoint.x - this.center.x;\n    const cy = this.basePoint.y - this.center.y;\n\n    const atan = Math.atan2(cx, cy) - Math.atan2(x, y);\n\n    let deg = rad2deg(atan);\n    deg = Math.round(deg / step ) * step;\n    deg %= 360;\n\n    let value = Math.floor(deg / step) || 0;\n\n    const delta = Math.pow(x, 2) + Math.pow(y, 2);\n    const distance = Math.sqrt(delta);\n\n    value = value || 12;\n    if (this.props.format === '24hr') {\n      if (distance < 90) {\n        value += 12;\n        value %= 24;\n      }\n    } else {\n      value %= 12;\n    }\n\n    return value;\n  }\n\n  getSelected() {\n    let hour = this.props.initialHours;\n\n    if (this.props.format === 'ampm') {\n      hour %= 12;\n      hour = hour || 12;\n    }\n\n    return hour;\n  }\n\n  getHourNumbers() {\n    const style = {\n      pointerEvents: 'none',\n    };\n    const hourSize = this.props.format === 'ampm' ? 12 : 24;\n\n    const hours = [];\n    for (let i = 1; i <= hourSize; i++) {\n      hours.push(i % 24);\n    }\n\n    return hours.map((hour) => {\n      const isSelected = this.getSelected() === hour;\n      return (\n        <ClockNumber\n          key={hour}\n          style={style}\n          isSelected={isSelected}\n          type=\"hour\"\n          value={hour}\n        />\n      );\n    });\n  }\n\n  render() {\n    const styles = {\n      root: {\n        height: '100%',\n        width: '100%',\n        borderRadius: '100%',\n        position: 'relative',\n        pointerEvents: 'none',\n        boxSizing: 'border-box',\n      },\n\n      hitMask: {\n        height: '100%',\n        width: '100%',\n        pointerEvents: 'auto',\n      },\n    };\n\n    const {prepareStyles} = this.context.muiTheme;\n    const hours = this.getSelected();\n    const numbers = this.getHourNumbers();\n\n    return (\n      <div ref=\"clock\" style={prepareStyles(styles.root)} >\n        <ClockPointer hasSelected={true} value={hours} type=\"hour\" />\n        {numbers}\n        <div\n          ref=\"mask\" style={prepareStyles(styles.hitMask)} onTouchMove={this.handleTouchMove}\n          onTouchEnd={this.handleTouchEnd} onMouseUp={this.handleUp} onMouseMove={this.handleMove}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ClockHours;\n"]}