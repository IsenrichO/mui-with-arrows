{"version":3,"sources":["../../src/TimePicker/ClockPointer.js"],"names":["calcAngle","value","base","angle","getStyles","props","context","state","hasSelected","type","inner","timePicker","muiTheme","styles","root","height","background","accentColor","width","left","position","bottom","transformOrigin","pointerEvents","transform","mark","boxSizing","selectTextColor","border","display","top","borderRadius","ClockPointer","componentWillMount","setState","componentWillReceiveProps","nextProps","render","prepareStyles","propTypes","bool","oneOf","number","defaultProps","contextTypes","object","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgC;AAC9BD,WAASC,IAAT;AACA,MAAMC,QAAQ,MAAMD,IAAN,GAAaD,KAA3B;AACA,SAAOE,KAAP;AACD;;AAED,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0C;AAAA,MACjCC,WADiC,GACLH,KADK,CACjCG,WADiC;AAAA,MACpBC,IADoB,GACLJ,KADK,CACpBI,IADoB;AAAA,MACdR,KADc,GACLI,KADK,CACdJ,KADc;AAAA,MAEjCS,KAFiC,GAExBH,KAFwB,CAEjCG,KAFiC;AAAA,MAGjCC,UAHiC,GAGnBL,QAAQM,QAHW,CAGjCD,UAHiC;;AAIxC,MAAMR,QAAQM,SAAS,MAAT,GAAkBT,UAAUC,KAAV,EAAiB,EAAjB,CAAlB,GAAyCD,UAAUC,KAAV,EAAiB,EAAjB,CAAvD;;AAEA,MAAMY,SAAS;AACbC,UAAM;AACJC,cAAQL,QAAQ,KAAR,GAAgB,KADpB;AAEJM,kBAAYL,WAAWM,WAFnB;AAGJC,aAAO,CAHH;AAIJC,YAAM,iBAJF;AAKJC,gBAAU,UALN;AAMJC,cAAQ,KANJ;AAOJC,uBAAiB,QAPb;AAQJC,qBAAe,MARX;AASJC,8BAAsBrB,KAAtB;AATI,KADO;AAYbsB,UAAM;AACJC,iBAAW,aADP;AAEJV,kBAAYL,WAAWgB,eAFnB;AAGJC,6BAAqBjB,WAAWM,WAH5B;AAIJY,eAASrB,eAAe,MAJpB;AAKJU,aAAO,CALH;AAMJH,cAAQ,CANJ;AAOJK,gBAAU,UAPN;AAQJU,WAAK,CAAC,CARF;AASJX,YAAM,CAAC,CATH;AAUJY,oBAAc;AAVV;AAZO,GAAf;;AA0BA,SAAOlB,MAAP;AACD;;IAEKmB,Y;;;;;;;;;;;;0JAiBJzB,K,GAAQ;AACNG,aAAO;AADD,K;;;yBAIRuB,kB,iCAAqB;AACnB,SAAKC,QAAL,CAAc;AACZxB,aAAO,wBAAQ,KAAKL,KAAb;AADK,KAAd;AAGD,G;;yBAED8B,yB,sCAA0BC,S,EAAW;AACnC,SAAKF,QAAL,CAAc;AACZxB,aAAO,wBAAQ0B,SAAR;AADK,KAAd;AAGD,G;;yBAEDC,M,qBAAS;AACP,QAAI,KAAKhC,KAAL,CAAWJ,KAAX,KAAqB,IAAzB,EAA+B;AAC7B,aAAO,2CAAP;AACD;;AAED,QAAMY,SAAST,UAAU,KAAKC,KAAf,EAAsB,KAAKC,OAA3B,EAAoC,KAAKC,KAAzC,CAAf;AALO,QAMA+B,aANA,GAMiB,KAAKhC,OAAL,CAAaM,QAN9B,CAMA0B,aANA;;;AAQP,WACE;AAAA;AAAA,QAAK,OAAOA,cAAczB,OAAOC,IAArB,CAAZ;AACE,6CAAK,OAAOwB,cAAczB,OAAOY,IAArB,CAAZ;AADF,KADF;AAKD,G;;;4BA7CMc,S,GAAY;AACjB/B,eAAa,oBAAUgC,IADN;AAEjB/B,QAAM,oBAAUgC,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB,CAFW;AAGjBxC,SAAO,oBAAUyC;AAHA,C,SAMZC,Y,GAAe;AACpBnC,eAAa,KADO;AAEpBP,SAAO,IAFa;AAGpBQ,QAAM;AAHc,C,SAMfmC,Y,GAAe;AACpBhC,YAAU,oBAAUiC,MAAV,CAAiBC;AADP,C;kBAoCTd,Y","file":"ClockPointer.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {isInner} from './timeUtils';\n\nfunction calcAngle(value, base) {\n  value %= base;\n  const angle = 360 / base * value;\n  return angle;\n}\n\nfunction getStyles(props, context, state) {\n  const {hasSelected, type, value} = props;\n  const {inner} = state;\n  const {timePicker} = context.muiTheme;\n  const angle = type === 'hour' ? calcAngle(value, 12) : calcAngle(value, 60);\n\n  const styles = {\n    root: {\n      height: inner ? '30%' : '40%',\n      background: timePicker.accentColor,\n      width: 2,\n      left: 'calc(50% - 1px)',\n      position: 'absolute',\n      bottom: '50%',\n      transformOrigin: 'bottom',\n      pointerEvents: 'none',\n      transform: `rotateZ(${angle}deg)`,\n    },\n    mark: {\n      boxSizing: 'content-box',\n      background: timePicker.selectTextColor,\n      border: `4px solid ${timePicker.accentColor}`,\n      display: hasSelected && 'none',\n      width: 7,\n      height: 7,\n      position: 'absolute',\n      top: -5,\n      left: -6,\n      borderRadius: '100%',\n    },\n  };\n\n  return styles;\n}\n\nclass ClockPointer extends Component {\n  static propTypes = {\n    hasSelected: PropTypes.bool,\n    type: PropTypes.oneOf(['hour', 'minute']),\n    value: PropTypes.number,\n  };\n\n  static defaultProps = {\n    hasSelected: false,\n    value: null,\n    type: 'minute',\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    inner: false,\n  };\n\n  componentWillMount() {\n    this.setState({\n      inner: isInner(this.props),\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      inner: isInner(nextProps),\n    });\n  }\n\n  render() {\n    if (this.props.value === null) {\n      return <span />;\n    }\n\n    const styles = getStyles(this.props, this.context, this.state);\n    const {prepareStyles} = this.context.muiTheme;\n\n    return (\n      <div style={prepareStyles(styles.root)} >\n        <div style={prepareStyles(styles.mark)} />\n      </div>\n    );\n  }\n}\n\nexport default ClockPointer;\n"]}