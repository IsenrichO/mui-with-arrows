{"version":3,"sources":["../../src/CircularProgress/CircularProgress.js"],"names":["getRelativeValue","value","min","max","clampedValue","Math","getArcLength","fraction","props","PI","size","thickness","getStyles","context","palette","muiTheme","baseTheme","styles","root","position","display","width","height","wrapper","transition","create","transitionTimingFunction","svg","path","stroke","color","primary1Color","strokeLinecap","mode","relVal","strokeDasharray","CircularProgress","componentDidMount","scalePath","refs","rotateWrapper","componentWillUnmount","clearTimeout","scalePathTimer","rotateWrapperTimer","step","style","strokeDashoffset","transitionDuration","setTimeout","set","render","innerStyle","other","prepareStyles","propTypes","string","object","number","oneOf","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"CircularProgress.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport autoPrefix from '../utils/autoPrefix';\nimport transitions from '../styles/transitions';\n\nfunction getRelativeValue(value, min, max) {\n  const clampedValue = Math.min(Math.max(min, value), max);\n  return clampedValue / (max - min);\n}\n\nfunction getArcLength(fraction, props) {\n  return fraction * Math.PI * (props.size - props.thickness);\n}\n\nfunction getStyles(props, context) {\n  const {\n    max,\n    min,\n    size,\n    value,\n  } = props;\n\n  const {baseTheme: {palette}} = context.muiTheme;\n\n  const styles = {\n    root: {\n      position: 'relative',\n      display: 'inline-block',\n      width: size,\n      height: size,\n    },\n    wrapper: {\n      width: size,\n      height: size,\n      display: 'inline-block',\n      transition: transitions.create('transform', '20s', null, 'linear'),\n      transitionTimingFunction: 'linear',\n    },\n    svg: {\n      width: size,\n      height: size,\n      position: 'relative',\n    },\n    path: {\n      stroke: props.color || palette.primary1Color,\n      strokeLinecap: 'round',\n      transition: transitions.create('all', '1.5s', null, 'ease-in-out'),\n    },\n  };\n\n  if (props.mode === 'determinate') {\n    const relVal = getRelativeValue(value, min, max);\n    styles.path.transition = transitions.create('all', '0.3s', null, 'linear');\n    styles.path.strokeDasharray = `${getArcLength(relVal, props)}, ${getArcLength(1, props)}`;\n  }\n\n  return styles;\n}\n\nclass CircularProgress extends Component {\n  static propTypes = {\n    /**\n     * Override the progress's color.\n     */\n    color: PropTypes.string,\n    /**\n     * Style for inner wrapper div.\n     */\n    innerStyle: PropTypes.object,\n    /**\n     * The max value of progress, only works in determinate mode.\n     */\n    max: PropTypes.number,\n    /**\n     * The min value of progress, only works in determinate mode.\n     */\n    min: PropTypes.number,\n    /**\n     * The mode of show your progress, indeterminate\n     * for when there is no value for progress.\n     */\n    mode: PropTypes.oneOf(['determinate', 'indeterminate']),\n    /**\n     * The diameter of the progress in pixels.\n     */\n    size: PropTypes.number,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * Stroke width in pixels.\n     */\n    thickness: PropTypes.number,\n    /**\n     * The value of progress, only works in determinate mode.\n     */\n    value: PropTypes.number,\n  };\n\n  static defaultProps = {\n    mode: 'indeterminate',\n    value: 0,\n    min: 0,\n    max: 100,\n    size: 40,\n    thickness: 3.5,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    this.scalePath(this.refs.path);\n    this.rotateWrapper(this.refs.wrapper);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.scalePathTimer);\n    clearTimeout(this.rotateWrapperTimer);\n  }\n\n  scalePath(path, step = 0) {\n    if (this.props.mode !== 'indeterminate') return;\n\n    step %= 3;\n\n    if (step === 0) {\n      path.style.strokeDasharray = `${getArcLength(0, this.props)}, ${getArcLength(1, this.props)}`;\n      path.style.strokeDashoffset = 0;\n      path.style.transitionDuration = '0ms';\n    } else if (step === 1) {\n      path.style.strokeDasharray = `${getArcLength(0.7, this.props)}, ${getArcLength(1, this.props)}`;\n      path.style.strokeDashoffset = getArcLength(-0.3, this.props);\n      path.style.transitionDuration = '750ms';\n    } else {\n      path.style.strokeDasharray = `${getArcLength(0.7, this.props)}, ${getArcLength(1, this.props)}`;\n      path.style.strokeDashoffset = getArcLength(-1, this.props);\n      path.style.transitionDuration = '850ms';\n    }\n\n    this.scalePathTimer = setTimeout(() => this.scalePath(path, step + 1), step ? 750 : 250);\n  }\n\n  rotateWrapper(wrapper) {\n    if (this.props.mode !== 'indeterminate') return;\n\n    autoPrefix.set(wrapper.style, 'transform', 'rotate(0deg)');\n    autoPrefix.set(wrapper.style, 'transitionDuration', '0ms');\n\n    setTimeout(() => {\n      autoPrefix.set(wrapper.style, 'transform', 'rotate(1800deg)');\n      autoPrefix.set(wrapper.style, 'transitionDuration', '10s');\n      autoPrefix.set(wrapper.style, 'transitionTimingFunction', 'linear');\n    }, 50);\n\n    this.rotateWrapperTimer = setTimeout(() => this.rotateWrapper(wrapper), 10050);\n  }\n\n  render() {\n    const {\n      style,\n      innerStyle,\n      size,\n      thickness,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n\n    return (\n      <div {...other} style={prepareStyles(Object.assign(styles.root, style))} >\n        <div ref=\"wrapper\" style={prepareStyles(Object.assign(styles.wrapper, innerStyle))} >\n          <svg\n            viewBox={`0 0 ${size} ${size}`}\n            style={prepareStyles(styles.svg)}\n          >\n            <circle\n              ref=\"path\"\n              style={prepareStyles(styles.path)}\n              cx={size / 2}\n              cy={size / 2}\n              r={(size - thickness) / 2}\n              fill=\"none\"\n              strokeWidth={thickness}\n              strokeMiterlimit=\"20\"\n            />\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CircularProgress;\n"]}