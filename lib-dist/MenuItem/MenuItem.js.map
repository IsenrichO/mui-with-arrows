{"version":3,"sources":["../../src/MenuItem/MenuItem.js"],"names":["nestedMenuStyle","position","getStyles","props","context","disabledColor","muiTheme","baseTheme","palette","textColor","indent","desktop","sidePadding","styles","root","color","disabled","cursor","minHeight","lineHeight","fontSize","whiteSpace","innerDivStyle","paddingLeft","leftIcon","insetChildren","checked","paddingRight","rightIcon","paddingBottom","paddingTop","secondaryText","float","leftIconDesktop","margin","left","top","rightIconDesktop","right","fill","menuItem","rightIconDesktopFill","MenuItem","state","open","cloneMenuItem","item","cloneElement","onTouchTap","event","menuItems","handleRequestClose","handleTouchTap","preventDefault","setState","anchorEl","findDOMNode","componentDidMount","applyFocusState","componentWillReceiveProps","nextProps","focusState","shouldComponentUpdate","nextState","nextContext","componentDidUpdate","componentWillUnmount","refs","listItem","render","children","style","animation","anchorOrigin","targetOrigin","value","other","prepareStyles","mergedRootStyles","mergedInnerDivStyles","leftIconElement","mergedLeftIconStyles","rightIconElement","mergedRightIconStyles","secondaryTextElement","secondaryTextIsAnElement","isValidElement","mergedSecondaryTextStyles","childMenuPopover","Children","map","hoverColor","muiName","propTypes","origin","func","bool","node","oneOf","object","element","primaryText","any","defaultProps","horizontal","vertical","contextTypes","isRequired"],"mappings":"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","file":"MenuItem.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport shallowEqual from 'recompose/shallowEqual';\nimport Popover from '../Popover/Popover';\nimport CheckIcon from '../svg-icons/navigation/check';\nimport ListItem from '../List/ListItem';\nimport Menu from '../Menu/Menu';\nimport propTypes from '../utils/propTypes';\n\nconst nestedMenuStyle = {\n  position: 'relative',\n};\n\nfunction getStyles(props, context) {\n  const disabledColor = context.muiTheme.baseTheme.palette.disabledColor;\n  const textColor = context.muiTheme.baseTheme.palette.textColor;\n  const indent = props.desktop ? 64 : 72;\n  const sidePadding = props.desktop ? 24 : 16;\n\n  const styles = {\n    root: {\n      color: props.disabled ? disabledColor : textColor,\n      cursor: props.disabled ? 'default' : 'pointer',\n      minHeight: props.desktop ? '32px' : '48px',\n      lineHeight: props.desktop ? '32px' : '48px',\n      fontSize: props.desktop ? 15 : 16,\n      whiteSpace: 'nowrap',\n    },\n\n    innerDivStyle: {\n      paddingLeft: props.leftIcon || props.insetChildren || props.checked ? indent : sidePadding,\n      paddingRight: props.rightIcon ? indent : sidePadding,\n      paddingBottom: 0,\n      paddingTop: 0,\n    },\n\n    secondaryText: {\n      float: 'right',\n    },\n\n    leftIconDesktop: {\n      margin: 0,\n      left: 24,\n      top: 4,\n    },\n\n    rightIconDesktop: {\n      margin: 0,\n      right: 24,\n      top: 4,\n      fill: context.muiTheme.menuItem.rightIconDesktopFill,\n    },\n  };\n\n  return styles;\n}\n\nclass MenuItem extends Component {\n  static muiName = 'MenuItem';\n\n  static propTypes = {\n    /**\n     * Location of the anchor for the popover of nested `MenuItem`\n     * elements.\n     * Options:\n     * horizontal: [left, middle, right]\n     * vertical: [top, center, bottom].\n     */\n    anchorOrigin: propTypes.origin,\n    /**\n     * Override the default animation component used.\n     */\n    animation: PropTypes.func,\n    /**\n     * If true, a left check mark will be rendered.\n     */\n    checked: PropTypes.bool,\n    /**\n     * Elements passed as children to the underlying `ListItem`.\n     */\n    children: PropTypes.node,\n    /**\n     * @ignore\n     * If true, the menu item will render with compact desktop\n     * styles.\n     */\n    desktop: PropTypes.bool,\n    /**\n     * If true, the menu item will be disabled.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * The focus state of the menu item. This prop is used to set the focus\n     * state of the underlying `ListItem`.\n     */\n    focusState: PropTypes.oneOf([\n      'none',\n      'focused',\n      'keyboard-focused',\n    ]),\n    /**\n     * Override the inline-styles of the inner div.\n     */\n    innerDivStyle: PropTypes.object,\n    /**\n     * If true, the children will be indented.\n     * This is only needed when there is no `leftIcon`.\n     */\n    insetChildren: PropTypes.bool,\n    /**\n     * The `SvgIcon` or `FontIcon` to be displayed on the left side.\n     */\n    leftIcon: PropTypes.element,\n    /**\n     * `MenuItem` elements to nest within the menu item.\n     */\n    menuItems: PropTypes.node,\n    /**\n     * Callback function fired when the menu item is touch-tapped.\n     *\n     * @param {object} event TouchTap event targeting the menu item.\n     */\n    onTouchTap: PropTypes.func,\n    /**\n     * Can be used to render primary text within the menu item.\n     */\n    primaryText: PropTypes.node,\n    /**\n     * The `SvgIcon` or `FontIcon` to be displayed on the right side.\n     */\n    rightIcon: PropTypes.element,\n    /**\n     * Can be used to render secondary text within the menu item.\n     */\n    secondaryText: PropTypes.node,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * Location on the popover of nested `MenuItem` elements that will attach\n     * to the anchor's origin.\n     * Options:\n     * horizontal: [left, middle, right]\n     * vertical: [top, center, bottom].\n     */\n    targetOrigin: propTypes.origin,\n    /**\n     * The value of the menu item.\n     */\n    value: PropTypes.any,\n  };\n\n  static defaultProps = {\n    anchorOrigin: {horizontal: 'right', vertical: 'top'},\n    checked: false,\n    desktop: false,\n    disabled: false,\n    focusState: 'none',\n    insetChildren: false,\n    targetOrigin: {horizontal: 'left', vertical: 'top'},\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  state = {\n    open: false,\n  };\n\n  componentDidMount() {\n    this.applyFocusState();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.open && nextProps.focusState === 'none') {\n      this.handleRequestClose();\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return (\n      !shallowEqual(this.props, nextProps) ||\n      !shallowEqual(this.state, nextState) ||\n      !shallowEqual(this.context, nextContext)\n    );\n  }\n\n  componentDidUpdate() {\n    this.applyFocusState();\n  }\n\n  componentWillUnmount() {\n    if (this.state.open) {\n      this.setState({\n        open: false,\n      });\n    }\n  }\n\n  applyFocusState() {\n    this.refs.listItem.applyFocusState(this.props.focusState);\n  }\n\n  cloneMenuItem = (item) => {\n    return React.cloneElement(item, {\n      onTouchTap: (event) => {\n        if (!item.props.menuItems) {\n          this.handleRequestClose();\n        }\n\n        if (item.props.onTouchTap) {\n          item.props.onTouchTap(event);\n        }\n      },\n    });\n  };\n\n  handleTouchTap = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      open: true,\n      anchorEl: ReactDOM.findDOMNode(this),\n    });\n\n    if (this.props.onTouchTap) {\n      this.props.onTouchTap(event);\n    }\n  };\n\n  handleRequestClose = () => {\n    this.setState({\n      open: false,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    const {\n      checked,\n      children,\n      desktop,\n      disabled,\n      focusState, // eslint-disable-line no-unused-vars\n      innerDivStyle,\n      insetChildren,\n      leftIcon,\n      menuItems,\n      rightIcon,\n      secondaryText,\n      style,\n      animation,\n      anchorOrigin,\n      targetOrigin,\n      value, // eslint-disable-line no-unused-vars\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n    const mergedRootStyles = Object.assign(styles.root, style);\n    const mergedInnerDivStyles = Object.assign(styles.innerDivStyle, innerDivStyle);\n\n    // Left Icon\n    let leftIconElement = leftIcon ? leftIcon : checked ? <CheckIcon /> : null;\n    if (leftIconElement) {\n      const mergedLeftIconStyles = desktop ?\n        Object.assign(styles.leftIconDesktop, leftIconElement.props.style) : leftIconElement.props.style;\n      leftIconElement = React.cloneElement(leftIconElement, {style: mergedLeftIconStyles});\n    }\n\n    // Right Icon\n    let rightIconElement;\n    if (rightIcon) {\n      const mergedRightIconStyles = desktop ?\n        Object.assign(styles.rightIconDesktop, rightIcon.props.style) : rightIcon.props.style;\n      rightIconElement = React.cloneElement(rightIcon, {style: mergedRightIconStyles});\n    }\n\n    // Secondary Text\n    let secondaryTextElement;\n    if (secondaryText) {\n      const secondaryTextIsAnElement = React.isValidElement(secondaryText);\n      const mergedSecondaryTextStyles = secondaryTextIsAnElement ?\n      Object.assign(styles.secondaryText, secondaryText.props.style) : null;\n\n      secondaryTextElement = secondaryTextIsAnElement ?\n        React.cloneElement(secondaryText, {style: mergedSecondaryTextStyles}) :\n        <div style={prepareStyles(styles.secondaryText)}>{secondaryText}</div>;\n    }\n    let childMenuPopover;\n    if (menuItems) {\n      childMenuPopover = (\n        <Popover\n          animation={animation}\n          anchorOrigin={anchorOrigin}\n          anchorEl={this.state.anchorEl}\n          open={this.state.open}\n          targetOrigin={targetOrigin}\n          useLayerForClickAway={false}\n          onRequestClose={this.handleRequestClose}\n        >\n          <Menu desktop={desktop} disabled={disabled} style={nestedMenuStyle}>\n            {React.Children.map(menuItems, this.cloneMenuItem)}\n          </Menu>\n        </Popover>\n      );\n      other.onTouchTap = this.handleTouchTap;\n    }\n\n    return (\n      <ListItem\n        {...other}\n        disabled={disabled}\n        hoverColor={this.context.muiTheme.menuItem.hoverColor}\n        innerDivStyle={mergedInnerDivStyles}\n        insetChildren={insetChildren}\n        leftIcon={leftIconElement}\n        ref=\"listItem\"\n        rightIcon={rightIconElement}\n        role=\"menuitem\"\n        style={mergedRootStyles}\n      >\n        {children}\n        {secondaryTextElement}\n        {childMenuPopover}\n      </ListItem>\n    );\n  }\n}\n\nexport default MenuItem;\n"]}