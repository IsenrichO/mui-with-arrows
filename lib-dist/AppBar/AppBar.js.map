{"version":3,"sources":["../../src/AppBar/AppBar.js"],"names":["getStyles","props","context","muiTheme","appBar","iconButtonSize","button","zIndex","flatButtonSize","styles","root","position","width","display","backgroundColor","color","paddingLeft","padding","paddingRight","title","whiteSpace","overflow","textOverflow","margin","paddingTop","letterSpacing","fontSize","fontWeight","titleFontWeight","textColor","height","lineHeight","mainElement","boxFlex","flex","iconButtonStyle","marginTop","marginRight","marginLeft","iconButtonIconStyle","fill","flatButton","AppBar","handleTouchTapLeftIconButton","event","onLeftIconButtonTouchTap","handleTouchTapRightIconButton","onRightIconButtonTouchTap","handleTitleTouchTap","onTitleTouchTap","componentDidMount","iconElementLeft","iconClassNameLeft","iconElementRight","iconClassNameRight","render","titleStyle","iconStyleLeft","iconStyleRight","showMenuIconButton","className","style","zDepth","children","other","prepareStyles","menuElementLeft","menuElementRight","titleComponent","String","titleElement","createElement","onTouchTap","iconLeftStyle","iconElementLeftProps","type","muiName","iconElemLeftChildren","iconStyle","length","iconRightStyle","iconElementRightProps","iconElemRightChildren","propTypes","node","string","element","object","func","bool","defaultProps","contextTypes","isRequired"],"mappings":"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","file":"AppBar.js","sourcesContent":["import React, {Component, cloneElement} from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '../IconButton';\nimport NavigationMenu from '../svg-icons/navigation/menu';\nimport Paper from '../Paper';\nimport propTypes from '../utils/propTypes';\nimport warning from 'warning';\n\nexport function getStyles(props, context) {\n  const {\n    appBar,\n    button: {\n      iconButtonSize,\n    },\n    zIndex,\n  } = context.muiTheme;\n\n  const flatButtonSize = 36;\n\n  const styles = {\n    root: {\n      position: 'relative',\n      zIndex: zIndex.appBar,\n      width: '100%',\n      display: 'flex',\n      backgroundColor: appBar.color,\n      paddingLeft: appBar.padding,\n      paddingRight: appBar.padding,\n    },\n    title: {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      margin: 0,\n      paddingTop: 0,\n      letterSpacing: 0,\n      fontSize: 24,\n      fontWeight: appBar.titleFontWeight,\n      color: appBar.textColor,\n      height: appBar.height,\n      lineHeight: `${appBar.height}px`,\n    },\n    mainElement: {\n      boxFlex: 1,\n      flex: '1',\n    },\n    iconButtonStyle: {\n      marginTop: (appBar.height - iconButtonSize) / 2,\n      marginRight: 8,\n      marginLeft: -16,\n    },\n    iconButtonIconStyle: {\n      fill: appBar.textColor,\n      color: appBar.textColor,\n    },\n    flatButton: {\n      color: appBar.textColor,\n      marginTop: (iconButtonSize - flatButtonSize) / 2 + 1,\n    },\n  };\n\n  return styles;\n}\n\nclass AppBar extends Component {\n  static muiName = 'AppBar';\n\n  static propTypes = {\n    /**\n     * Can be used to render a tab inside an app bar for instance.\n     */\n    children: PropTypes.node,\n    /**\n     * Applied to the app bar's root element.\n     */\n    className: PropTypes.string,\n    /**\n     * The classname of the icon on the left of the app bar.\n     * If you are using a stylesheet for your icons, enter the class name for the icon to be used here.\n     */\n    iconClassNameLeft: PropTypes.string,\n    /**\n     * Similiar to the iconClassNameLeft prop except that\n     * it applies to the icon displayed on the right of the app bar.\n     */\n    iconClassNameRight: PropTypes.string,\n    /**\n     * The custom element to be displayed on the left side of the\n     * app bar such as an SvgIcon.\n     */\n    iconElementLeft: PropTypes.element,\n    /**\n     * Similiar to the iconElementLeft prop except that this element is displayed on the right of the app bar.\n     */\n    iconElementRight: PropTypes.element,\n    /**\n     * Override the inline-styles of the element displayed on the left side of the app bar.\n     */\n    iconStyleLeft: PropTypes.object,\n    /**\n     * Override the inline-styles of the element displayed on the right side of the app bar.\n     */\n    iconStyleRight: PropTypes.object,\n    /**\n     * Callback function for when the left icon is selected via a touch tap.\n     *\n     * @param {object} event TouchTap event targeting the left `IconButton`.\n     */\n    onLeftIconButtonTouchTap: PropTypes.func,\n    /**\n     * Callback function for when the right icon is selected via a touch tap.\n     *\n     * @param {object} event TouchTap event targeting the right `IconButton`.\n     */\n    onRightIconButtonTouchTap: PropTypes.func,\n    /**\n     * Callback function for when the title text is selected via a touch tap.\n     *\n     * @param {object} event TouchTap event targeting the `title` node.\n     */\n    onTitleTouchTap: PropTypes.func,\n    /**\n     * Determines whether or not to display the Menu icon next to the title.\n     * Setting this prop to false will hide the icon.\n     */\n    showMenuIconButton: PropTypes.bool,\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: PropTypes.object,\n    /**\n     * The title to display on the app bar.\n     */\n    title: PropTypes.node,\n    /**\n     * Override the inline-styles of the app bar's title element.\n     */\n    titleStyle: PropTypes.object,\n    /**\n     * The zDepth of the component.\n     * The shadow of the app bar is also dependent on this property.\n     */\n    zDepth: propTypes.zDepth,\n  };\n\n  static defaultProps = {\n    showMenuIconButton: true,\n    title: '',\n    zDepth: 1,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    warning(!this.props.iconElementLeft || !this.props.iconClassNameLeft, `Material-UI: Properties iconElementLeft\n      and iconClassNameLeft cannot be simultaneously defined. Please use one or the other.`);\n\n    warning(!this.props.iconElementRight || !this.props.iconClassNameRight, `Material-UI: Properties iconElementRight\n      and iconClassNameRight cannot be simultaneously defined. Please use one or the other.`);\n  }\n\n  handleTouchTapLeftIconButton = (event) => {\n    if (this.props.onLeftIconButtonTouchTap) {\n      this.props.onLeftIconButtonTouchTap(event);\n    }\n  };\n\n  handleTouchTapRightIconButton = (event) => {\n    if (this.props.onRightIconButtonTouchTap) {\n      this.props.onRightIconButtonTouchTap(event);\n    }\n  };\n\n  handleTitleTouchTap = (event) => {\n    if (this.props.onTitleTouchTap) {\n      this.props.onTitleTouchTap(event);\n    }\n  };\n\n  render() {\n    const {\n      title,\n      titleStyle,\n      iconStyleLeft,\n      iconStyleRight,\n      onTitleTouchTap, // eslint-disable-line no-unused-vars\n      showMenuIconButton,\n      iconElementLeft,\n      iconElementRight,\n      iconClassNameLeft,\n      iconClassNameRight,\n      onLeftIconButtonTouchTap, // eslint-disable-line no-unused-vars\n      onRightIconButtonTouchTap, // eslint-disable-line no-unused-vars\n      className,\n      style,\n      zDepth,\n      children,\n      ...other\n    } = this.props;\n\n    const {prepareStyles} = this.context.muiTheme;\n    const styles = getStyles(this.props, this.context);\n\n    let menuElementLeft;\n    let menuElementRight;\n\n    // If the title is a string, wrap in an h1 tag.\n    // If not, wrap in a div tag.\n    const titleComponent = typeof title === 'string' || title instanceof String ? 'h1' : 'div';\n\n    const titleElement = React.createElement(titleComponent, {\n      onTouchTap: this.handleTitleTouchTap,\n      style: prepareStyles(Object.assign(styles.title, styles.mainElement, titleStyle)),\n    }, title);\n\n    const iconLeftStyle = Object.assign({}, styles.iconButtonStyle, iconStyleLeft);\n\n    if (showMenuIconButton) {\n      if (iconElementLeft) {\n        const iconElementLeftProps = {};\n\n        if (iconElementLeft.type.muiName === 'IconButton') {\n          const iconElemLeftChildren = iconElementLeft.props.children;\n          const iconButtonIconStyle = !(\n            iconElemLeftChildren &&\n            iconElemLeftChildren.props &&\n            iconElemLeftChildren.props.color\n          ) ? styles.iconButtonIconStyle : null;\n\n          iconElementLeftProps.iconStyle = Object.assign({}, iconButtonIconStyle, iconElementLeft.props.iconStyle);\n        }\n\n        if (!iconElementLeft.props.onTouchTap && this.props.onLeftIconButtonTouchTap) {\n          iconElementLeftProps.onTouchTap = this.handleTouchTapLeftIconButton;\n        }\n\n        menuElementLeft = (\n          <div style={prepareStyles(iconLeftStyle)}>\n            {Object.keys(iconElementLeftProps).length > 0 ?\n              cloneElement(iconElementLeft, iconElementLeftProps) :\n              iconElementLeft}\n          </div>\n        );\n      } else {\n        menuElementLeft = (\n          <IconButton\n            style={iconLeftStyle}\n            iconStyle={styles.iconButtonIconStyle}\n            iconClassName={iconClassNameLeft}\n            onTouchTap={this.handleTouchTapLeftIconButton}\n          >\n            {iconClassNameLeft ?\n              '' :\n              <NavigationMenu style={Object.assign({}, styles.iconButtonIconStyle)} />\n            }\n          </IconButton>\n        );\n      }\n    }\n\n    const iconRightStyle = Object.assign({}, styles.iconButtonStyle, {\n      marginRight: -16,\n      marginLeft: 'auto',\n    }, iconStyleRight);\n\n    if (iconElementRight) {\n      const iconElementRightProps = {};\n\n      switch (iconElementRight.type.muiName) {\n        case 'IconMenu':\n        case 'IconButton':\n          const iconElemRightChildren = iconElementRight.props.children;\n          const iconButtonIconStyle = !(\n            iconElemRightChildren &&\n            iconElemRightChildren.props &&\n            iconElemRightChildren.props.color\n          ) ? styles.iconButtonIconStyle : null;\n\n          iconElementRightProps.iconStyle = Object.assign({}, iconButtonIconStyle, iconElementRight.props.iconStyle);\n          break;\n\n        case 'FlatButton':\n          iconElementRightProps.style = Object.assign({}, styles.flatButton, iconElementRight.props.style);\n          break;\n\n        default:\n      }\n\n      if (!iconElementRight.props.onTouchTap && this.props.onRightIconButtonTouchTap) {\n        iconElementRightProps.onTouchTap = this.handleTouchTapRightIconButton;\n      }\n\n      menuElementRight = (\n        <div style={prepareStyles(iconRightStyle)}>\n          {Object.keys(iconElementRightProps).length > 0 ?\n            cloneElement(iconElementRight, iconElementRightProps) :\n            iconElementRight}\n        </div>\n      );\n    } else if (iconClassNameRight) {\n      menuElementRight = (\n        <IconButton\n          style={iconRightStyle}\n          iconStyle={styles.iconButtonIconStyle}\n          iconClassName={iconClassNameRight}\n          onTouchTap={this.handleTouchTapRightIconButton}\n        />\n      );\n    }\n\n    return (\n      <Paper\n        {...other}\n        rounded={false}\n        className={className}\n        style={Object.assign({}, styles.root, style)}\n        zDepth={zDepth}\n      >\n        {menuElementLeft}\n        {titleElement}\n        {menuElementRight}\n        {children}\n      </Paper>\n    );\n  }\n}\n\nexport default AppBar;\n"]}